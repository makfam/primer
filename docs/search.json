[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":" isn’t book ’re looking .First, book students Gov 1005: Big Data, course offered Government Department Harvard University. Everything book designed make experience students better. material may useful people outside class, don’t really care .Second, book changes time. --date possible.Third, highly opinionated matters . unlikely share views.","code":""},{"path":"preamble.html","id":"preamble","chapter":"Preamble","heading":"Preamble","text":"","code":""},{"path":"preamble.html","id":"dedication","chapter":"Preamble","heading":"Dedication","text":"romantic, Kay —\nlove?\nNeed ask anyone tell us things?","code":""},{"path":"preamble.html","id":"acknowledgements","chapter":"Preamble","heading":"Acknowledgements","text":"work builds contributions many people R Open Source communities. particular, like acknowledge extensive material taken Diez, Barr, Çetinkaya-Rundel (2014), Grolemund Wickham (2017), Irizarry (2019), Kim Ismay (2019), Jenny Bryan (2019), Diez, Barr, Çetinkaya-Rundel (2014), Downey (2012), Grolemund Wickham (2017), Kuhn Silge (2020), Legler Roback (2019).Alboukadel Kassambara, Andrew Tran, Thomas Mock others kindly allowed re-use /modification work.Thanks contributions Harvard students, colleagues random people met internet: Albert Rivero, Nicholas Dow, Celine Vendler, Sophia Zheng, Maria Burzillo, Robert McKenzie, Deborah Gonzalez, Beau Meche, Evelyn Cai, Miro Bergam, Jessica Edwards, Emma Freeman, Cassidy Bargell, Yao Yu, Vivian Zhang, Ishan Bhatt, Mak Famulari, Tahmid Ahmed, Eliot Min, Hannah Valencia, Asmer Safi, Erin Guetzloe, Shea Jenkins, Thomas Weiss, Diego Martinez, Andy Wang, Tyler Simko, Jake Berg, Connor Rust, Liam Rust, Alla Baranovsky, Carine Hajjar, Diego Arias, Becca Gill, Stephanie Yao Tyler Simko.like gratefully acknowledge funding Derek Bok Center Teaching Learning Harvard University, via Digital Teaching Fellows Learning Lab Undergraduate Fellows programs.","code":""},{"path":"preamble.html","id":"license","chapter":"Preamble","heading":"License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"shopping-week.html","id":"shopping-week","chapter":"Shopping Week","heading":"Shopping Week","text":" world confronts us. Make decisions must.","code":""},{"path":"shopping-week.html","id":"install-r-and-rstudio","chapter":"Shopping Week","heading":"Install R and RStudio","text":"\nFIGURE 0.1: Analogy difference R RStudio.\nThroughout book, assume using R via RStudio. R RStudio car’s engine dashboard.precisely, R programming language runs computations, RStudio integrated development environment (IDE) provides interface many convenient features. Just access speedometer, rearview mirrors, navigation system makes driving much easier, using RStudio’s interface makes using R much easier.Download install R RStudio (Desktop version) computer.first: Download install R.first: Download install R.second: Download install RStudio Desktop (free version).second: Download install RStudio Desktop (free version).","code":""},{"path":"shopping-week.html","id":"using-r-via-rstudio","chapter":"Shopping Week","heading":"Using R via RStudio","text":"\nFIGURE 0.2: Icons R versus RStudio computer.\nMuch don’t drive car interacting directly engine rather interacting elements car’s dashboard, won’t using R directly rather use RStudio’s interface. install R RStudio computer, ’ll two new programs (also called applications) can open. Always work RStudio directly R application.Although experimental, allow two modes working R RStudio. One computer. FAS OnDemand, available Canvas page. try highlight differences two approaches , use R RStudio, many. require students use course semester. Large datasets generally require use OnDemand.FAS OnDemand provides similar experience RStudio Cloud, paid service. data science today done machine. data science future done cloud.Let’s begin getting familiar RStudio, whether machine FAS OnDemand. Open RStudio. see three panes, panels, dividing screen: Console pane, Files pane, Environment pane.workspace. Start big pane left:three panels (tabs) window, ’ll focusing Console Terminal. first start R, Console gives information version R. Console can type run R code. example, type 1 + 1 hit return, Console returns 2.Look top right:main two tabs ’ll using Environment Git (yet available). Environment tab shows datasets variables currently loaded RStudio. case, loaded dataset 3407 rows 5 columns variable x equal 5. , Environment empty. Let’s change . Go Console type:Now, hit return/enter see variable x equal 5 Environment tab. must always hit return/enter typing command, otherwise RStudio realize want R execute command. Look bottom right window:Files tab displays computer’s file system. create project later, tab automatically show contents project’s folder. Plots tab show preview plots make RStudio. Help discussed later.","code":"\nx <- 5"},{"path":"shopping-week.html","id":"package-installation","chapter":"Shopping Week","heading":"Package installation","text":"Another point confusion many new R users idea R package. R packages, also known R libraries, extend functionality R providing additional functions data.\nFIGURE 0.3: Analogy R versus R packages.\nR like new mobile phone: certain amount features use first time, doesn’t everything. R packages like apps can download onto phone.Let’s continue analogy considering Instagram app editing sharing pictures. Say purchased new phone like share photo just taken friends Instagram. need :Install app: Since phone new include Instagram app, need download app. . (might need future update app.)Open app: ’ve installed Instagram, need open . need every time use app.Instagram open phone, can proceed share photos. process similar using R package. need :\nFIGURE 0.4: Installing versus loading R package\nInstall package: like installing app phone. packages installed default install R RStudio. Thus want use package first time, need install . ’ve installed package, likely won’t install unless want update newer version.“Load” package: “Loading” package like opening app phone. Packages “loaded” default start RStudio. need “load” package want use every time restart RStudio.Let’s install three packages need Primer. (step necessary working FAS OnDemand. packages already installed .) Console pane within RStudio, type:press Return/Enter keyboard. Note must include quotation marks around names packages. Note packages depend packages, automatically installed.One tricky aspect process R occasionally ask :Unless good reason , always answer “” question.R packages generally live one two places: CRAN (rhymes “clan”) mature, popular packages Github experimental, less stable packages. install.packages() gets packages CRAN. end section, also install two packages Github.","code":"\ninstall.packages(c(\"remotes\", \"tidyverse\", \"usethis\"))Do you want to install from sources the packages which \nneed compilation? (Yes/no/cancel)"},{"path":"shopping-week.html","id":"package-loading","chapter":"Shopping Week","heading":"Package loading","text":"Recall ’ve installed package, need “load” . using library() command.example, load remotes package, run following code Console. mean “run following code?” Either type copy--paste code Console hit enter/return key.running earlier code, blinking cursor return next > symbol — generally referred “prompt.” means successful remotes package now loaded ready use. , however, get red “error message” reads:haven’t successfully installed package. get error message, make sure install remotes package proceeding.historical reasons packages also known libraries, relevant command loading library().Note R occasionally ask want install packages. Almost time want , otherwise R asking .","code":"\nlibrary(remotes)Error in library(remotes) : there is no package called ‘remotes’"},{"path":"shopping-week.html","id":"package-use","chapter":"Shopping Week","heading":"Package use","text":"One common mistake new R users make wanting use particular packages forget load first using library() command. Remember: load package want use every time start RStudio. don’t load package attempting use one features, ’ll see error message similar :different error message one just saw package installed yet. R telling trying use function package yet loaded. R doesn’t know find function using.Let’s install two packages available CRAN: primer.data primer.tutorials. (step necessary working FAS OnDemand. packages already installed , although may need reinstall later semester update .) Copy paste following R Console:Depending computer/browser/locale, might fail, especially quotation marks paste turn “curly.” case, type commands .Many new packages installed. may take minutes. something gets messed , often useful use remove.packages() command remove problematic package install .","code":"Error: could not find function\nlibrary(remotes)\nremotes::install_github(c(\"PPBDS/primer.data\", \"PPBDS/primer.tutorials\"))"},{"path":"shopping-week.html","id":"rstudio-set-up","chapter":"Shopping Week","heading":"RStudio set up","text":"thank us later run commands now:changes default value RStudio start session afresh, junk leftover last session. makes much easier create reproducible analysis.","code":"\nlibrary(usethis)\nuse_blank_slate()"},{"path":"shopping-week.html","id":"tutorials","chapter":"Shopping Week","heading":"Tutorials","text":"chapter textbook, one tutorials available primer.tutorials package. order access tutorials, run library(primer.tutorials) R Console.can access tutorials via Tutorial pane top right tab RStudio. Click “Start tutorial” “Shopping Week” tutorial. don’t see tutorials, try clicking “Home” button – little house symbol thin red roof upper right. may need restart R session. Click “Session” menu select “Restart R.”order expand window, can drag enlarge tutorial pane inside RStudio. order open pop-window, click “Show New Window” icon next home icon.may notice Jobs tab lower left create output tutorial starting . RStudio running code create tutorial. accidentally clicked “Start Tutorial” like stop job running, can click back arrow Jobs tab, press red stop sign icon.work saved RStudio sessions. can complete tutorial multiple sittings. completed tutorial, follow instructions tutorial Submit panel upload resulting file Canvas.Tutorials graded pass/fail. hard fail. long make honest attempt, pass easily.Now ? ways can close tutorial safely can quit RStudio session.clicked “Show new window” working tutorial pop-window, simply X pop-window.working tutorial inside Tutorial pane RStudio, simply press red stop sign icon.complete Shopping Week tutorial, ready start course.","code":""},{"path":"shopping-week.html","id":"summary","chapter":"Shopping Week","heading":"0.1 Summary","text":"done following:Installed latest versions R RStudio.Installed latest versions R RStudio.Installed, CRAN, three packages:Installed, CRAN, three packages:Installed, Github, two packages:Set RStudio preferences:Completed Shopping Week tutorial, downloaded answers submitted via Canvas.","code":"\ninstall.packages(c(\"remotes\", \"tidyverse\", \"usethis\"))\nremotes::install_github(c(\"PPBDS/primer.data\",\n                          \"PPBDS/primer.tutorials\"))\nusethis::use_blank_slate()"},{"path":"visualization.html","id":"visualization","chapter":"1 Visualization","heading":"1 Visualization","text":"Everyone loves visualizations.read chapter, completed associated tutorials, able create graphics like one data. Join us journey.","code":""},{"path":"visualization.html","id":"getting-started","chapter":"1 Visualization","heading":"1.1 Getting Started","text":"chapter focuses ggplot2, one core packages tidyverse. access datasets, help pages, functions use chapter, load tidyverse:one line code loads packages associated tidyverse, packages use almost every data analysis. also tells functions tidyverse conflict functions base R packages might loaded. (hide messages book ugly.)run code get error message “package called ‘tidyverse’,” ’ll need install package first using code . , run library(tidyverse) .need explicit function (dataset) comes , ’ll use double colon operator (::) like : package::function(). example, ggplot2::ggplot() tells explicitly using ggplot() function ggplot2 package.","code":"\nlibrary(tidyverse)\ninstall.packages(\"tidyverse\")"},{"path":"visualization.html","id":"how-do-i-code-in-r","chapter":"1 Visualization","heading":"1.1.1 How do I code in R?","text":"Unlike statistical software programs like Excel, SPSS, Minitab provide point--click interfaces, R interpreted language. means type commands written R code. words, code/program R. Note ’ll use terms “coding” “programming” interchangeably.want slower introduction providing , check short book, Getting Used R, RStudio, R Markdown. Ismay Kennedy (2016) includes screencast recordings can follow along pause learn. include introduction R Markdown, tool used reproducible research R.","code":""},{"path":"visualization.html","id":"tips","chapter":"1 Visualization","heading":"1.1.2 Tips","text":"Remember computers actually smart. tell computer everything needs . instructions give computer can mistakes .Remember computers actually smart. tell computer everything needs . instructions give computer can mistakes .Take “copy, paste, tweak” approach. Take existing code know works modify suit need. experience, move away approach write code scratch.Take “copy, paste, tweak” approach. Take existing code know works modify suit need. experience, move away approach write code scratch.need practice every day. Learning code/program like learning foreign language. Daily practice sine qua non excellence.need practice every day. Learning code/program like learning foreign language. Daily practice sine qua non excellence.","code":""},{"path":"visualization.html","id":"terminology","chapter":"1 Visualization","heading":"1.1.3 Terminology","text":"use different font distinguish regular text computer_code.Console pane: enter commands RStudio.Console pane: enter commands RStudio.Running code: act telling R put code action.Running code: act telling R put code action.Objects: values stored R. can assign values objects display contents objects. Use assignment operator <- . can choose almost name like object, long name begin number special character like +, *, -, /, ^, etc.Objects: values stored R. can assign values objects display contents objects. Use assignment operator <- . can choose almost name like object, long name begin number special character like +, *, -, /, ^, etc.example can save result 4 + 3 object named x.Now, whenever type x, value 4 + 3 show:Data types: integers, doubles/numerics, logicals, characters. Integers values like -1, 0, 2, 4092. Doubles numerics larger set values containing integers also fractions decimal values like -24.932 0.8. Logicals either TRUE FALSE. Characters text like “cabbage” “Hamilton,” “Wire greatest TV show ever.” Characters often denoted quotation marks around .Data types: integers, doubles/numerics, logicals, characters. Integers values like -1, 0, 2, 4092. Doubles numerics larger set values containing integers also fractions decimal values like -24.932 0.8. Logicals either TRUE FALSE. Characters text like “cabbage” “Hamilton,” “Wire greatest TV show ever.” Characters often denoted quotation marks around .Vectors: collection values. created using c() function, c stands “combine.”Vectors: collection values. created using c() function, c stands “combine.”example, c(2, 4, 6, 8) creates four element vector numeric values.Factors: used represent “categorical data.” go detail variable types Chapter 2.Factors: used represent “categorical data.” go detail variable types Chapter 2.Data frames: rectangular spreadsheets data. Rows correspond units. Columns correspond variables. Modern data frames called tibbles.Data frames: rectangular spreadsheets data. Rows correspond units. Columns correspond variables. Modern data frames called tibbles.Boolean algebra: TRUE/FALSE statements mathematical operators < (less ), <= (less equal ), != (equal ). example, 4 + 2 >= 3 return TRUE, 3 + 5 <= 1 return FALSE.Boolean algebra: TRUE/FALSE statements mathematical operators < (less ), <= (less equal ), != (equal ). example, 4 + 2 >= 3 return TRUE, 3 + 5 <= 1 return FALSE.Inclusion: Tested %% operator. example, \"B\" %% c(\"\", \"B\") returns TRUE \"C\" %% c(\"\", \"B\") returns FALSE.Inclusion: Tested %% operator. example, \"B\" %% c(\"\", \"B\") returns TRUE \"C\" %% c(\"\", \"B\") returns FALSE.Equality: Tested using ==. example, 2 + 1 == 3 compares 2 + 1 3 legal R code, returning TRUE. hand, 2 + 1 = 3 return error can assign one number another.Equality: Tested using ==. example, 2 + 1 == 3 compares 2 + 1 3 legal R code, returning TRUE. hand, 2 + 1 = 3 return error can assign one number another.Logical operators: & representing “” well | representing “.” example, (2 + 1 == 3) & (2 + 1 == 4) returns FALSE since clauses TRUE (first clause TRUE). hand, (2 + 1 == 3) | (2 + 1 == 4) returns TRUE since least one two clauses TRUE.Logical operators: & representing “” well | representing “.” example, (2 + 1 == 3) & (2 + 1 == 4) returns FALSE since clauses TRUE (first clause TRUE). hand, (2 + 1 == 3) | (2 + 1 == 4) returns TRUE since least one two clauses TRUE.Functions: perform tasks, also called commands. take inputs called arguments return outputs. can either manually specify function’s arguments use function’s default values.Functions: perform tasks, also called commands. take inputs called arguments return outputs. can either manually specify function’s arguments use function’s default values.example, sqrt(64) return square root argument 64.Help files: provide documentation various functions datasets. can bring help files adding ? name function data frame run console.Help files: provide documentation various functions datasets. can bring help files adding ? name function data frame run console.Code comments: text placed # symbol. Nothing run # symbol, useful include human readable comments code, always .Code comments: text placed # symbol. Nothing run # symbol, useful include human readable comments code, always .Errors, warnings, messages: generally reported red font. error, code run. Read (/google) message try fix . Warnings don’t prevent code completing. example, create scatterplot based data two missing values, see warning: Warning: Removed 2 rows containing missing values (geom_point). Messages similar. cases, fix underlying issue warning/message goes away.Errors, warnings, messages: generally reported red font. error, code run. Read (/google) message try fix . Warnings don’t prevent code completing. example, create scatterplot based data two missing values, see warning: Warning: Removed 2 rows containing missing values (geom_point). Messages similar. cases, fix underlying issue warning/message goes away.","code":"\nx <- 4 + 3\nx## [1] 7\nc(1, 2, 3, 4)## [1] 1 2 3 4\nsqrt(64)## [1] 8"},{"path":"visualization.html","id":"examining-trains","chapter":"1 Visualization","heading":"1.1.4 Examining trains","text":"data comes us “spreadsheet”-type format. “spreadsheet”-type datasets called data frames tibbles R. Let’s explore trains tibble primer.data package. data comes Enos (2014), investigated attitudes toward immigration among Boston commuuters.Let’s unpack output:tibble specific kind data frame. particular data frame 115 rows corresponding different units, meaing people case.tibble specific kind data frame. particular data frame 115 rows corresponding different units, meaing people case.tibble also 14 columns corresponding variables describe observation.tibble also 14 columns corresponding variables describe observation.see, default, top 10 rows. R showing first 10 rows, since probably want see first. can see (fewer) rows scrolling using print() command:see, default, top 10 rows. R showing first 10 rows, since probably want see first. can see (fewer) rows scrolling using print() command:n argument print() tells R number rows want see.","code":"\nlibrary(primer.data)\ntrains## # A tibble: 115 x 14\n##    treatment att_start att_end gender race  liberal party   age income line \n##    <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n##  1 Treated          11      11 Female White FALSE   Demo…    31 135000 Fram…\n##  2 Treated           9      10 Female White FALSE   Repu…    34 105000 Fram…\n##  3 Treated           3       5 Male   White TRUE    Demo…    63 135000 Fram…\n##  4 Treated          11      11 Male   White FALSE   Demo…    45 300000 Fram…\n##  5 Control           8       5 Male   White TRUE    Demo…    55 135000 Fram…\n##  6 Treated          13      13 Female White FALSE   Demo…    37  87500 Fram…\n##  7 Control          13      13 Female White FALSE   Repu…    53  87500 Fram…\n##  8 Treated          10      11 Male   White FALSE   Demo…    36 135000 Fram…\n##  9 Control          12      12 Female White FALSE   Demo…    54 105000 Fram…\n## 10 Treated           9      10 Male   White FALSE   Repu…    42 135000 Fram…\n## # … with 105 more rows, and 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>\nprint(trains, n = 15)## # A tibble: 115 x 14\n##    treatment att_start att_end gender race  liberal party   age income line \n##    <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n##  1 Treated          11      11 Female White FALSE   Demo…    31 135000 Fram…\n##  2 Treated           9      10 Female White FALSE   Repu…    34 105000 Fram…\n##  3 Treated           3       5 Male   White TRUE    Demo…    63 135000 Fram…\n##  4 Treated          11      11 Male   White FALSE   Demo…    45 300000 Fram…\n##  5 Control           8       5 Male   White TRUE    Demo…    55 135000 Fram…\n##  6 Treated          13      13 Female White FALSE   Demo…    37  87500 Fram…\n##  7 Control          13      13 Female White FALSE   Repu…    53  87500 Fram…\n##  8 Treated          10      11 Male   White FALSE   Demo…    36 135000 Fram…\n##  9 Control          12      12 Female White FALSE   Demo…    54 105000 Fram…\n## 10 Treated           9      10 Male   White FALSE   Repu…    42 135000 Fram…\n## 11 Control          10       9 Female White FALSE   Demo…    33 105000 Fram…\n## 12 Treated          11       9 Male   White FALSE   Demo…    50 250000 Fram…\n## 13 Treated          13      13 Male   White FALSE   Repu…    24 105000 Fram…\n## 14 Control           6       7 Male   White TRUE    Demo…    40  62500 Fram…\n## 15 Control           8       8 Male   White TRUE    Demo…    53 300000 Fram…\n## # … with 100 more rows, and 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>"},{"path":"visualization.html","id":"exploring-data-frames","chapter":"1 Visualization","heading":"1.1.5 Exploring data frames","text":"many ways get feel data contained data frame trains.","code":""},{"path":"visualization.html","id":"view","chapter":"1 Visualization","heading":"1.1.5.1 view()","text":"Run view(trains) Console RStudio, either typing cutting--pasting Console pane. Explore data frame resulting pop viewer.view() allows us explore different variables listed columns. Observe many different types variables. variables quantitative. variables numerical nature. variables , including gender treatment categorical.","code":""},{"path":"visualization.html","id":"glimpse","chapter":"1 Visualization","heading":"1.1.5.2 glimpse()","text":"can also explore data frame using glimpse()function.Observe glimpse() give first entries variable row variable name. addition, data type variable given immediately variable’s name, inside < >.dbl refers “double,” computer coding terminology quantitative/numerical variables. int refers “integer” another data type also represents quantitative/numerical variables.fct refers “factor” describes variable nominal, meaning member smallish number categories. chr character data.","code":"\nglimpse(trains)## Rows: 115\n## Columns: 14\n## $ treatment      <fct> Treated, Treated, Treated, Treated, Control, Treated, …\n## $ att_start      <dbl> 11, 9, 3, 11, 8, 13, 13, 10, 12, 9, 10, 11, 13, 6, 8, …\n## $ att_end        <dbl> 11, 10, 5, 11, 5, 13, 13, 11, 12, 10, 9, 9, 13, 7, 8, …\n## $ gender         <chr> \"Female\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", …\n## $ race           <chr> \"White\", \"White\", \"White\", \"White\", \"White\", \"White\", …\n## $ liberal        <lgl> FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, …\n## $ party          <chr> \"Democrat\", \"Republican\", \"Democrat\", \"Democrat\", \"Dem…\n## $ age            <int> 31, 34, 63, 45, 55, 37, 53, 36, 54, 42, 33, 50, 24, 40…\n## $ income         <dbl> 135000, 105000, 135000, 300000, 135000, 87500, 87500, …\n## $ line           <chr> \"Framingham\", \"Framingham\", \"Framingham\", \"Framingham\"…\n## $ station        <chr> \"Grafton\", \"Southborough\", \"Grafton\", \"Grafton\", \"Graf…\n## $ hisp_perc      <dbl> 0.026, 0.015, 0.019, 0.019, 0.019, 0.023, 0.030, 0.025…\n## $ ideology_start <int> 3, 4, 1, 4, 2, 5, 5, 4, 4, 4, 3, 5, 4, 1, 2, 2, 3, 4, …\n## $ ideology_end   <int> 3, 4, 2, 4, 2, 5, 5, 4, 3, 4, 3, 4, 4, 1, 2, 3, 3, 1, …"},{"path":"visualization.html","id":"operator","chapter":"1 Visualization","heading":"1.1.5.3 $ operator","text":"$ operator allows us extract explore single variable within data frame.used $ operator extract age variable return vector.","code":"\ntrains$age##   [1] 31 34 63 45 55 37 53 36 54 42 33 50 24 40 53 50 33 33 32 57 41 36 43 25 41\n##  [26] 33 44 46 41 28 36 37 38 48 20 52 38 45 55 38 45 44 36 29 42 43 54 39 31 50\n##  [51] 60 67 54 44 50 20 57 25 60 44 35 54 52 47 60 47 22 56 50 21 29 45 46 42 23\n##  [76] 29 60 41 30 61 21 46 53 45 46 63 21 31 35 22 68 27 22 30 59 56 32 35 23 60\n## [101] 50 31 43 30 54 52 52 50 37 27 55 42 68 52 50"},{"path":"visualization.html","id":"basic-plots","chapter":"1 Visualization","heading":"1.2 Basic Plots","text":"three essential components plot:data: dataset containing variables interest.geom: geometric object display, e.g., scatterplot, line, bar.aes: aesthetic attributes geometric object. important names variables x y axes. Additional attributes include color size. Aesthetic attributes mapped variables dataset.Let’s look example basic scatterplot using data Enos (2014) 115 Boston commuters.Notice three components( .e.data, geom, aes) specified ggplot() function.’ve specified components, add layers plot using + sign. essential layer add plot layer specifies type geometric object want plot involve: points, lines, bars, others. graph , geom used geom_point(). tells R want graph include points (.e. scatterplot).look code , notice + sign comes end code line beginning. adding layers plot, start new line + code layer new line.Let’s now dive deeper geom_point().","code":"\nggplot(data = trains, \n       mapping = aes(x = age, \n                     y = income)) + \n  geom_point()"},{"path":"visualization.html","id":"geom_point","chapter":"1 Visualization","heading":"1.2.1 geom_point()","text":"Scatterplots, also called bivariate plots, allow visualize relationship two numerical variables.Recall scatterplot .Let’s break code, piece--piece.data argument set trains via data = trains.data argument set trains via data = trains.aesthetic mapping set via mapping = aes(x = age, y = income). , map age x axis income maps y axis.aesthetic mapping set via mapping = aes(x = age, y = income). , map age x axis income maps y axis.geometric object specified geom_point(), telling R want scatterplot. added layer using + sign.geometric object specified geom_point(), telling R want scatterplot. added layer using + sign.specify geometric object, blank plot like :addition mapping variables x y axes, can also map variables color.use function labs() add plot title, axis labels, subtitles, captions graph. default, R simply uses names variables axes legends. Let’s now add better titles labels.Note like geoms, add layer using + creating labs()plot. general, every plot gave title axes labels. also add subtitle, purpose give short “main point” graphic. want viewer notice? also provide source data, usually via caption argument.Let’s now take tour useful geoms.","code":"\nggplot(data = trains, \n       mapping = aes(x = age, \n                     y = income)) + \n  geom_point()\nggplot(data = trains, \n       mapping = aes(x = age, \n                     y = income))\nggplot(data = trains, \n       mapping = aes(x = age, \n                     y = income,\n                     color = party)) + \n  geom_point()\nggplot(data = trains, \n       mapping = aes(x = age, \n                     y = income)) + \n  geom_point() +\n  labs(title = \"Age and Income Among Boston Commuters\",\n       subtitle = \"Older commuters don't seem to make more money\",\n       x = \"Age\",\n       y = \"Income\",\n       caption = \"Data source: Enos (2014)\")"},{"path":"visualization.html","id":"geom_jitter","chapter":"1 Visualization","heading":"1.2.2 geom_jitter()","text":"Consider different scatter plot using trains data.problem display “overplotting.” attitudes measured integers, know given point represents just one person dozen. two methods can use address overplotting: transparency jitter.Method 1: Changing transparencyWe can change transparency/opacity points using alpha argument within geom_point(). alpha argument can set value 0 1, 0 sets points 100% transparent 1 sets points 100% opaque. default, alpha set 1. words, don’t explicitly set alpha value, R use alpha = 1.Let’s now add alpha argument scatterplot.Note aes() surrounding alpha = 0.2. mapping variable aesthetic attribute, rather changing default setting alpha. fact, ’ll receive error try change second line read geom_point(aes(alpha = 0.2)).Method 2: Jittering pointsWe can also decide jitter points plot. replacing geom_point() geom_jitter(). Keep mind jittering strictly visualization tool; even creating jittered scatterplot, original values saved data frame remain unchanged.order specify much jitter add, use width height arguments geom_jitter(). corresponds hard ’d like shake plot horizontal x-axis units vertical y-axis units, respectively. important add just enough jitter break overlap points, extent alter original pattern points.deciding whether jitter scatterplot use alpha argument geom_point(), know single right answer. suggest play around methods see one better emphasizes point trying make.","code":"\nggplot(data = trains, \n       mapping = aes(x = att_start, \n                     y = att_end)) + \n  geom_point() +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\")\nggplot(data = trains, \n       mapping = aes(x = att_start, \n                     y = att_end)) + \n  geom_point(alpha = 0.2) +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\")\nggplot(data = trains, \n       mapping = aes(x = att_start, \n                     y = att_end)) + \n  geom_jitter() +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\")"},{"path":"visualization.html","id":"geom_line","chapter":"1 Visualization","heading":"1.2.3 geom_line()","text":"Linegraphs show relationship two numerical variables variable x-axis, also called explanatory variable, sequential nature. words, inherent ordering variable.common examples linegraphs notion time x-axis: hours, days, weeks, years, etc. Since time sequential, connect consecutive observations variable y-axis line. Linegraphs notion time x-axis also called time series plots.Let’s plot median duration unemployment United States last 50 years.Almost every aspect code used create plot identical scatter plots, except geom used.","code":"\nggplot(data = economics,\n       mapping = aes(x = date, y = uempmed)) +\n  geom_line() +\n  labs(title = \"Unemployment Duration in the United States: 1965 -- 2015\",\n       subtitle = \"Dramatic increase in duration after the Great Recesssion\",\n       x = \"Date\",\n       y = \"Median Duration in Weeks\")"},{"path":"visualization.html","id":"geom_histogram","chapter":"1 Visualization","heading":"1.2.4 geom_histogram()","text":"histogram plot visualizes distribution numerical value follows:first cut x-axis series bins, bin represents range values.bin, count number observations fall range corresponding bin.bin, draw bar whose height marks corresponding count.Let’s consider income variable trains data frame. Pay attention changed two arguments ggplot(). removed data = mapping =. code still works R functions allow passing arguments position. first argument ggplot() data. , don’t need tell R trains value data. R assumes passed first. Similarly, second argument ggplot() mapping, R assumes aes(x = income) value want mapping second item passed .Note message printed :stat_bin() using bins = 30. Pick better value binwidth.get message ran code . Try !message telling us histogram constructed using bins = 30 30 equally spaced bins. default value; unless override default number bins number specify, R choose 30 default. important aspect making histogram, R insists informing message. make message go away specifying bin number , always .Let’s specify bins also add labels.Unlike scatterplots linegraphs, now one variable mapped aes(). , variable income. y-aesthetic histogram, count observations bin, gets computed automatically. Furthermore, geometric object layer now geom_histogram().can use fill argument change color actual bins. Let’s set fill “steelblue.”can also adjust number bins histogram one two ways:adjusting number bins via bins argument geom_histogram().adjusting number bins via bins argument geom_histogram().adjusting width bins via binwidth argument geom_histogram().adjusting width bins via binwidth argument geom_histogram().data, however, many unique values income, neither approach much effect. Replace income age want experiment options.","code":"\nggplot(trains, \n       aes(x = income)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\nggplot(trains, \n       aes(x = income)) +\n  geom_histogram(bins = 50) +\n  labs(title = \"Income Among Boston Commuter\",\n       subtitle = \"Why are there so few people with `middle' incomes?\",\n       x = \"Income\",\n       y = \"Count\",\n       caption = \"Data source: Enos (2014)\")\nggplot(trains, \n       aes(x = income)) +\n  geom_histogram(bins = 50,\n                 fill = \"steelblue\") +\n  labs(title = \"Income Among Boston Commuter\",\n       subtitle = \"Why are there so few people with `middle' incomes?\",\n       x = \"Income\",\n       y = \"Count\",\n       caption = \"Data source: Enos (2014)\")"},{"path":"visualization.html","id":"geom_bar","chapter":"1 Visualization","heading":"1.2.5 geom_bar()","text":"Similarly histograms, geom_bar() visualizes distribution categorical variable. simpler task, simply counting different categories within categorical variable, also known levels categorical variable. Often best way visualize different counts, also known frequencies, barplots.geom_col() similar geom_bar(), except geom_col() requires calculate number observations category ahead time. geom_bar() calculation .","code":"\nggplot(data = trains, \n       mapping = aes(x = race)) +\n  geom_bar()"},{"path":"visualization.html","id":"no-pie-charts","chapter":"1 Visualization","heading":"1.2.5.1 No pie charts!","text":"One common plots used visualize distribution categorical data pie chart. may seem harmless enough, pie charts actually present problem humans unable judge angles well. Robbins (2013) argues overestimate angles greater 90 degrees underestimate angles less 90 degrees. words, difficult us determine relative size one piece pie compared another.pie charts present information way comparisons must made comparing angles, barplots effective present information way comparisons categories can made single horizontal lines.","code":""},{"path":"visualization.html","id":"two-categorical-variables","chapter":"1 Visualization","heading":"1.2.5.2 Two categorical variables","text":"Barplots common way visualize frequency different categories, levels, single categorical variable. Another use barplots visualize joint distribution two categorical variables time. Let’s look race, well region, trains data using fill argument inside aes() aesthetic mapping. Recall fill aesthetic corresponds color used fill bars.example stacked barplot. simple make, certain aspects ideal. example, difficult compare heights different colors bars, corresponding comparing number people different races within region.alternative stacked barplots side--side barplots, also known dodged barplots. code create side--side barplot includes position = \"dodge\" argument added inside geom_bar(). words, overriding default barplot type, stacked barplot, specifying side--side barplot instead.Whites -reprsented Control group even though treatment assigned random.","code":"\nggplot(trains, \n       aes(x = race, fill = treatment)) +\n  geom_bar()\nggplot(trains, \n       aes(x = race, fill = treatment)) +\n  geom_bar(position = \"dodge\")"},{"path":"visualization.html","id":"geom_smooth","chapter":"1 Visualization","heading":"1.2.6 geom_smooth()","text":"can add trend lines plots create using geom_smooth() function.Recall following scatterplot previous work.can add trend line graph adding layer geom_smooth(). Including trend lines allow us visualize relationship att_start att_end.see message R gives us? R telling us need specify method formula argument, just way told us provide bins argument used geom_histogram() .Let’s add argument method = \"lm\", lm stands linear model. causes fitted line straight rather curved. Let’s also add argument formula = y ~ x. makes messages go away. , R giving us error . simply telling us options using since specify options .Always include enough detail code make messages disappear.Notice gray section surrounding sides lines plotted. area called confidence interval, set 95% confidence interval default. learn confidence intervals Chapter 5. can make shaded disappear adding se = FALSE another argument geom_smooth().","code":"\nggplot(trains, \n       aes(x = att_start, \n           y = att_end)) + \n  geom_point() +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\")\nggplot(trains, \n       aes(x = att_start, \n           y = att_end)) + \n  geom_point() +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\") +\n  geom_smooth()## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\nggplot(trains, \n       aes(x = att_start, \n           y = att_end)) + \n  geom_point() +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\") +\n  geom_smooth(method = \"lm\", \n              formula = y ~ x)"},{"path":"visualization.html","id":"geom_density","chapter":"1 Visualization","heading":"1.2.7 geom_density()","text":"Recall histogram plotted geom_histogram() section.can change geom_histogram() geom_density() make density plot, smoothed version histogram.","code":"\nggplot(trains, \n       aes(x = income)) +\n  geom_histogram(bins = 50) +\n  labs(title = \"Income Among Boston Commuter\",\n       subtitle = \"Why are there so few people with `middle' incomes?\",\n       x = \"Income\",\n       y = \"Count\",\n       caption = \"Data source: Enos (2014)\")\nggplot(trains, \n       aes(x = income)) +\n  geom_density() +\n  labs(title = \"Income Among Boston Commuter\",\n       subtitle = \"Why are there so few people with `middle' incomes?\",\n       x = \"Income\",\n       y = NULL,\n       caption = \"Data source: Enos (2014)\")"},{"path":"visualization.html","id":"the-tidyverse","chapter":"1 Visualization","heading":"1.3 The Tidyverse","text":"Going forward, ggplot() code omit data = mapping = explicit naming arguments relying default ordering arguments. time, include argument names , rule, . create many plots Primer ommissions unlikely cause problems.","code":""},{"path":"visualization.html","id":"data-wrangling","chapter":"1 Visualization","heading":"1.3.1 Data wrangling","text":"can’t use beautiful plots learned previous chapter “wrangled” data convenient shape. chapter, ’ll introduce series functions tidyverse collection packages help wrangling, everything else need work data. functions include:filter() pick rows want keep tibble.filter() pick rows want keep tibble.select() pick columns want keep tibble.select() pick columns want keep tibble.arrange() rows tibble, either ascending descending order.arrange() rows tibble, either ascending descending order.mutate() create new columns.mutate() create new columns.group_by() rows tibble. function assigns different rows part group. allows statistics calculated group separately. usually use group_by summarize().group_by() rows tibble. function assigns different rows part group. allows statistics calculated group separately. usually use group_by summarize().summarize() data. creates new data frame comprised summary statistics one () rows grouped variable, tibble whole ungrouped.summarize() data. creates new data frame comprised summary statistics one () rows grouped variable, tibble whole ungrouped.","code":""},{"path":"visualization.html","id":"the-pipe-operator","chapter":"1 Visualization","heading":"1.3.2 The pipe operator: %>%","text":"start data wrangling, let’s first introduce nifty tool gets loaded dplyr package included tidyverse: pipe operator %>%. pipe operator allows us combine multiple operations R single sequential chain actions.Recall (modified) code one graphics .Much like + sign come end lines constructing plots — building plot layer--layer — pipe operator %>% come end lines building data wrangling pipeline step--step.code filters trains dataset row men.single chain data wrangling operations formed combining verb-named functions single sequence using pipe operator %>%.","code":"\nggplot(trains, \n       aes(x = att_start, \n           y = att_end)) + \n  geom_point() +\n  geom_smooth(method = \"lm\", \n              formula = y ~ x) +\n  labs(title = \"Immigration Attitudes Among Boston Commuters\",\n       subtitle = \"Attitudes did not change much after the experiment\",\n       x = \"Attitude Before Experiment\",\n       y = \"Attitude After Experiment\",\n       caption = \"Data source: Enos (2014)\")\ntrains %>% \n  filter(gender == \"Male\")## # A tibble: 64 x 14\n##    treatment att_start att_end gender race  liberal party   age income line \n##    <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n##  1 Treated           3       5 Male   White TRUE    Demo…    63 135000 Fram…\n##  2 Treated          11      11 Male   White FALSE   Demo…    45 300000 Fram…\n##  3 Control           8       5 Male   White TRUE    Demo…    55 135000 Fram…\n##  4 Treated          10      11 Male   White FALSE   Demo…    36 135000 Fram…\n##  5 Treated           9      10 Male   White FALSE   Repu…    42 135000 Fram…\n##  6 Treated          11       9 Male   White FALSE   Demo…    50 250000 Fram…\n##  7 Treated          13      13 Male   White FALSE   Repu…    24 105000 Fram…\n##  8 Control           6       7 Male   White TRUE    Demo…    40  62500 Fram…\n##  9 Control           8       8 Male   White TRUE    Demo…    53 300000 Fram…\n## 10 Treated          13      13 Male   Asian FALSE   Repu…    33 250000 Fram…\n## # … with 54 more rows, and 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>"},{"path":"visualization.html","id":"filter-rows","chapter":"1 Visualization","heading":"1.3.3 filter() rows","text":"\nFIGURE 1.1: Diagram filter() rows operation.\nfilter() function works much like “Filter” option Microsoft Excel; allows specify criteria values variable dataset filters rows match criteria.Let’s revisit code previous section.result using filter() tibble just rows want. alter data, can good idea save result new data frame using <- assignment operator.Let’s break code :assigned new data object named trains_men via trains_men <-. assigned modified data frame trains_men, separate entity initial trains data frame. , however, written code trains <- trains overwritten already-existing tibble.take trains tibble filter() observations gender equals “Male” included. test equality using double equal sign == single equal sign =. words, filter(gender = \"Male\") produce error. convention across many programming languages. new coding, ’ll probably forget use double equal sign == times get hang .can use operators beyond just == operator.> corresponds “greater ”< corresponds “less ”>= corresponds “greater equal ”<= corresponds “less equal ”!= corresponds “equal .” ! used many programming languages indicate “.”Furthermore, can combine multiple criteria using operators make comparisons:| corresponds “”& corresponds “”example, let’s filter() trains tibble include women Republicans younger 40.filter() often among first verbs consider applying data. cleans dataset rows care .","code":"\ntrains %>% \n  filter(gender == \"Male\")## # A tibble: 64 x 14\n##    treatment att_start att_end gender race  liberal party   age income line \n##    <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n##  1 Treated           3       5 Male   White TRUE    Demo…    63 135000 Fram…\n##  2 Treated          11      11 Male   White FALSE   Demo…    45 300000 Fram…\n##  3 Control           8       5 Male   White TRUE    Demo…    55 135000 Fram…\n##  4 Treated          10      11 Male   White FALSE   Demo…    36 135000 Fram…\n##  5 Treated           9      10 Male   White FALSE   Repu…    42 135000 Fram…\n##  6 Treated          11       9 Male   White FALSE   Demo…    50 250000 Fram…\n##  7 Treated          13      13 Male   White FALSE   Repu…    24 105000 Fram…\n##  8 Control           6       7 Male   White TRUE    Demo…    40  62500 Fram…\n##  9 Control           8       8 Male   White TRUE    Demo…    53 300000 Fram…\n## 10 Treated          13      13 Male   Asian FALSE   Repu…    33 250000 Fram…\n## # … with 54 more rows, and 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>\ntrains_men <- trains %>% \n  filter(gender == \"Male\")\ntrains %>% \n  filter(gender == \"Female\" & \n           party == \"Republican\" &\n           age < 40)## # A tibble: 3 x 14\n##   treatment att_start att_end gender race  liberal party   age income line \n##   <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n## 1 Treated           9      10 Female White FALSE   Repu…    34 105000 Fram…\n## 2 Control          11      10 Female White FALSE   Repu…    21 135000 Fran…\n## 3 Control          15      12 Female White FALSE   Repu…    21 250000 Fran…\n## # … with 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>"},{"path":"visualization.html","id":"select-variables","chapter":"1 Visualization","heading":"1.3.4 select variables","text":"\nFIGURE 1.2: Diagram select() columns.\nUsing filter() function able pick specific rows dataset. select() function allows us pick specific columns (variables) instead.Use glimpse() see names variables trains:However, need two variables, say gender treatment. can select() just two:Let’s say instead want drop, de-select, certain variables. minus (-) sign:Another way selecting columns/variables specifying range columns using : operator.select() columns two specified variables.\nselect() function can also used rearrange columns used everything() helper function. can treatment gender variables first :helper functions starts_with(), ends_with(), contains() can used select variables/columns match conditions. Examples:","code":"\nglimpse(trains)## Rows: 115\n## Columns: 14\n## $ treatment      <fct> Treated, Treated, Treated, Treated, Control, Treated, …\n## $ att_start      <dbl> 11, 9, 3, 11, 8, 13, 13, 10, 12, 9, 10, 11, 13, 6, 8, …\n## $ att_end        <dbl> 11, 10, 5, 11, 5, 13, 13, 11, 12, 10, 9, 9, 13, 7, 8, …\n## $ gender         <chr> \"Female\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", …\n## $ race           <chr> \"White\", \"White\", \"White\", \"White\", \"White\", \"White\", …\n## $ liberal        <lgl> FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, …\n## $ party          <chr> \"Democrat\", \"Republican\", \"Democrat\", \"Democrat\", \"Dem…\n## $ age            <int> 31, 34, 63, 45, 55, 37, 53, 36, 54, 42, 33, 50, 24, 40…\n## $ income         <dbl> 135000, 105000, 135000, 300000, 135000, 87500, 87500, …\n## $ line           <chr> \"Framingham\", \"Framingham\", \"Framingham\", \"Framingham\"…\n## $ station        <chr> \"Grafton\", \"Southborough\", \"Grafton\", \"Grafton\", \"Graf…\n## $ hisp_perc      <dbl> 0.026, 0.015, 0.019, 0.019, 0.019, 0.023, 0.030, 0.025…\n## $ ideology_start <int> 3, 4, 1, 4, 2, 5, 5, 4, 4, 4, 3, 5, 4, 1, 2, 2, 3, 4, …\n## $ ideology_end   <int> 3, 4, 2, 4, 2, 5, 5, 4, 3, 4, 3, 4, 4, 1, 2, 3, 3, 1, …\ntrains %>% \n  select(gender, treatment)## # A tibble: 115 x 2\n##    gender treatment\n##    <chr>  <fct>    \n##  1 Female Treated  \n##  2 Female Treated  \n##  3 Male   Treated  \n##  4 Male   Treated  \n##  5 Male   Control  \n##  6 Female Treated  \n##  7 Female Control  \n##  8 Male   Treated  \n##  9 Female Control  \n## 10 Male   Treated  \n## # … with 105 more rows\ntrains %>% \n  select(-gender, -liberal, -party, -age)## # A tibble: 115 x 10\n##    treatment att_start att_end race  income line  station hisp_perc\n##    <fct>         <dbl>   <dbl> <chr>  <dbl> <chr> <chr>       <dbl>\n##  1 Treated          11      11 White 135000 Fram… Grafton    0.0264\n##  2 Treated           9      10 White 105000 Fram… Southb…    0.0154\n##  3 Treated           3       5 White 135000 Fram… Grafton    0.0191\n##  4 Treated          11      11 White 300000 Fram… Grafton    0.0191\n##  5 Control           8       5 White 135000 Fram… Grafton    0.0191\n##  6 Treated          13      13 White  87500 Fram… Grafton    0.0231\n##  7 Control          13      13 White  87500 Fram… Grafton    0.0304\n##  8 Treated          10      11 White 135000 Fram… Grafton    0.0247\n##  9 Control          12      12 White 105000 Fram… Grafton    0.0247\n## 10 Treated           9      10 White 135000 Fram… Grafton    0.0259\n## # … with 105 more rows, and 2 more variables: ideology_start <int>,\n## #   ideology_end <int>\ntrains %>% \n  select(gender:age)## # A tibble: 115 x 5\n##    gender race  liberal party        age\n##    <chr>  <chr> <lgl>   <chr>      <int>\n##  1 Female White FALSE   Democrat      31\n##  2 Female White FALSE   Republican    34\n##  3 Male   White TRUE    Democrat      63\n##  4 Male   White FALSE   Democrat      45\n##  5 Male   White TRUE    Democrat      55\n##  6 Female White FALSE   Democrat      37\n##  7 Female White FALSE   Republican    53\n##  8 Male   White FALSE   Democrat      36\n##  9 Female White FALSE   Democrat      54\n## 10 Male   White FALSE   Republican    42\n## # … with 105 more rows\ntrains %>% \n  select(treatment, gender, everything())## # A tibble: 115 x 14\n##    treatment gender att_start att_end race  liberal party   age income line \n##    <fct>     <chr>      <dbl>   <dbl> <chr> <lgl>   <chr> <int>  <dbl> <chr>\n##  1 Treated   Female        11      11 White FALSE   Demo…    31 135000 Fram…\n##  2 Treated   Female         9      10 White FALSE   Repu…    34 105000 Fram…\n##  3 Treated   Male           3       5 White TRUE    Demo…    63 135000 Fram…\n##  4 Treated   Male          11      11 White FALSE   Demo…    45 300000 Fram…\n##  5 Control   Male           8       5 White TRUE    Demo…    55 135000 Fram…\n##  6 Treated   Female        13      13 White FALSE   Demo…    37  87500 Fram…\n##  7 Control   Female        13      13 White FALSE   Repu…    53  87500 Fram…\n##  8 Treated   Male          10      11 White FALSE   Demo…    36 135000 Fram…\n##  9 Control   Female        12      12 White FALSE   Demo…    54 105000 Fram…\n## 10 Treated   Male           9      10 White FALSE   Repu…    42 135000 Fram…\n## # … with 105 more rows, and 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>\ntrains %>% \n  select(starts_with(\"a\"))## # A tibble: 115 x 3\n##    att_start att_end   age\n##        <dbl>   <dbl> <int>\n##  1        11      11    31\n##  2         9      10    34\n##  3         3       5    63\n##  4        11      11    45\n##  5         8       5    55\n##  6        13      13    37\n##  7        13      13    53\n##  8        10      11    36\n##  9        12      12    54\n## 10         9      10    42\n## # … with 105 more rows"},{"path":"visualization.html","id":"slice-and-pull-and","chapter":"1 Visualization","heading":"1.3.5 slice() and pull() and []","text":"slice() pull() additional functions can use pick specific rows columns within data frame.Using slice() gives us specific rows trains tibble:Unlike filter(), slice() relies numeric order data.pull() grabs variable vector, rather leaving within tibble, select() :","code":"\ntrains %>% \n  slice(2:5)## # A tibble: 4 x 14\n##   treatment att_start att_end gender race  liberal party   age income line \n##   <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n## 1 Treated           9      10 Female White FALSE   Repu…    34 105000 Fram…\n## 2 Treated           3       5 Male   White TRUE    Demo…    63 135000 Fram…\n## 3 Treated          11      11 Male   White FALSE   Demo…    45 300000 Fram…\n## 4 Control           8       5 Male   White TRUE    Demo…    55 135000 Fram…\n## # … with 4 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>\ntrains %>% \n  slice(2:5) %>% \n  pull(age)## [1] 34 63 45 55"},{"path":"visualization.html","id":"arrange-rows","chapter":"1 Visualization","heading":"1.3.6 arrange() rows","text":"One commonly performed data wrangling tasks sort data frame’s rows alphanumeric order one variables. Unlike filter() select(), arrange() remove rows columns data frame. Instead, arrange() allows us sort/reorder tibble’s rows according values specific variable.Let’s start selecting relevant variables:Sort ageNotice age column sorted smallest values largest. arrange() always returns rows sorted ascending order default. switch ordering descending order instead, use desc() function like :first many “pipes” create Primer. First, trains tibble. Second, pipe select() function. Third, pipe results select() arrange() function.","code":"\ntrains %>% \n  select(treatment, gender, age)## # A tibble: 115 x 3\n##    treatment gender   age\n##    <fct>     <chr>  <int>\n##  1 Treated   Female    31\n##  2 Treated   Female    34\n##  3 Treated   Male      63\n##  4 Treated   Male      45\n##  5 Control   Male      55\n##  6 Treated   Female    37\n##  7 Control   Female    53\n##  8 Treated   Male      36\n##  9 Control   Female    54\n## 10 Treated   Male      42\n## # … with 105 more rows\ntrains %>% \n  select(treatment, gender, age) %>% \n  arrange(age)## # A tibble: 115 x 3\n##    treatment gender   age\n##    <fct>     <chr>  <int>\n##  1 Treated   Female    20\n##  2 Control   Male      20\n##  3 Control   Male      21\n##  4 Control   Female    21\n##  5 Control   Female    21\n##  6 Control   Male      22\n##  7 Control   Female    22\n##  8 Treated   Male      22\n##  9 Treated   Male      23\n## 10 Control   Male      23\n## # … with 105 more rows\ntrains %>% \n  select(treatment, gender, age) %>% \n  arrange(desc(age))## # A tibble: 115 x 3\n##    treatment gender   age\n##    <fct>     <chr>  <int>\n##  1 Control   Female    68\n##  2 Control   Male      68\n##  3 Control   Male      67\n##  4 Treated   Male      63\n##  5 Control   Male      63\n##  6 Control   Male      61\n##  7 Control   Female    60\n##  8 Treated   Male      60\n##  9 Control   Male      60\n## 10 Control   Female    60\n## # … with 105 more rows"},{"path":"visualization.html","id":"mutate","chapter":"1 Visualization","heading":"1.3.7 mutate()","text":"\nFIGURE 1.3: Diagram mutate() columns.\nAnother common transformation data create new variables based existing ones. words, want make new column using already existing columns. mutate() function dplyr package takes existing variables mutates create new ones.Recall income variable trains tibble dollars. Let’s use mutate() create new variable income thousands dollars. (use select() start pipe easier see new old variables time.)Notice newly created column right-hand side tibble named income_in_thousands.creating new variables can also overwrite original data frames like trains like :overwrite data frame trains instead assigning result new data frame like trains_new? rough rule thumb, long losing original information might need later, acceptable practice overwrite existing data frames updated ones, . hand, overwrite variable income, instead created new variable called income_in_thousands? , erased original information contained income able use future.","code":"\ntrains %>% \n  select(gender, income) %>% \n  mutate(income_in_thousands = income / 1000)## # A tibble: 115 x 3\n##    gender income income_in_thousands\n##    <chr>   <dbl>               <dbl>\n##  1 Female 135000               135  \n##  2 Female 105000               105  \n##  3 Male   135000               135  \n##  4 Male   300000               300  \n##  5 Male   135000               135  \n##  6 Female  87500                87.5\n##  7 Female  87500                87.5\n##  8 Male   135000               135  \n##  9 Female 105000               105  \n## 10 Male   135000               135  \n## # … with 105 more rows\ntrains <- trains %>% \n  mutate(income_in_thousands = (income) / 1000)"},{"path":"visualization.html","id":"ifelse","chapter":"1 Visualization","heading":"1.3.7.1 ifelse()","text":"ifelse() often used within calls mutate(). three arguments. first argument test logical vector. result contain value second argument, yes, test TRUE, value third argument, , FALSE.Imagine want create new variable old, TRUE age > 50 FALSE otherwise.Another function similar ifelse(), dplyr::case_when(). case_when() particularly useful inside mutate want create new variable relies complex combination existing variables. Note different version ifelse() dplyr: if_else(). works exactly standard version somewhat robust.","code":"\ntrains %>% \n  select(age) %>% \n  mutate(old = ifelse(age > 50, TRUE, FALSE))## # A tibble: 115 x 2\n##      age old  \n##    <int> <lgl>\n##  1    31 FALSE\n##  2    34 FALSE\n##  3    63 TRUE \n##  4    45 FALSE\n##  5    55 TRUE \n##  6    37 FALSE\n##  7    53 TRUE \n##  8    36 FALSE\n##  9    54 TRUE \n## 10    42 FALSE\n## # … with 105 more rows"},{"path":"visualization.html","id":"summarize","chapter":"1 Visualization","heading":"1.3.8 summarize()","text":"musical interlude inspired Tidyverse:next common task working data frames compute summary statistics. Summary statistics single numerical values summarize large number values. Commonly known examples summary statistics include mean (also called average) median (middle value). examples summary statistics might immediately come mind include sum, minimum, maximum, standard deviation.function summarize() allows us calculate statistics individual columns dataset. Example:mean() sd() summary functions go inside summarize() function. (can also use British English spelling: summarise().) summarize() function takes data frame returns data frame one row corresponding summary statistics.","code":"\ntrains %>% \n  summarize(mean = mean(age), \n            std_dev = sd(age))## # A tibble: 1 x 2\n##    mean std_dev\n##   <dbl>   <dbl>\n## 1  42.4    12.2"},{"path":"visualization.html","id":"statistics-for-distributions","chapter":"1 Visualization","heading":"1.3.9 Statistics for distributions","text":"variable tibble column, vector values. sometimes refer vector “distribution.” somewhat sloppy distribution can many things, commonly mathematical formula. , strictly speaking, “frequency distribution” “empirical distribution” list values, usage unreasonable.two distinct concepts: distribution set values drawn distribution. , everyday use, use “distribution” . given distribution (meaning vector numbers), often use geom_histogram() geom_density() graph . , sometimes, don’t want look whole thing. just want summary measures report key aspects distribution. two important attributes distribution center variation around center.use summarize() calculate statistics variable, column, vector values distribution. Note language sloppiness. purposes book, “variable,” “column,” “vector,” “distribution” mean thing. Popular statistical functions include: mean(), median(), min(), max(), n() sum(). Functions may new include three measures “spread” distribution: sd() (standard deviation), mad() (scaled median absolute deviation) quantile() (use calculate interval includes specified proportion values).mean()mean, average, commonly reported measure center distribution. mean sum data elements divided many elements . \\(N\\) data points, mean given :\\[\\bar{x} = \\frac{x_1 + x_2 + \\cdots + x_N}{N}\\]median()median another commonly reported measure center distribution, calculated first sorting vector values smallest largest. middle element sorted list median. middle falls two values, median mean two middle values. median mean two common measures center distribution. median stable, less affected outliers. widely accepted symbol median, although \\(\\tilde{x}\\) uncommon.sd()standard deviation (sd) distribution measure variation around mean.\\[\\text{sd} = \\sqrt{\\frac{(x_1 - \\bar{x})^2 + (x_2 - \\bar{x})^2 + \\cdots + (x_n - \\bar{x})^2}{n - 1}}\\]mad()scaled median absolute deviation (mad) measure variation around median. popular standard deviation. formula calculating mad bit mysterious.\\[\\text{mad} = 1.4826 \\times \\text{median}(abs(x - \\tilde{x}))\\]basic idea sd mad need measure variation around center distribution. sd uses mean, \\(\\bar{x}\\), estimate center mad uses median, \\(\\tilde{x}\\). mad uses absolute difference, opposed squared difference, robust outliers. 1.4826 multiplier causes mad sd identical (important) case standard normal distributions, topic cover Chapter 2.quantile()quantile distribution value distribution occupies specific percentile location sorted list values.5th percentile distribution point 5% data falls. 95th percentile , similarly, point 95% data falls. 50th percentile, median, splits data two separate, equal, parts. minimum 0th percentile. maximum 100th percentile.Let’s take look poverty variable kenya tibble primer.data package. poverty percentage residents community incomes poverty line. Let’s first confirm quantile() works comparing output simpler functions.probs argument allows us specify percentile(s) want. Two important percentiles 2.5th 97.5th define 95% interval, central range includes 95% values.interval two percentiles includes 95% values distribution. Depending context, interval sometimes called “confidence interval” “uncertainty interval” “compatibility interval.” Different percentile ranges create intervals different widths.interesting fact , time, 95% confidence interval , roughly, center distribution \\(\\pm\\) two times standard deviation.distributions without major outliers, mean/median sd/mad similar .follows intervals defined similar.intervals similar similar 95% interval calculated . match roughly true, good enough applied work.NA value variable, statistical function like mean() return NA. can fix using na.rm = TRUE statistical function.","code":"\nc(min(kenya$poverty), median(kenya$poverty), max(kenya$poverty))## [1] 0.18 0.43 0.90\nquantile(kenya$poverty, probs = c(0, 0.5, 1))##   0%  50% 100% \n## 0.18 0.43 0.90\nquantile(kenya$poverty, probs = c(0.025, 0.975))## 2.5%  98% \n## 0.22 0.66\nkenya %>% \n  summarise(mean = mean(poverty),\n            median = median(poverty),\n            sd = sd(poverty),\n            mad = mad(poverty))## # A tibble: 1 x 4\n##    mean median    sd    mad\n##   <dbl>  <dbl> <dbl>  <dbl>\n## 1 0.426  0.432 0.109 0.0977\nkenya %>% \n  summarise(interval_1_bottom = mean(poverty) - 2 * sd(poverty),\n            interval_1_top = mean(poverty) + 2 * sd(poverty),\n            interval_2_bottom = median(poverty) - 2 * mad(poverty),\n            interval_2_top = median(poverty) + 2 * mad(poverty))## # A tibble: 1 x 4\n##   interval_1_bottom interval_1_top interval_2_bottom interval_2_top\n##               <dbl>          <dbl>             <dbl>          <dbl>\n## 1             0.208          0.645             0.236          0.627"},{"path":"visualization.html","id":"group_by","chapter":"1 Visualization","heading":"1.3.10 group_by()","text":"can use mean() summarize() calculate average age people trains, .want mean age gender? Consider:data , note “Groups” message top. R informing tibble grouped operation perform now done gender.Notice message R sends us. warning means tibble issues forth end pipe “ungrouped.” means group attribute applied group_by() removed. behavior (sensible) default.proper way handle situation, everywhere else use group_by() summarize(), specify .groups argument.code thing first version, issue message, since made affirmative decision drop grouping variables.group_by() function doesn’t change data frames . Rather changes meta-data, data data, specifically grouping structure. apply summarize() function tibble changes.tibble grouped, can remove grouping variable using ungroup().R code behaving weird way, especially “losing” rows, problem often solved using ungroup() pipeline.","code":"\ntrains %>% \n  summarize(mean = mean(age))## # A tibble: 1 x 1\n##    mean\n##   <dbl>\n## 1  42.4\ntrains %>% \n  group_by(gender)## # A tibble: 115 x 15\n## # Groups:   gender [2]\n##    treatment att_start att_end gender race  liberal party   age income line \n##    <fct>         <dbl>   <dbl> <chr>  <chr> <lgl>   <chr> <int>  <dbl> <chr>\n##  1 Treated          11      11 Female White FALSE   Demo…    31 135000 Fram…\n##  2 Treated           9      10 Female White FALSE   Repu…    34 105000 Fram…\n##  3 Treated           3       5 Male   White TRUE    Demo…    63 135000 Fram…\n##  4 Treated          11      11 Male   White FALSE   Demo…    45 300000 Fram…\n##  5 Control           8       5 Male   White TRUE    Demo…    55 135000 Fram…\n##  6 Treated          13      13 Female White FALSE   Demo…    37  87500 Fram…\n##  7 Control          13      13 Female White FALSE   Repu…    53  87500 Fram…\n##  8 Treated          10      11 Male   White FALSE   Demo…    36 135000 Fram…\n##  9 Control          12      12 Female White FALSE   Demo…    54 105000 Fram…\n## 10 Treated           9      10 Male   White FALSE   Repu…    42 135000 Fram…\n## # … with 105 more rows, and 5 more variables: station <chr>, hisp_perc <dbl>,\n## #   ideology_start <int>, ideology_end <int>, income_in_thousands <dbl>\ntrains %>% \n  group_by(gender) %>% \n  summarize(mean = mean(age))## `summarise()` ungrouping output (override with `.groups` argument)## # A tibble: 2 x 2\n##   gender  mean\n##   <chr>  <dbl>\n## 1 Female  41.0\n## 2 Male    43.5\ntrains %>% \n  group_by(gender) %>% \n  summarize(mean = mean(age),\n            .groups = \"drop\")## # A tibble: 2 x 2\n##   gender  mean\n##   <chr>  <dbl>\n## 1 Female  41.0\n## 2 Male    43.5"},{"path":"visualization.html","id":"advanced-plots","chapter":"1 Visualization","heading":"1.4 Advanced Plots","text":"previous section seen three components every plot must include: data, data mappings, geom. may found graphics look bit boring. Luckily, Grammar Graphics allows us add layers order customize plots. go additional layers , Data Visualization ggplot2 Cheat Sheet great resource refer ggplot visualizations get complicated.","code":""},{"path":"visualization.html","id":"faceting","chapter":"1 Visualization","heading":"1.4.1 Faceting","text":"Let’s start introducing new concept called faceting. Faceting used ’d like split particular visualization values another variable. create multiple copies type plot matching x y axes, whose content differ.proceed, let’s create subset tibble gapminder, gapminder, package use. (may need install gapminder package code work.)Let’s plot filtered data using geom_point()can see, quite difficult compare continents despite colors. much easier “split” scatterplot 5 continents dataset. words, create plots gdpPercap lifeExp continent separately. using function facet_wrap() argument ~ continent.way better! However, R chooses default 2 plots per row, Asia Europe two continents. can specify number rows columns grid using nrow argument inside facet_wrap(). Let’s get continents row setting nrow 1.Let’s now add trend line geom_smooth() faceted plot.expected, can see positive correlation economic development life expectancy continents. Now also clearer Asia average level Americas, countries Asia extremes.","code":"\nlibrary(gapminder)\ngapminder_filt <- gapminder %>% \n      filter(year == 2007, continent != \"Oceania\")\nggplot(data = gapminder_filt, \n       mapping = aes(x = gdpPercap, \n                     y = lifeExp, \n                     color = continent)) +\n  geom_point()\nggplot(data = gapminder_filt, \n       mapping = aes(x = gdpPercap, \n                     y = lifeExp, \n                     color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent)\nggplot(data = gapminder_filt, \n       mapping = aes(x = gdpPercap, \n                     y = lifeExp, \n                     color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent, nrow = 1) +\n  geom_smooth(method = \"lm\", \n              formula = y ~ x, \n              se = FALSE)"},{"path":"visualization.html","id":"stats","chapter":"1 Visualization","heading":"1.4.2 Stats","text":"Consider following histogram.Recall y-aesthetic histogram, count observations bin, gets computed automatically. can use after_stat() argument within geom_histogram() generate percent values y-aesthetic.","code":"\nggplot(data = gapminder, \n       mapping = aes(x = lifeExp))+ \n  geom_histogram(bins = 20, \n                 color = \"white\")\nggplot(data = gapminder, \n       mapping = aes(x = lifeExp))+ \n  geom_histogram(aes(y = after_stat(count/sum(count)), \n                   bins = 20))## Warning: Ignoring unknown aesthetics: bins"},{"path":"visualization.html","id":"coordinate-systems","chapter":"1 Visualization","heading":"1.4.3 Coordinate Systems","text":"Next, can specify type coordinate system. cases use Cartesian coordinate systems. coordinate system used often coord_flip(). actually just Cartesian coordinate system, name suggests, simply swaps axes.Consider faceted scatterplot previously created.Let’s now add layer coord_flip() flip axises.can seen, lifeExp now x-axis gdpPercap y-axis. Compared previous plot now easier observe distribution life expectancy respective continents. example, can see many countries Africa 55 years, Americas Asia 75 years, Europe 80 years. However, think makes sense consider lifeExp dependent variable, don’t use coord_flip() subsequent plots.","code":"\nggplot(data = gapminder_filt, \n       mapping = aes(x = gdpPercap, \n                     y = lifeExp, \n                     color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent, nrow = 1) +\n  geom_smooth(method = \"lm\", \n              formula = y ~ x, \n              se = FALSE)\nggplot(data = gapminder_filt, \n       mapping = aes(x = gdpPercap, \n                     y = lifeExp, \n                     color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent, nrow = 1) +\n  geom_smooth(method = \"lm\", \n              formula = y ~ x, \n              se = FALSE) +\n  coord_flip()"},{"path":"visualization.html","id":"axis-limits-and-scales","chapter":"1 Visualization","heading":"1.4.4 Axis Limits and Scales","text":"can also manipulate limits axes using xlim() ylim(). example, assume interested countries GDP per capita 0 30000. can tell R follows want see range. Note , data first argument mapping second ggplot(), don’t actually name arguments. can just provide , long correct order.can see GDP per capita x-axis now shown 0 30000.can also change scaling axes. example, might useful display axes scale_x_log10() scale_y_log10() logarithmic scale. Let’s try GDP per capita. Also, note can (lazily!) provide explicit x y argument names aes() long provide values right order: x comes y.","code":"\nggplot(gapminder_filt, \n       aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent) +\n  xlim(0, 30000)\nggplot(gapminder_filt, \n       aes(gdpPercap, lifeExp, color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent) +\n  geom_smooth(formula = y ~ x, method = \"lm\", se = FALSE) + \n  scale_x_log10()"},{"path":"visualization.html","id":"text","chapter":"1 Visualization","heading":"1.4.5 Text","text":"Recall use labs() add labels titles plots.\ncan also change labels inside plots. Wouldn’t great knew country point refers ? can help geom_text():Let’s breakdown code within geom_text(). included new aesthetic called label. defines character variable used basis labels. set label country point corresponds country represents. set text font setting size 2, set text color using color. Finally, included argument check_overlap = TRUE make sure names countries legible.","code":"\nggplot(gapminder_filt, \n       aes(gdpPercap, lifeExp, color = continent)) +\n  geom_point() +\n  facet_wrap(~ continent, nrow = 1) +\n  geom_smooth(formula = y ~ x, method = \"lm\", se = FALSE) + \n  scale_x_log10() +\n  labs(title = \"Life Expectancy and GDP per Capita (2007)\",\n       subtitle = \"Selected Nations by Continent\",\n       x = \"GDP per Capita, USD\",\n       y = \"Life Expectancy, Years\",\n       caption = \"Source: Gapminder\") +\n  geom_text(aes(label = country), size = 2, \n            color = \"black\", check_overlap = TRUE)"},{"path":"visualization.html","id":"themes","chapter":"1 Visualization","heading":"1.4.6 Themes","text":"Themes can used change overall appearance plot without much effort. add themes layers plots. can find overview different themes ggplot .Let’s consider following faceted scatterplot.Let’s now add theme faceted scatterplot. use theme theme_economist(), ggthemes package, make plot look like plots Economist.looks pretty good. However, notice legend top graph. crowds graph takes away important part: data. can use theme() customize non-data parts plots background, gridlines, legends. Let’s de-clutter graph removing legend. can using legend.position argument setting “none.”Great. Now graph easier visualize. addition, note theme() function also offers wide selection functions manually changing individual elements.","code":"\ngapminder %>%\n  filter(continent != \"Oceania\") %>%\n  filter(year == max(year)) %>% \n  ggplot(aes(gdpPercap, lifeExp, color = continent)) +\n    geom_point(alpha = 0.7) +\n    geom_smooth(method = \"lm\", \n                formula = y ~ x,\n                se = FALSE) + \n    facet_wrap(~continent, nrow = 2) +\n    labs(title = \"Life Expectancy and GDP per Capita\",\n         subtitle = \"Connection between GDP and life expectancy is weakest in Africa\",\n         x = \"GDP per Capita in USD\",\n         y = \"Life Expectancy\") +\n    scale_x_log10(breaks = c(500, 5000, 50000)) \nlibrary(ggthemes)\n\ngapminder %>%\n  filter(continent != \"Oceania\") %>%\n  filter(year == max(year)) %>% \n  ggplot(aes(gdpPercap, lifeExp, color = continent)) +\n    geom_point(alpha = 0.7) +\n    geom_smooth(method = \"lm\", \n                formula = y ~ x,\n                se = FALSE) + \n    facet_wrap(~continent, nrow = 2) +\n    labs(title = \"Life Expectancy and GDP per Capita\",\n         subtitle = \"Connection between GDP and life expectancy is weakest in Africa\",\n         x = \"GDP per Capita in USD\",\n         y = \"Life Expectancy\") +\n    scale_x_log10(breaks = c(500, 5000, 50000)) +\n  theme_economist()\ngapminder %>%\n  filter(continent != \"Oceania\") %>%\n  filter(year == max(year)) %>% \n  ggplot(aes(gdpPercap, lifeExp, color = continent)) +\n    geom_point(alpha = 0.7) +\n    geom_smooth(method = \"lm\", \n                formula = y ~ x,\n                se = FALSE) + \n    facet_wrap(~continent, nrow = 2) +\n    labs(title = \"Life Expectancy and GDP per Capita\",\n         subtitle = \"Connection between GDP and life expectancy is weakest in Africa\",\n         x = \"GDP per Capita in USD\",\n         y = \"Life Expectancy\") +\n    scale_x_log10(breaks = c(500, 5000, 50000),\n                  labels = scales::dollar_format(accuracy = 1)) + \n    theme_economist() +\n    theme(legend.position = \"none\")"},{"path":"visualization.html","id":"summary-1","chapter":"1 Visualization","heading":"1.5 Summary","text":"chapter, first looked basic coding terminology concepts deal programming R. learned three basic components make plot: data, mapping, one geoms. ggplot2 package offers wide range geoms can use create different types plots. Next, examined “super package” tidyverse, includes helpful tools visualization. also offers features importing manipulating data, main topic Chapter @(wrangling). Lastly, explored advanced plotting features axis scaling, faceting, themes.main statistical concept discussed “distribution,” collection related numbers. R, numbers usually stored variable inside tibble. “Frequency distribution” “empirical distribution” common phrases describe objects. learned calculate statistics — often referred “summary statistics” — distributions. important involve two concepts: center distribution variability distribution. center often summarized mean (mean()) median (median()). Variability measured standard deviation (sd()) scaled median absolute deviation (mad()) 95% confidence interval (quantile(probs = c(0.025, 0.975))).Recall plot began chapter :now know enough make plots like .important know seen small part R offers. example, can use gganimate package bring slightly modified version gapminder plot life:plotly package makes plot interactive. Click explore!beautiful plot just collection steps, simple enough . taught () steps. Time start walking .","code":"\nlibrary(gganimate)\n\ngap_anim <- gapminder %>%\n  filter(continent != \"Oceania\") %>%\n  ggplot(aes(gdpPercap, lifeExp, color = continent)) +\n    geom_point(show.legend = FALSE, alpha = 0.7) +\n    facet_wrap(~continent, nrow = 1) +\n    scale_size(range = c(2, 12)) +\n    scale_x_log10() +\n    labs(subtitle = \"Life Expectancy and GDP per Capita (1952-2007)\",\n         x = \"GDP per Capita, USD\",\n         y = \"Life Expectancy, Years\") +\n    theme_linedraw() +\n    transition_time(year) +\n    labs(title = \"Year: {frame_time}\") +\n    shadow_wake(wake_length = 0.1, alpha = FALSE)\n\ngap_anim\nlibrary(plotly)\n\nggplotly(gap_p)"},{"path":"wrangling.html","id":"wrangling","chapter":"2 Wrangling","heading":"2 Wrangling","text":"Data science data cleaning.Start loading packages need chapter.tidyverse package used every chapter. primer.data data package created specifically Primer. lubridate package working dates times. janitor offers functions cleaning dirty data. skimr contains functions useful providing summary statistics. nycflights includes data associated flights New York City’s three major airports. gapminder annual data countries going back 50 years. fivethirtyeight cleans data FiveThirtyEight team.","code":"\nlibrary(tidyverse)\nlibrary(primer.data)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(skimr)\nlibrary(nycflights13)\nlibrary(gapminder)\nlibrary(fivethirtyeight)"},{"path":"wrangling.html","id":"data-gathering","chapter":"2 Wrangling","heading":"2.1 Data Gathering","text":"read_csv() function turns flat files data frames. specifically, turns files whose values separated commas. Let’s import comma separated values (hence “csv”) file internet. read_csv() function included readr package, one packages Tidyverse, different read.csv() function comes installed R. Always use Tidyverse functions, possible.comma csv file corresponds column, column names taken first line file. , function “guesses” appropriate data type columns creates. Sometimes csv files lot dirtier require significant wrangling can explore data create usable graphics.link file containing faculty gender data across departments Harvard University. Note, file argument read_csv() function flexible. , takes url. file can also absolute relative paths file saved locally computer.need “skip” first row file code comment top, nothing actual data.Run summary() function fac tibble.Don’t confuse summary(), built-— generally termed “Base” — R function providing summary object, summarize(), one important functions dplyr.may notice something appears wrong dataset. department employed 644 male professors? explore mystery later chapter.","code":"\nurl <- \"https://raw.githubusercontent.com/PPBDS/primer/master/02-wrangling/data/faculty.csv\"\n\nfac <- read_csv(file = url, \n                skip = 1)## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   Concentration = col_character(),\n##   `Professors M` = col_double(),\n##   `Professors F` = col_double()\n## )\nfac## # A tibble: 45 x 3\n##    Concentration                      `Professors M` `Professors F`\n##    <chr>                                       <dbl>          <dbl>\n##  1 Theater, Dance & Media                          0              2\n##  2 Women, Gender, & Sexuality                      1              5\n##  3 History of Science                              5              8\n##  4 Romance Langs & Lits                            6              9\n##  5 Music                                           6              8\n##  6 African & African American Studies             19             15\n##  7 History                                        23             18\n##  8 History of Art and Architecture                11              7\n##  9 Psychology                                     11              7\n## 10 Sociology                                      11              7\n## # … with 35 more rows\nsummary(fac)##  Concentration       Professors M  Professors F\n##  Length:45          Min.   :  0   Min.   :  0  \n##  Class :character   1st Qu.:  7   1st Qu.:  2  \n##  Mode  :character   Median : 13   Median :  4  \n##                     Mean   : 29   Mean   : 10  \n##                     3rd Qu.: 20   3rd Qu.:  7  \n##                     Max.   :644   Max.   :220"},{"path":"wrangling.html","id":"html","chapter":"2 Wrangling","heading":"2.1.1 HTML","text":"data need answer question always handy spreadsheet. example, can find interesting data murders US Wikipedia page:can see data table visit webpage:get data, need web scraping.Web scraping, web harvesting, term use describe process extracting data website. reason can information used browser render webpages received text file server. text code written hyper text markup language (HTML). Every browser way show html source code page, one different. Chrome, can use Control-U PC command+option+U Mac. see something like :code accessible, can download HTML file, import R, write programs extract information need page. However, look HTML code, might seem like daunting task. show convenient tools facilitate process. get idea works, lines code Wikipedia page provides US murders data:can actually see data, except data values surrounded html code <td>. can also see pattern stored. know HTML, can write programs leverage knowledge patterns extract want. also take advantage language widely used make webpages look “pretty” called Cascading Style Sheets (CSS).Although provide tools make possible scrape data without knowing HTML, data scientist quite useful learn HTML CSS. improve scraping skills, might come handy creating webpage showcase work.","code":"\nurl <- paste0(\"https://en.wikipedia.org/w/index.php?title=\",\n              \"Gun_violence_in_the_United_States_by_state\",\n              \"&direction=prev&oldid=810166167\")<table class=\"wikitable sortable\">\n<tr>\n<th>State<\/th>\n<th><a href=\"/wiki/List_of_U.S._states_and_territories_by_population\" \ntitle=\"List of U.S. states and territories by population\">Population<\/a><br />\n<small>(total inhabitants)<\/small><br />\n<small>(2015)<\/small> <sup id=\"cite_ref-1\" class=\"reference\">\n<a href=\"#cite_note-1\">[1]<\/a><\/sup><\/th>\n<th>Murders and Nonnegligent\n<p>Manslaughter<br />\n<small>(total deaths)<\/small><br />\n<small>(2015)<\/small> <sup id=\"cite_ref-2\" class=\"reference\">\n<a href=\"#cite_note-2\">[2]<\/a><\/sup><\/p>\n<\/th>\n<th>Murder and Nonnegligent\n<p>Manslaughter Rate<br />\n<small>(per 100,000 inhabitants)<\/small><br />\n<small>(2015)<\/small><\/p>\n<\/th>\n<\/tr>\n<tr>\n<td><a href=\"/wiki/Alabama\" title=\"Alabama\">Alabama<\/a><\/td>\n<td>4,853,875<\/td>\n<td>348<\/td>\n<td>7.2<\/td>\n<\/tr>\n<tr>\n<td><a href=\"/wiki/Alaska\" title=\"Alaska\">Alaska<\/a><\/td>\n<td>737,709<\/td>\n<td>59<\/td>\n<td>8.0<\/td>\n<\/tr>\n<tr>"},{"path":"wrangling.html","id":"the-rvest-package","chapter":"2 Wrangling","heading":"2.1.2 The rvest package","text":"tidyverse contains web harvesting package called rvest. first step using package import webpage R. package makes quite simple:Note entire Murders US Wikipedia webpage now contained h. class object :rvest package actually general; handles XML documents. XML general markup language (’s ML stands ) can used represent kind data. HTML specific type XML specifically developed representing webpages. focus HTML documents.Now, extract table object h? print h, don’t really see much:can see code defines downloaded webpage using html_text function like :don’t show output includes thousands characters, look , can see data stored HTML table: can see line HTML code <table class=\"wikitable sortable\">. different parts HTML document, often defined message < > referred nodes. rvest package includes functions extract nodes HTML document: html_nodes extracts nodes different types html_node extracts first one. extract tables html code use:Now, instead entire webpage, just html code tables page:table interested first one:clearly tidy dataset, even data frame. code , can definitely see pattern writing code extract just data doable. fact, rvest includes function just converting HTML tables data frames:now much closer usable data table:still wrangling . example, need remove commas turn characters numbers. continuing , learn general approach extracting information web sites.","code":"\nlibrary(tidyverse)\nlibrary(rvest)\nh <- read_html(url)\nclass(h)## [1] \"xml_document\" \"xml_node\"\nh## {html_document}\n## <html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n## [1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n## [2] <body class=\"mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject  ...\nhtml_text(h)\ntab <- h %>% html_nodes(\"table\")\ntab## {xml_nodeset (2)}\n## [1] <table class=\"wikitable sortable\"><tbody>\\n<tr>\\n<th>State\\n<\/th>\\n<th>\\n ...\n## [2] <table class=\"nowraplinks hlist mw-collapsible mw-collapsed navbox-inner\" ...\ntab[[1]]## {html_node}\n## <table class=\"wikitable sortable\">\n## [1] <tbody>\\n<tr>\\n<th>State\\n<\/th>\\n<th>\\n<a href=\"/wiki/List_of_U.S._states ...\ntab <- tab[[1]] %>% html_table\nclass(tab)## [1] \"data.frame\"\ntab <- tab %>% setNames(c(\"state\", \"population\", \n                          \"total\", \"murder_rate\")) \n\nhead(tab)##        state population total murder_rate\n## 1    Alabama  4,853,875   348         7.2\n## 2     Alaska    737,709    59         8.0\n## 3    Arizona  6,817,565   309         4.5\n## 4   Arkansas  2,977,853   181         6.1\n## 5 California 38,993,940 1,861         4.8\n## 6   Colorado  5,448,819   176         3.2"},{"path":"wrangling.html","id":"css-selectors","chapter":"2 Wrangling","heading":"2.1.3 CSS selectors","text":"default look webpage made basic HTML quite unattractive. aesthetically pleasing pages see today made using CSS define look style webpages. fact pages company style usually results use CSS file define style. general way CSS files work defining elements webpage look. title, headings, itemized lists, tables, links, example, receive style including font, color, size, distance margin. CSS leveraging patterns used define elements, referred selectors. example pattern, used , table, many, many .want grab data webpage happen know selector unique part page containing data, can use html_nodes function. However, knowing selector can quite complicated.\nfact, complexity webpages increasing become sophisticated. advanced ones, seems almost impossible find nodes define particular piece data. However, selector gadgets actually make possible.SelectorGadget1 piece software allows interactively determine CSS selector need extract specific components webpage. plan scraping data tables html pages, highly recommend install . Chrome extension available permits turn gadget , click page, highlights parts shows selector need extract parts. various demos including rvest author Hadley Wickham’s\nvignette2 tutorials based vignette3.4","code":""},{"path":"wrangling.html","id":"json","chapter":"2 Wrangling","heading":"2.1.4 JSON","text":"Sharing data internet become common. Unfortunately, providers use different formats, makes harder data scientists wrangle data R. Yet standards also becoming common. Currently, format widely adopted JavaScript Object Notation JSON. format general, nothing like spreadsheet. JSON file looks like code use define list. example information stored JSON format:file actually represents data frame. read , can use function fromJSON jsonlite package. Note JSON files often made available via internet. Several organizations provide JSON API web service can connect directly can obtain data.","code":"## \n## Attaching package: 'jsonlite'## The following object is masked from 'package:purrr':\n## \n##     flatten## [\n##   {\n##     \"name\": \"Miguel\",\n##     \"student_id\": 1,\n##     \"exam_1\": 85,\n##     \"exam_2\": 86\n##   },\n##   {\n##     \"name\": \"Sofia\",\n##     \"student_id\": 2,\n##     \"exam_1\": 94,\n##     \"exam_2\": 93\n##   },\n##   {\n##     \"name\": \"Aya\",\n##     \"student_id\": 3,\n##     \"exam_1\": 87,\n##     \"exam_2\": 88\n##   },\n##   {\n##     \"name\": \"Cheng\",\n##     \"student_id\": 4,\n##     \"exam_1\": 90,\n##     \"exam_2\": 91\n##   }\n## ]"},{"path":"wrangling.html","id":"tibbles","chapter":"2 Wrangling","heading":"2.2 Tibbles","text":"Tibbles kind data frame, useful storing data number observations variable. can use tibble() function create data frames. Tibbles composed columns, variable, rows, values variables single “unit” “observation.” column (.e., variable) can different type: character, numeric, factor, date .","code":""},{"path":"wrangling.html","id":"tibble","chapter":"2 Wrangling","heading":"2.2.1 tibble()","text":"code, specify variable names (names columns) , , b, c. variable, give different numerical value. variable name, data type specified data within column. tibble can consist one atomic vectors, important types double, character, logical, integer. tibble includes variable type. (“L” “9L” tells R want d integer rather default, double.) print tibble, variable type shown variable name.Variables begin number (like 54abc) include spaces (like var). insist using varible names like , must include backticks around name reference .include backticks, R give us error.sometimes easier use function tribble() create tibbles.tildes specifies rows column names. formatting makes easier, relative specifying raw vectors, see values observation.","code":"\ntibble(a = 2.1, b = \"Hello\", c = TRUE, d = 9L)## # A tibble: 1 x 4\n##       a b     c         d\n##   <dbl> <chr> <lgl> <int>\n## 1   2.1 Hello TRUE      9\ntibble(`54abc` = 1, `my var` = 2, c = 3)## # A tibble: 1 x 3\n##   `54abc` `my var`     c\n##     <dbl>    <dbl> <dbl>\n## 1       1        2     3tibble(54abc = 1, my var = 2, c = 3)## Error: <text>:1:10: unexpected symbol\n## 1: tibble(54abc\n##              ^\ntribble(\n  ~ var1, ~ `var 2`, ~ myvar,\n  1,           3,      5,\n  4,           6,      8,\n)## # A tibble: 2 x 3\n##    var1 `var 2` myvar\n##   <dbl>   <dbl> <dbl>\n## 1     1       3     5\n## 2     4       6     8"},{"path":"wrangling.html","id":"clean_names","chapter":"2 Wrangling","heading":"2.2.2 clean_names()","text":"Recall fac tibble created earlier Chapter.Let’s look department 644 make professors.Notice space column name Professors M. Recall can solve problem using backticks.department called “total.” backticks annoying. run clean_names() function, janitor package.clean_names() fixes variable names. wide tibble (.e., one lots variables), much easier either renaming hand using backticks time.seems one row table takes sum rows. likely last row dataframe. Use tail() print last rows dataframe check final row.remove “Total” row affect dplyr functions try run later. Check tail() dataframe make sure proper row removed.","code":"\nfac## # A tibble: 45 x 3\n##    Concentration                      `Professors M` `Professors F`\n##    <chr>                                       <dbl>          <dbl>\n##  1 Theater, Dance & Media                          0              2\n##  2 Women, Gender, & Sexuality                      1              5\n##  3 History of Science                              5              8\n##  4 Romance Langs & Lits                            6              9\n##  5 Music                                           6              8\n##  6 African & African American Studies             19             15\n##  7 History                                        23             18\n##  8 History of Art and Architecture                11              7\n##  9 Psychology                                     11              7\n## 10 Sociology                                      11              7\n## # … with 35 more rowsfac %>%\n  filter(Professors M == 644)## Error: <text>:2:21: unexpected symbol\n## 1: fac %>%\n## 2:   filter(Professors M\n##                        ^\nfac %>%\n  filter(`Professors M` == 644)## # A tibble: 1 x 3\n##   Concentration `Professors M` `Professors F`\n##   <chr>                  <dbl>          <dbl>\n## 1 Total                    644            220\nlibrary(janitor)\nfac %>%\n  clean_names()## # A tibble: 45 x 3\n##    concentration                      professors_m professors_f\n##    <chr>                                     <dbl>        <dbl>\n##  1 Theater, Dance & Media                        0            2\n##  2 Women, Gender, & Sexuality                    1            5\n##  3 History of Science                            5            8\n##  4 Romance Langs & Lits                          6            9\n##  5 Music                                         6            8\n##  6 African & African American Studies           19           15\n##  7 History                                      23           18\n##  8 History of Art and Architecture              11            7\n##  9 Psychology                                   11            7\n## 10 Sociology                                    11            7\n## # … with 35 more rows\ntail(fac)## # A tibble: 6 x 3\n##   Concentration               `Professors M` `Professors F`\n##   <chr>                                <dbl>          <dbl>\n## 1 Near Eastern Langs & Civs               11              1\n## 2 Economics                               40              3\n## 3 Environmental Science & Eng             13              0\n## 4 Linguistics                              5              0\n## 5 Math                                    19              0\n## 6 Total                                  644            220\nfac %>%\n  filter(Concentration != \"Total\") %>%\n  tail()## # A tibble: 6 x 3\n##   Concentration               `Professors M` `Professors F`\n##   <chr>                                <dbl>          <dbl>\n## 1 Biomedical Engineering                  15              2\n## 2 Near Eastern Langs & Civs               11              1\n## 3 Economics                               40              3\n## 4 Environmental Science & Eng             13              0\n## 5 Linguistics                              5              0\n## 6 Math                                    19              0"},{"path":"wrangling.html","id":"skim","chapter":"2 Wrangling","heading":"2.2.3 skim()","text":"skim() function skimr package useful summary tibbleTABLE 2.1: Data summaryVariable type: characterVariable type: numericTake quick look section containing numeric variables. particular interest right-column offers insight potential distribution data.","code":"\nskim(fac)"},{"path":"wrangling.html","id":"characters","chapter":"2 Wrangling","heading":"2.3 Characters","text":"\nFIGURE 2.1: Real data nasty.\nfar, tibbles clean wholesome, like gapminder trains. Real life datasets much nastier. bring data R outside world discover problems. now discuss common remedial tasks cleaning transforming character data, also known strings. string one characters enclosed inside pair matching ‘single’ “double quotes.”lesson deals things can vectors class character. fruit, words, sentences Tidyverse character vectors use. Although can manipulate character vectors directly, much common, real world situations, work vectors tibble.use fruit data, vector names different fruits, stringr package, automatically loaded issue library(tidyverse).","code":"\ntbl_fruit <- tibble(fruit = fruit)"},{"path":"wrangling.html","id":"studying-a-single-character-vector","chapter":"2 Wrangling","heading":"2.3.1 Studying a single character vector","text":"Note sample_n() selects random set rows tibble.str_detect() determines character vector matches pattern. returns logical vector length input. Recall logicals either TRUE FALSE.fruits actually use word “fruit?”str_length() counts characters strings. Note different length() character vector .str_sub() extracts parts string.`function takes start end arguments vectorised.str_c() combines character vector length single string. similar normal c() function creating vector.str_replace() replaces pattern within string.","code":"\ntbl_fruit %>% \n  sample_n(size = 8)## # A tibble: 8 x 1\n##   fruit      \n##   <chr>      \n## 1 cantaloupe \n## 2 mango      \n## 3 rock melon \n## 4 nut        \n## 5 blueberry  \n## 6 mulberry   \n## 7 huckleberry\n## 8 cranberry\ntbl_fruit %>% \n  mutate(fruit_in_name = str_detect(fruit, pattern = \"fruit\")) %>% \n  filter(fruit_in_name)## # A tibble: 8 x 2\n##   fruit        fruit_in_name\n##   <chr>        <lgl>        \n## 1 breadfruit   TRUE         \n## 2 dragonfruit  TRUE         \n## 3 grapefruit   TRUE         \n## 4 jackfruit    TRUE         \n## 5 kiwi fruit   TRUE         \n## 6 passionfruit TRUE         \n## 7 star fruit   TRUE         \n## 8 ugli fruit   TRUE\ntbl_fruit %>% \n  mutate(name_length = str_length(fruit)) ## # A tibble: 80 x 2\n##    fruit        name_length\n##    <chr>              <int>\n##  1 apple                  5\n##  2 apricot                7\n##  3 avocado                7\n##  4 banana                 6\n##  5 bell pepper           11\n##  6 bilberry               8\n##  7 blackberry            10\n##  8 blackcurrant          12\n##  9 blood orange          12\n## 10 blueberry              9\n## # … with 70 more rows\ntbl_fruit %>% \n  mutate(first_three_letters = str_sub(fruit, 1, 3)) ## # A tibble: 80 x 2\n##    fruit        first_three_letters\n##    <chr>        <chr>              \n##  1 apple        app                \n##  2 apricot      apr                \n##  3 avocado      avo                \n##  4 banana       ban                \n##  5 bell pepper  bel                \n##  6 bilberry     bil                \n##  7 blackberry   bla                \n##  8 blackcurrant bla                \n##  9 blood orange blo                \n## 10 blueberry    blu                \n## # … with 70 more rows\ntbl_fruit %>% \n  mutate(name_with_s = str_c(fruit, \"s\")) ## # A tibble: 80 x 2\n##    fruit        name_with_s  \n##    <chr>        <chr>        \n##  1 apple        apples       \n##  2 apricot      apricots     \n##  3 avocado      avocados     \n##  4 banana       bananas      \n##  5 bell pepper  bell peppers \n##  6 bilberry     bilberrys    \n##  7 blackberry   blackberrys  \n##  8 blackcurrant blackcurrants\n##  9 blood orange blood oranges\n## 10 blueberry    blueberrys   \n## # … with 70 more rows\ntbl_fruit %>% \n  mutate(capital_A = str_replace(fruit, \n                                 pattern = \"a\", \n                                 replacement = \"A\")) ## # A tibble: 80 x 2\n##    fruit        capital_A   \n##    <chr>        <chr>       \n##  1 apple        Apple       \n##  2 apricot      Apricot     \n##  3 avocado      Avocado     \n##  4 banana       bAnana      \n##  5 bell pepper  bell pepper \n##  6 bilberry     bilberry    \n##  7 blackberry   blAckberry  \n##  8 blackcurrant blAckcurrant\n##  9 blood orange blood orAnge\n## 10 blueberry    blueberry   \n## # … with 70 more rows"},{"path":"wrangling.html","id":"regular-expressions-with-stringr","chapter":"2 Wrangling","heading":"2.3.2 Regular expressions with stringr","text":"Sometimes, string tasks expressed terms fixed string, can described terms pattern. Regular expressions, also know “regexes,” standard way specify patterns. regexes, specific characters constructs take special meaning order match multiple strings.explore regular expressions, use str_detect() function, reports TRUE string matches pattern, filter() see matches. example, fruits include “w” name.code , first metacharacter period . , stands single character, except newline (way, represented \\n). regex b.r match fruits “b,” followed single character, followed “r.” Regexes case sensitive.Anchors can included express expression must occur within string. ^ indicates beginning string $ indicates end.","code":"\ntbl_fruit %>%\n  filter(str_detect(fruit, pattern = \"w\"))## # A tibble: 4 x 1\n##   fruit     \n##   <chr>     \n## 1 honeydew  \n## 2 kiwi fruit\n## 3 strawberry\n## 4 watermelon\ntbl_fruit %>%\n  filter(str_detect(fruit, pattern = \"b.r\"))## # A tibble: 15 x 1\n##    fruit      \n##    <chr>      \n##  1 bilberry   \n##  2 blackberry \n##  3 blueberry  \n##  4 boysenberry\n##  5 cloudberry \n##  6 cranberry  \n##  7 cucumber   \n##  8 elderberry \n##  9 goji berry \n## 10 gooseberry \n## 11 huckleberry\n## 12 mulberry   \n## 13 raspberry  \n## 14 salal berry\n## 15 strawberry\ntbl_fruit %>%\n  filter(str_detect(fruit, pattern = \"^w\"))## # A tibble: 1 x 1\n##   fruit     \n##   <chr>     \n## 1 watermelon\ntbl_fruit %>%\n  filter(str_detect(fruit, pattern = \"o$\"))## # A tibble: 5 x 1\n##   fruit    \n##   <chr>    \n## 1 avocado  \n## 2 mango    \n## 3 pamelo   \n## 4 pomelo   \n## 5 tamarillo"},{"path":"wrangling.html","id":"raw-strings","chapter":"2 Wrangling","heading":"2.3.3 Raw strings","text":"certain characters special meaning regexes, including $ * + . ? [ ] ^ { } | ( ) \\. makes things difficult want use characters within strings instead regexes. Patters want search character, rather use metacharacters, make use r\"()\", raw string constant R. Consider:\\ preceding quote known escaping. signals computer quotations part string. Now, happens backslash within string.can see, backslash used escape initial backslash.","code":"\nr\"(Do you use \"airquotes\" much?)\"## [1] \"Do you use \\\"airquotes\\\" much?\"\nr\"(\\)\"## [1] \"\\\\\""},{"path":"wrangling.html","id":"factors","chapter":"2 Wrangling","heading":"2.4 Factors","text":"Factors categorical variables may take specified set values. Thus, known categorical variables, can separated categories. manipulate factors use forcats package, core package tidyverse.easy make factors either factor(), .factor() parse_factor().three options best depends situation. factor() useful creating factor nothing. .factor() best simple transformations, especially character variables, example. parse_factor() modern powerful three.Let’s use gapminder$continent example.get frequency table tibble, tibble, use count(). get similar result free-range factor, use fct_count().","code":"\ntibble(X = letters[1:3]) %>% \n  mutate(fac_1 = factor(X)) %>% \n  mutate(fac_2 = as.factor(X)) %>% \n  mutate(fac_3 = parse_factor(X))## # A tibble: 3 x 4\n##   X     fac_1 fac_2 fac_3\n##   <chr> <fct> <fct> <fct>\n## 1 a     a     a     a    \n## 2 b     b     b     b    \n## 3 c     c     c     c\nstr(gapminder$continent)##  Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\nlevels(gapminder$continent)## [1] \"Africa\"   \"Americas\" \"Asia\"     \"Europe\"   \"Oceania\"\nnlevels(gapminder$continent)## [1] 5\nclass(gapminder$continent)## [1] \"factor\"\ngapminder %>% \n  count(continent)## # A tibble: 5 x 2\n##   continent     n\n##   <fct>     <int>\n## 1 Africa      624\n## 2 Americas    300\n## 3 Asia        396\n## 4 Europe      360\n## 5 Oceania      24\nfct_count(gapminder$continent)## # A tibble: 5 x 2\n##   f            n\n##   <fct>    <int>\n## 1 Africa     624\n## 2 Americas   300\n## 3 Asia       396\n## 4 Europe     360\n## 5 Oceania     24"},{"path":"wrangling.html","id":"dropping-unused-levels","chapter":"2 Wrangling","heading":"2.4.1 Dropping unused levels","text":"Just drop rows corresponding specific factor level, levels factor change. Sometimes unused levels can come back haunt later, e.g., figure legends.Watch happens levels country filter gapminder handful countries.Even though h_gap data handful countries, still schlepping around levels original gapminder tibble.can get rid ? base function droplevels() operates factors data frame single factor. function fct_drop() operates factor.","code":"\nnlevels(gapminder$country)## [1] 142\nh_gap <- gapminder %>%\n  filter(country %in% c(\"Egypt\", \"Haiti\", \n                        \"Romania\", \"Thailand\", \n                        \"Venezuela\"))\nnlevels(h_gap$country)## [1] 142\nh_gap_dropped <- h_gap %>% \n  droplevels()\nnlevels(h_gap_dropped$country)## [1] 5\n# Use fct_drop() on a free-range factor\n\nh_gap$country %>%\n  fct_drop() %>%\n  levels()## [1] \"Egypt\"     \"Haiti\"     \"Romania\"   \"Thailand\"  \"Venezuela\""},{"path":"wrangling.html","id":"change-order-of-the-levels","chapter":"2 Wrangling","heading":"2.4.2 Change order of the levels","text":"default, factor levels ordered alphabetically.can also order factors :Frequency: Make common level first .Another variable: Order factor levels according summary statistic another variable.Let’s order continent frequency using fct_infreq().can also frequency print backwards using fct_rev().two barcharts frequency continent differ order continents. prefer? show code just second one.Let’s now order country another variable, forwards backwards. variable usually quantitative order factor according grouped summary. factor grouping variable default summarizing function median() can specify something else.reorder factor levels? often makes plots much better! factor mapped x y, almost always reordered quantitative variable mapping one.Compare interpretability two plots life expectancy North South American countries 2007. difference order country factor. one find easier learn ?","code":"\ngapminder$continent %>%\n  levels()## [1] \"Africa\"   \"Americas\" \"Asia\"     \"Europe\"   \"Oceania\"\ngapminder$continent %>% \n  fct_infreq() %>%\n  levels()## [1] \"Africa\"   \"Asia\"     \"Europe\"   \"Americas\" \"Oceania\"\ngapminder$continent %>% \n  fct_infreq() %>%\n  fct_rev() %>% \n  levels()## [1] \"Oceania\"  \"Americas\" \"Europe\"   \"Asia\"     \"Africa\"\ngapminder %>% \n  mutate(continent = fct_infreq(continent)) %>% \n  mutate(continent = fct_rev(continent)) %>% \n  ggplot(aes(x = continent)) +\n    geom_bar() +\n    coord_flip()\n# Order countries by median life expectancy\n\nfct_reorder(gapminder$country, \n            gapminder$lifeExp) %>% \n  levels() %>% \n  head()## [1] \"Sierra Leone\"  \"Guinea-Bissau\" \"Afghanistan\"   \"Angola\"       \n## [5] \"Somalia\"       \"Guinea\"\n# Order according to minimum life exp instead of median\n\nfct_reorder(gapminder$country, \n            gapminder$lifeExp, min) %>% \n  levels() %>% \n  head()## [1] \"Rwanda\"       \"Afghanistan\"  \"Gambia\"       \"Angola\"       \"Sierra Leone\"\n## [6] \"Cambodia\"\n# Backwards!\n\nfct_reorder(gapminder$country, \n            gapminder$lifeExp, \n            .desc = TRUE) %>% \n  levels() %>% \n  head()## [1] \"Iceland\"     \"Japan\"       \"Sweden\"      \"Switzerland\" \"Netherlands\"\n## [6] \"Norway\"\ngapminder %>% \n  filter(year == 2007, \n         continent == \"Americas\") %>% \n  ggplot(aes(x = lifeExp, y = country)) + \n    geom_point()\ngapminder %>% \n  filter(year == 2007, \n         continent == \"Americas\") %>% \n  ggplot(aes(x = lifeExp, \n             y = fct_reorder(country, lifeExp))) + \n    geom_point()"},{"path":"wrangling.html","id":"recode-the-levels","chapter":"2 Wrangling","heading":"2.4.3 Recode the levels","text":"Sometimes better ideas certain levels . called recoding.","code":"\ni_gap <- gapminder %>% \n  filter(country %in% c(\"United States\", \"Sweden\", \n                        \"Australia\")) %>% \n  droplevels()\n\ni_gap$country %>% \n  levels()## [1] \"Australia\"     \"Sweden\"        \"United States\"\ni_gap$country %>%\n  fct_recode(\"USA\" = \"United States\", \"Oz\" = \"Australia\") %>% \n  levels()## [1] \"Oz\"     \"Sweden\" \"USA\""},{"path":"wrangling.html","id":"grow-a-factor","chapter":"2 Wrangling","heading":"2.4.4 Grow a factor","text":"Let’s create two tibbles, data two countries dropped unused factor levels.country factors df1 df2 different levels.Can just combine ?Umm, . wrong many levels! Use fct_c() .","code":"\ndf1 <- gapminder %>%\n  filter(country %in% c(\"United States\", \"Mexico\"), year > 2000) %>%\n  droplevels()\ndf2 <- gapminder %>%\n  filter(country %in% c(\"France\", \"Germany\"), year > 2000) %>%\n  droplevels()\nlevels(df1$country)## [1] \"Mexico\"        \"United States\"\nlevels(df2$country)## [1] \"France\"  \"Germany\"\nc(df1$country, df2$country)## [1] 1 1 2 2 1 1 2 2\nfct_c(df1$country, df2$country)## [1] Mexico        Mexico        United States United States France       \n## [6] France        Germany       Germany      \n## Levels: Mexico United States France Germany"},{"path":"wrangling.html","id":"lists","chapter":"2 Wrangling","heading":"2.5 Lists","text":"\nFIGURE 2.2: Subsetting list, visually.\nEarlier, briefly introduced lists. Lists type vector step complexity atomic vectors, lists can contain lists. makes suitable representing hierarchical tree-like structures. create list function list():useful tool working lists str() focuses displaying structure, contents.Unlike atomic vectors, list() can contain mix objects.Lists can even contain lists!","code":"\nx <- list(1, 2, 3)\nx## [[1]]\n## [1] 1\n## \n## [[2]]\n## [1] 2\n## \n## [[3]]\n## [1] 3\nstr(x)## List of 3\n##  $ : num 1\n##  $ : num 2\n##  $ : num 3\nx_named <- list(a = 1, b = 2, c = 3)\nstr(x_named)## List of 3\n##  $ a: num 1\n##  $ b: num 2\n##  $ c: num 3\ny <- list(\"a\", 1L, 1.5, TRUE)\nstr(y)## List of 4\n##  $ : chr \"a\"\n##  $ : int 1\n##  $ : num 1.5\n##  $ : logi TRUE\nz <- list(list(1, 2), list(3, 4))\nstr(z)## List of 2\n##  $ :List of 2\n##   ..$ : num 1\n##   ..$ : num 2\n##  $ :List of 2\n##   ..$ : num 3\n##   ..$ : num 4"},{"path":"wrangling.html","id":"visualizing-lists","chapter":"2 Wrangling","heading":"2.5.1 Visualizing lists","text":"explain complicated list manipulation functions, ’s helpful visual representation lists. example, take three lists:’ll draw follows:three principles:Lists rounded corners. Atomic vectors square corners.Lists rounded corners. Atomic vectors square corners.Children drawn inside parent, slightly darker background make easier see hierarchy.Children drawn inside parent, slightly darker background make easier see hierarchy.orientation children (.e. rows columns) isn’t important, ’ll pick row column orientation either save space illustrate important property example.orientation children (.e. rows columns) isn’t important, ’ll pick row column orientation either save space illustrate important property example.","code":"\nx1 <- list(c(1, 2), c(3, 4))\nx2 <- list(list(1, 2), list(3, 4))\nx3 <- list(1, list(2, list(3)))"},{"path":"wrangling.html","id":"subsetting","chapter":"2 Wrangling","heading":"2.5.2 Subsetting","text":"three ways subset list, ’ll illustrate list named :[ ] extracts sub-list. result always list.Like vectors, can subset logical, integer, character vector.[[ ]] extracts single component list. removes level hierarchy list.$ shorthand extracting named elements list. works similarly [[ ]] except don’t need use quotes.distinction [ ] [[ ]] really important lists, [[ ]] drills list [ ] returns new, smaller list. Compare code output visual representation.","code":"\na <- list(a = 1:3, b = \"a string\", c = pi, d = list(-1, -5))\nstr(a[1:2])## List of 2\n##  $ a: int [1:3] 1 2 3\n##  $ b: chr \"a string\"\nstr(a[4])## List of 1\n##  $ d:List of 2\n##   ..$ : num -1\n##   ..$ : num -5\nstr(a[[1]])##  int [1:3] 1 2 3\nstr(a[[4]])## List of 2\n##  $ : num -1\n##  $ : num -5\na$a## [1] 1 2 3\na[[\"a\"]]## [1] 1 2 3"},{"path":"wrangling.html","id":"date-times","chapter":"2 Wrangling","heading":"2.6 Date-Times","text":"manipulate date-times using lubridate package, makes easier work dates times R. lubridate part core tidyverse need ’re working dates/times.three types date/time data refer instant time:date. Tibbles print <date>.date. Tibbles print <date>.time within day. Tibbles print <time>.time within day. Tibbles print <time>.date-time date plus time: uniquely identifies \ninstant time (typically nearest second). Tibbles print \n<dttm>.date-time date plus time: uniquely identifies \ninstant time (typically nearest second). Tibbles print \n<dttm>.always use simplest possible datatype works needs. means can use date instead date-time, . Date-times substantially complicated need handle time zones, ’ll come back end chapter.get current date date-time can use today() now():Otherwise, three ways ’re likely create date/time:string.individual date-time components.existing date/time object.work follows:","code":"\ntoday()## [1] \"2021-01-13\"\nnow()## [1] \"2021-01-13 19:58:03 EST\""},{"path":"wrangling.html","id":"from-strings","chapter":"2 Wrangling","heading":"2.6.1 From strings","text":"Date/time data often comes strings. lubridate functions automatically work format specify order component. use , identify order year, month, day appear dates, arrange “y,” “m,” “d” order. gives name lubridate function parse date. example:functions also take unquoted numbers. concise way create single date/time object, might need filtering date/time data. ymd() short unambiguous:ymd() friends create dates. create date-time, add underscore one “h,” “m,” “s” name parsing function:can also force creation date-time date supplying timezone:","code":"\nymd(\"2017-01-31\")## [1] \"2017-01-31\"\nmdy(\"January 31st, 2017\")## [1] \"2017-01-31\"\ndmy(\"31-Jan-2017\")## [1] \"2017-01-31\"\nymd(20170131)## [1] \"2017-01-31\"\nymd_hms(\"2017-01-31 20:11:59\")## [1] \"2017-01-31 20:11:59 UTC\"\nmdy_hm(\"01/31/2017 08:01\")## [1] \"2017-01-31 08:01:00 UTC\"\nymd(20170131, tz = \"UTC\")## [1] \"2017-01-31 UTC\""},{"path":"wrangling.html","id":"from-individual-components","chapter":"2 Wrangling","heading":"2.6.2 From individual components","text":"Instead single string, sometimes ’ll individual components date-time spread across multiple columns. flights data:create date/time sort input, use make_date() dates, make_datetime() date-times:","code":"\nflights %>% \n  select(year, month, day, hour, minute)## # A tibble: 336,776 x 5\n##     year month   day  hour minute\n##    <int> <int> <int> <dbl>  <dbl>\n##  1  2013     1     1     5     15\n##  2  2013     1     1     5     29\n##  3  2013     1     1     5     40\n##  4  2013     1     1     5     45\n##  5  2013     1     1     6      0\n##  6  2013     1     1     5     58\n##  7  2013     1     1     6      0\n##  8  2013     1     1     6      0\n##  9  2013     1     1     6      0\n## 10  2013     1     1     6      0\n## # … with 336,766 more rows\nflights %>% \n  select(year, month, day, hour, minute) %>% \n  mutate(departure = make_datetime(year, month, day, hour, minute))## # A tibble: 336,776 x 6\n##     year month   day  hour minute departure          \n##    <int> <int> <int> <dbl>  <dbl> <dttm>             \n##  1  2013     1     1     5     15 2013-01-01 05:15:00\n##  2  2013     1     1     5     29 2013-01-01 05:29:00\n##  3  2013     1     1     5     40 2013-01-01 05:40:00\n##  4  2013     1     1     5     45 2013-01-01 05:45:00\n##  5  2013     1     1     6      0 2013-01-01 06:00:00\n##  6  2013     1     1     5     58 2013-01-01 05:58:00\n##  7  2013     1     1     6      0 2013-01-01 06:00:00\n##  8  2013     1     1     6      0 2013-01-01 06:00:00\n##  9  2013     1     1     6      0 2013-01-01 06:00:00\n## 10  2013     1     1     6      0 2013-01-01 06:00:00\n## # … with 336,766 more rows"},{"path":"wrangling.html","id":"from-other-types","chapter":"2 Wrangling","heading":"2.6.3 From other types","text":"may want switch date-time date. ’s job as_datetime() as_date():Sometimes ’ll get date/times numeric offsets “Unix Epoch,” 1970-01-01. offset seconds, use as_datetime(); ’s days, use as_date().","code":"\nas_datetime(today())## [1] \"2021-01-13 UTC\"\nas_date(now())## [1] \"2021-01-13\"\nas_datetime(60 * 60 * 10)## [1] \"1970-01-01 10:00:00 UTC\"\nas_date(365 * 10 + 2)## [1] \"1980-01-01\""},{"path":"wrangling.html","id":"date-time-components","chapter":"2 Wrangling","heading":"2.6.4 Date-time components","text":"Now know get date-time data R’s date-time data structures, let’s explore can . section focus accessor functions let get set individual components. next section look arithmetic works date-times.can pull individual parts date accessor functions year(), month(), mday() (day month), yday() (day year), wday() (day week), hour(), minute(), second().month() wday() can set label = TRUE return abbreviated name month day week. Set abbr = FALSE return full name.","code":"\ndatetime <- ymd_hms(\"2016-07-08 12:34:56\")\nyear(datetime)## [1] 2016\nmonth(datetime)## [1] 7\nmday(datetime)## [1] 8\nyday(datetime)## [1] 190\nwday(datetime)## [1] 6\nmonth(datetime, label = TRUE)## [1] Jul\n## 12 Levels: Jan < Feb < Mar < Apr < May < Jun < Jul < Aug < Sep < ... < Dec\nwday(datetime, label = TRUE, abbr = FALSE)## [1] Friday\n## 7 Levels: Sunday < Monday < Tuesday < Wednesday < Thursday < ... < Saturday"},{"path":"wrangling.html","id":"setting-components","chapter":"2 Wrangling","heading":"2.6.5 Setting components","text":"can create new date-time update().values big, roll-:","code":"\nupdate(datetime, year = 2020, month = 2, mday = 2, hour = 2)## [1] \"2020-02-02 02:34:56 UTC\"\nymd(\"2015-02-01\") %>% \n  update(mday = 30)## [1] \"2015-03-02\"\nymd(\"2015-02-01\") %>% \n  update(hour = 400)## [1] \"2015-02-17 16:00:00 UTC\""},{"path":"wrangling.html","id":"time-zones","chapter":"2 Wrangling","heading":"2.6.6 Time zones","text":"Time zones enormously complicated topic interaction geopolitical entities. Fortunately don’t need dig details ’re important data analysis. can see complete list possible timezones function OlsonNames(). Unless otherwise specified, lubridate always uses UTC (Coordinated Universal Time).R, time zone attribute date-time controls printing. example, three objects represent instant time:","code":"\n(x1 <- ymd_hms(\"2015-06-01 12:00:00\", tz = \"America/New_York\"))## [1] \"2015-06-01 12:00:00 EDT\"\n(x2 <- ymd_hms(\"2015-06-01 18:00:00\", tz = \"Europe/Copenhagen\"))## [1] \"2015-06-01 18:00:00 CEST\"\n(x3 <- ymd_hms(\"2015-06-02 04:00:00\", tz = \"Pacific/Auckland\"))## [1] \"2015-06-02 04:00:00 NZST\""},{"path":"wrangling.html","id":"combining-data","chapter":"2 Wrangling","heading":"2.7 Combining Data","text":"many ways bring data together.\nFIGURE 2.3: Combining data often tricky.\nbind_rows() function used combine rows two tibbles.","code":"\ndata_1 <- tibble(x = 1:2,                \n                 y = c(\"A\", \"B\")) \n\ndata_2 <- tibble(x = 3:4,\n                 y = c(\"C\", \"D\")) \n\n\nbind_rows(data_1, data_2)## # A tibble: 4 x 2\n##       x y    \n##   <int> <chr>\n## 1     1 A    \n## 2     2 B    \n## 3     3 C    \n## 4     4 D"},{"path":"wrangling.html","id":"joins","chapter":"2 Wrangling","heading":"2.7.1 Joins","text":"Consider two tibbles: superheroes publishers.Note easy use tribble(), tibble package (part Tidyverse) create tibble fly using text organized easy entry reading. Recall double colon — :: — indicate function comes specific package.","code":"\nsuperheroes <- tibble::tribble(\n       ~name,   ~gender,     ~publisher,\n   \"Magneto\",   \"male\",       \"Marvel\",\n     \"Storm\",   \"female\",     \"Marvel\",\n    \"Batman\",   \"male\",       \"DC\",\n  \"Catwoman\",   \"female\",     \"DC\",\n   \"Hellboy\",   \"male\",       \"Dark Horse Comics\"\n  )\n\npublishers <- tibble::tribble(\n  ~publisher, ~yr_founded,\n        \"DC\",       1934L,\n    \"Marvel\",       1939L,\n     \"Image\",       1992L\n  )"},{"path":"wrangling.html","id":"inner_join","chapter":"2 Wrangling","heading":"2.7.1.1 inner_join()","text":"inner_join(x, y): Return rows x matching values y, columns x y. multiple matches x y, combination matches returned.\nFIGURE 2.4: Inner join.\nlose Hellboy join , although appears x = superheroes, publisher Dark Horse Comics appear y = publishers. join result variables x = superheroes plus yr_founded, y.Note message ‘Joining, = “publisher”.’ Whenever joining, R checks see variables common two tibbles , , uses join. However, concerned may aware , R tells . messages annoying signal made code robust . Fortunately, can specify precisely variables want join . Always .also takes vector key variables want merge multiple variables.Now compare result using inner_join() two datasets opposite positions.way, illustrate multiple matches, think x = publishers direction. Every publisher match y = superheroes appears multiple times result, match. fact, ’re getting result inner_join(superheroes, publishers), variable order (also never rely analysis).","code":"\ninner_join(superheroes, publishers)## Joining, by = \"publisher\"## # A tibble: 4 x 4\n##   name     gender publisher yr_founded\n##   <chr>    <chr>  <chr>          <int>\n## 1 Magneto  male   Marvel          1939\n## 2 Storm    female Marvel          1939\n## 3 Batman   male   DC              1934\n## 4 Catwoman female DC              1934\ninner_join(superheroes, publishers, by = \"publisher\")\ninner_join(publishers, superheroes, by = \"publisher\")## # A tibble: 4 x 4\n##   publisher yr_founded name     gender\n##   <chr>          <int> <chr>    <chr> \n## 1 DC              1934 Batman   male  \n## 2 DC              1934 Catwoman female\n## 3 Marvel          1939 Magneto  male  \n## 4 Marvel          1939 Storm    female"},{"path":"wrangling.html","id":"full_join","chapter":"2 Wrangling","heading":"2.7.1.2 full_join()","text":"full_join(x, y): Return rows columns x y. matching values, returns NA one missing.get rows x = superheroes plus new row y = publishers, containing publisher Image. get variables x = superheroes variables y = publishers. row derives solely one table carries NAs variables found table.full_join() returns rows columns x y result full_join(x = superheroes, y = publishers) match full_join(x = publishers, y = superheroes).","code":"\nfull_join(superheroes, publishers, by = \"publisher\")## # A tibble: 6 x 4\n##   name     gender publisher         yr_founded\n##   <chr>    <chr>  <chr>                  <int>\n## 1 Magneto  male   Marvel                  1939\n## 2 Storm    female Marvel                  1939\n## 3 Batman   male   DC                      1934\n## 4 Catwoman female DC                      1934\n## 5 Hellboy  male   Dark Horse Comics         NA\n## 6 <NA>     <NA>   Image                   1992"},{"path":"wrangling.html","id":"left_join","chapter":"2 Wrangling","heading":"2.7.1.3 left_join()","text":"left_join(x, y): Return rows x, columns x y. multiple matches x y, combination matches returned.basically get x = superheroes back, addition variable yr_founded, unique y = publishers. Hellboy, whose publisher appear y = publishers, NA yr_founded.Now compare result running left_join(x = publishers, y = superheroes). Unlike inner_join() full_join() order arguments significant effect resulting tibble.get similar result inner_join() publisher Image survives join, even though superheroes Image appear y = superheroes. result, Image NAs name gender.similar function, right_join(x, y) return rows y, columns x y.","code":"\nleft_join(superheroes, publishers, by = \"publisher\")## # A tibble: 5 x 4\n##   name     gender publisher         yr_founded\n##   <chr>    <chr>  <chr>                  <int>\n## 1 Magneto  male   Marvel                  1939\n## 2 Storm    female Marvel                  1939\n## 3 Batman   male   DC                      1934\n## 4 Catwoman female DC                      1934\n## 5 Hellboy  male   Dark Horse Comics         NA\nleft_join(publishers, superheroes, by = \"publisher\")## # A tibble: 5 x 4\n##   publisher yr_founded name     gender\n##   <chr>          <int> <chr>    <chr> \n## 1 DC              1934 Batman   male  \n## 2 DC              1934 Catwoman female\n## 3 Marvel          1939 Magneto  male  \n## 4 Marvel          1939 Storm    female\n## 5 Image           1992 <NA>     <NA>"},{"path":"wrangling.html","id":"semi_join","chapter":"2 Wrangling","heading":"2.7.1.4 semi_join()","text":"semi_join(x, y): Return rows x matching values y, keeping just columns x. semi join differs inner join inner join return one row x matching row y, semi join never duplicate rows x. filtering join.Compare result switching values arguments.Now effects switching x y roles clear. result resembles x = publishers, publisher Image lost, observations publisher == \"Image\" y = superheroes.","code":"\nsemi_join(superheroes, publishers, by = \"publisher\")## # A tibble: 4 x 3\n##   name     gender publisher\n##   <chr>    <chr>  <chr>    \n## 1 Magneto  male   Marvel   \n## 2 Storm    female Marvel   \n## 3 Batman   male   DC       \n## 4 Catwoman female DC\nsemi_join(x = publishers, y = superheroes, by = \"publisher\")## # A tibble: 2 x 2\n##   publisher yr_founded\n##   <chr>          <int>\n## 1 DC              1934\n## 2 Marvel          1939"},{"path":"wrangling.html","id":"anti_join","chapter":"2 Wrangling","heading":"2.7.1.5 anti_join()","text":"anti_join(x, y): Return rows x matching values y, keeping just columns x.keep Hellboy now (get yr_founded).Now switch arguments compare result.keep publisher Image now (variables found x = publishers).","code":"\nanti_join(superheroes, publishers, by = \"publisher\")## # A tibble: 1 x 3\n##   name    gender publisher        \n##   <chr>   <chr>  <chr>            \n## 1 Hellboy male   Dark Horse Comics\nanti_join(publishers, superheroes, by = \"publisher\")## # A tibble: 1 x 2\n##   publisher yr_founded\n##   <chr>          <int>\n## 1 Image           1992"},{"path":"wrangling.html","id":"example","chapter":"2 Wrangling","heading":"2.7.2 Example","text":"Consider relationships among tibbles nycflights package:\nFIGURE 2.5: Relationships among nycflights tables\nflights airlines data frames, key variable want join/merge/match rows name: carrier. Let’s use inner_join() join two data frames, rows matched variable carrierThis first example using join function pipe. flights fed first argument inner_join(). pipe . code equivalent :airports data frame contains airport codes airport:However, look airports flights data frames, ’ll find airport codes variables different names. airports airport code faa, whereas flights airport codes origin dest.order join two data frames airport code, inner_join() operation use = c(\"dest\" = \"faa\") thereby allowing us join two data frames key variable different name.Let’s construct chain pipe operators %>% computes number flights NYC destination, also includes information destination airport:\"ORD\" airport code Chicago O’Hare airport \"FLL\" code main airport Fort Lauderdale, Florida, can seen airport_name variable.","code":"\nflights %>% \n  inner_join(airlines, by = \"carrier\")## # A tibble: 336,776 x 20\n##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n##    <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>\n##  1  2013     1     1      517            515         2      830            819\n##  2  2013     1     1      533            529         4      850            830\n##  3  2013     1     1      542            540         2      923            850\n##  4  2013     1     1      544            545        -1     1004           1022\n##  5  2013     1     1      554            600        -6      812            837\n##  6  2013     1     1      554            558        -4      740            728\n##  7  2013     1     1      555            600        -5      913            854\n##  8  2013     1     1      557            600        -3      709            723\n##  9  2013     1     1      557            600        -3      838            846\n## 10  2013     1     1      558            600        -2      753            745\n## # … with 336,766 more rows, and 12 more variables: arr_delay <dbl>,\n## #   carrier <chr>, flight <int>, tailnum <chr>, origin <chr>, dest <chr>,\n## #   air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>,\n## #   name <chr>\ninner_join(flights, airlines, by = \"carrier\")\nairports## # A tibble: 1,458 x 8\n##    faa   name                       lat    lon   alt    tz dst   tzone          \n##    <chr> <chr>                    <dbl>  <dbl> <dbl> <dbl> <chr> <chr>          \n##  1 04G   Lansdowne Airport         41.1  -80.6  1044    -5 A     America/New_Yo…\n##  2 06A   Moton Field Municipal A…  32.5  -85.7   264    -6 A     America/Chicago\n##  3 06C   Schaumburg Regional       42.0  -88.1   801    -6 A     America/Chicago\n##  4 06N   Randall Airport           41.4  -74.4   523    -5 A     America/New_Yo…\n##  5 09J   Jekyll Island Airport     31.1  -81.4    11    -5 A     America/New_Yo…\n##  6 0A9   Elizabethton Municipal …  36.4  -82.2  1593    -5 A     America/New_Yo…\n##  7 0G6   Williams County Airport   41.5  -84.5   730    -5 A     America/New_Yo…\n##  8 0G7   Finger Lakes Regional A…  42.9  -76.8   492    -5 A     America/New_Yo…\n##  9 0P2   Shoestring Aviation Air…  39.8  -76.6  1000    -5 U     America/New_Yo…\n## 10 0S9   Jefferson County Intl     48.1 -123.    108    -8 A     America/Los_An…\n## # … with 1,448 more rows\nflights %>% \n  inner_join(airports, by = c(\"dest\" = \"faa\"))## # A tibble: 329,174 x 26\n##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n##    <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>\n##  1  2013     1     1      517            515         2      830            819\n##  2  2013     1     1      533            529         4      850            830\n##  3  2013     1     1      542            540         2      923            850\n##  4  2013     1     1      554            600        -6      812            837\n##  5  2013     1     1      554            558        -4      740            728\n##  6  2013     1     1      555            600        -5      913            854\n##  7  2013     1     1      557            600        -3      709            723\n##  8  2013     1     1      557            600        -3      838            846\n##  9  2013     1     1      558            600        -2      753            745\n## 10  2013     1     1      558            600        -2      849            851\n## # … with 329,164 more rows, and 18 more variables: arr_delay <dbl>,\n## #   carrier <chr>, flight <int>, tailnum <chr>, origin <chr>, dest <chr>,\n## #   air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>,\n## #   name <chr>, lat <dbl>, lon <dbl>, alt <dbl>, tz <dbl>, dst <chr>,\n## #   tzone <chr>\nflights %>%\n  group_by(dest) %>%\n  summarize(num_flights = n(),\n            .groups = \"drop\") %>%\n  arrange(desc(num_flights)) %>%\n  inner_join(airports, by = c(\"dest\" = \"faa\")) %>%\n  rename(airport_name = name)## # A tibble: 101 x 9\n##    dest  num_flights airport_name          lat    lon   alt    tz dst   tzone   \n##    <chr>       <int> <chr>               <dbl>  <dbl> <dbl> <dbl> <chr> <chr>   \n##  1 ORD         17283 Chicago Ohare Intl   42.0  -87.9   668    -6 A     America…\n##  2 ATL         17215 Hartsfield Jackson…  33.6  -84.4  1026    -5 A     America…\n##  3 LAX         16174 Los Angeles Intl     33.9 -118.    126    -8 A     America…\n##  4 BOS         15508 General Edward Law…  42.4  -71.0    19    -5 A     America…\n##  5 MCO         14082 Orlando Intl         28.4  -81.3    96    -5 A     America…\n##  6 CLT         14064 Charlotte Douglas …  35.2  -80.9   748    -5 A     America…\n##  7 SFO         13331 San Francisco Intl   37.6 -122.     13    -8 A     America…\n##  8 FLL         12055 Fort Lauderdale Ho…  26.1  -80.2     9    -5 A     America…\n##  9 MIA         11728 Miami Intl           25.8  -80.3     8    -5 A     America…\n## 10 DCA          9705 Ronald Reagan Wash…  38.9  -77.0    15    -5 A     America…\n## # … with 91 more rows"},{"path":"wrangling.html","id":"tidy-data","chapter":"2 Wrangling","heading":"2.8 Tidy data","text":"Consider first five rows drinks data frame fivethirtyeight package:reading help file running ?drinks, ’ll see drinks data frame containing results survey average number servings beer, spirits, wine consumed 193 countries. data originally reported FiveThirtyEight.com Mona Chalabi’s article: “Dear Mona Followup: People Drink Beer, Wine Spirits?”.Let’s apply data wrangling verbs drinks data frame:filter() drinks data frame consider 4 countries: United States, China, Italy, Saudi Arabia, thenselect() columns except total_litres_of_pure_alcohol using - sign, thenrename() variables beer_servings, spirit_servings, wine_servings beer, spirit, wine, respectively.save resulting data frame drinks_smaller.","code":"## # A tibble: 5 x 5\n##   country    beer_servings spirit_servings wine_servings total_litres_of_pure_a…\n##   <chr>              <int>           <int>         <int>                   <dbl>\n## 1 Afghanist…             0               0             0                     0  \n## 2 Albania               89             132            54                     4.9\n## 3 Algeria               25               0            14                     0.7\n## 4 Andorra              245             138           312                    12.4\n## 5 Angola               217              57            45                     5.9\ndrinks_smaller <- drinks %>%\n  filter(country %in% c(\"USA\", \"China\", \"Italy\", \"Saudi Arabia\")) %>%\n  select(-total_litres_of_pure_alcohol) %>%\n  rename(beer = beer_servings, spirit = spirit_servings, wine = wine_servings)\ndrinks_smaller## # A tibble: 4 x 4\n##   country       beer spirit  wine\n##   <chr>        <int>  <int> <int>\n## 1 China           79    192     8\n## 2 Italy           85     42   237\n## 3 Saudi Arabia     0      5     0\n## 4 USA            249    158    84"},{"path":"wrangling.html","id":"definition-of-tidy-data","chapter":"2 Wrangling","heading":"2.8.1 Definition of “tidy” data","text":"mean data “tidy?” “tidy” clear English meaning “organized,” word “tidy” data science using R means data follows standardized format.“Tidy” data standard way mapping meaning dataset structure. dataset messy tidy depending rows, columns tables matched observations, variables types. tidy data:variable forms column.observation forms row.type observational unit forms table.","code":""},{"path":"wrangling.html","id":"converting-to-tidy-data","chapter":"2 Wrangling","heading":"2.8.2 Converting to “tidy” data","text":"book far, ’ve seen data frames already “tidy” format. Furthermore, rest book, ’ll mostly see data frames already “tidy” format well. always case however datasets world. original data frame wide (non-“tidy”) format like use ggplot2 dplyr packages, first convert “tidy” format. , recommend using pivot_longer() function tidyr package (Wickham 2020c).Going back drinks_smaller data frame earlier:convert “tidy” format using pivot_longer() function tidyr package follows:Let’s dissect arguments pivot_longer().first argumentnames_to corresponds name variable new “tidy”/long data frame contain column names original data. Observe set names_to = \"type\". resulting drinks_smaller_tidy, column type contains three types alcohol beer, spirit, wine. Since type variable name doesn’t appear drinks_smaller, use quotation marks around . ’ll receive error just use names_to = type .first argumentnames_to corresponds name variable new “tidy”/long data frame contain column names original data. Observe set names_to = \"type\". resulting drinks_smaller_tidy, column type contains three types alcohol beer, spirit, wine. Since type variable name doesn’t appear drinks_smaller, use quotation marks around . ’ll receive error just use names_to = type .second argument values_to corresponds name variable new “tidy” data frame contain values original data. Observe set values_to = \"servings\" since numeric values beer, wine, spirit columns drinks_smaller data corresponds value servings. resulting drinks_smaller_tidy, column servings contains 4 \\(\\times\\) 3 = 12 numerical values. Note servings doesn’t appear variable drinks_smaller needs quotation marks around values_to argument.second argument values_to corresponds name variable new “tidy” data frame contain values original data. Observe set values_to = \"servings\" since numeric values beer, wine, spirit columns drinks_smaller data corresponds value servings. resulting drinks_smaller_tidy, column servings contains 4 \\(\\times\\) 3 = 12 numerical values. Note servings doesn’t appear variable drinks_smaller needs quotation marks around values_to argument.third argument cols columns drinks_smaller data frame either want don’t want “tidy.” Observe set -country indicating don’t want “tidy” country variable drinks_smaller rather beer, spirit, wine. Since country column appears drinks_smaller don’t put quotation marks around .third argument cols columns drinks_smaller data frame either want don’t want “tidy.” Observe set -country indicating don’t want “tidy” country variable drinks_smaller rather beer, spirit, wine. Since country column appears drinks_smaller don’t put quotation marks around .third argument cols little nuanced, let’s consider code ’s written slightly differently produces output:Note third argument now specifies columns want “tidy” c(beer, spirit, wine), instead columns don’t want “tidy” using -country. use c() function create vector columns drinks_smaller ’d like “tidy.” Note since three columns appear one another drinks_smaller data frame, also following cols argument:Converting “wide” format data “tidy” format often confuses new R users. way learn get comfortable pivot_longer() function practice, practice, practice using different datasets. example, run ?pivot_longer look examples bottom help file.however want convert “tidy” data frame “wide” format, need use pivot_wider() function instead. Run ?pivot_wider look examples bottom help file examples.can also view examples pivot_longer() pivot_wider() tidyverse.org webpage. ’s nice example check different functions available data tidying case study using data World Health Organization webpage. Furthermore, week R4DS Online Learning Community posts dataset weekly #TidyTuesday event might serve nice place find data explore transform.","code":"\ndrinks_smaller## # A tibble: 4 x 4\n##   country       beer spirit  wine\n##   <chr>        <int>  <int> <int>\n## 1 China           79    192     8\n## 2 Italy           85     42   237\n## 3 Saudi Arabia     0      5     0\n## 4 USA            249    158    84\ndrinks_smaller_tidy <- drinks_smaller %>% \n  pivot_longer(names_to = \"type\", \n               values_to = \"servings\", \n               cols = -country)\ndrinks_smaller_tidy## # A tibble: 12 x 3\n##    country      type   servings\n##    <chr>        <chr>     <int>\n##  1 China        beer         79\n##  2 China        spirit      192\n##  3 China        wine          8\n##  4 Italy        beer         85\n##  5 Italy        spirit       42\n##  6 Italy        wine        237\n##  7 Saudi Arabia beer          0\n##  8 Saudi Arabia spirit        5\n##  9 Saudi Arabia wine          0\n## 10 USA          beer        249\n## 11 USA          spirit      158\n## 12 USA          wine         84\ndrinks_smaller %>% \n  pivot_longer(names_to = \"type\", \n               values_to = \"servings\", \n               cols = c(beer, spirit, wine))\ndrinks_smaller %>% \n  pivot_longer(names_to = \"type\", \n               values_to = \"servings\", \n               cols = beer:wine)"},{"path":"wrangling.html","id":"distributions","chapter":"2 Wrangling","heading":"2.9 Distributions","text":"distribution? Think distribution variable urn can pull , random, values variable. Drawing thousand values urn, looking histogram, can show values centered values vary. sloppy, use word distribution refer (imaginary!) urn drawing values list values drawn. vector 115 ages trains data distribution.","code":""},{"path":"wrangling.html","id":"scaling-a-distribution","chapter":"2 Wrangling","heading":"2.9.1 Scaling a distribution","text":"Consider vector result rolling one die 10 times.ways storing data vector. Instead recording every draw, just record number times value appears.case, 10 vlaues, actually less efficient store data like . happens 10,000 rolls.Instead keeping around vector length 10,000, can just keep 10 values, without losing information.example also highlights fact , graphically, two distributions can identical even different lengths.two vectors — rolls more_rolls — exact shape , even though lengths differ, thing. total count value matter. matters relative proportions.Since shape matters, often “normalize” distributions sum counts equals one, meaning y-axis percentage total. Example:","code":"\nrolls <- c(5, 5, 1, 5, 4, 2, 6, 2, 1, 5)\ntable(rolls)## rolls\n## 1 2 4 5 6 \n## 2 2 1 4 1\nmore_rolls <- rep(rolls, 1000)\ntable(more_rolls)## more_rolls\n##    1    2    4    5    6 \n## 2000 2000 1000 4000 1000"},{"path":"wrangling.html","id":"sample","chapter":"2 Wrangling","heading":"2.9.2 sample()","text":"common distributions work empirical frequency distributions, values age trains tibble, values poverty kenya tibble, . can also create data making “draws” distribution concocted.Consider distribution possible values rolling fair die. can use sample() function create draws distribution, meaning change (sometimes stay ) every subsequent draw.produces one “draw” distribution possible values one roll fair six-sided die.Now, suppose wanted roll die 10 times. One arguments sample() function replace. must specify TRUE values can appear . Since, rolling die 10 times, expect value like 3 can appear , need set replace = TRUE.words, rolling 1 first roll preclude rolling 1 later roll.die “fair,” meaning sides likely appear others? final argument sample() function prob argument. takes vector (length initial vector x) contains probabilities selecting one elements x. Suppose probability rolling 1 0.5, probability rolling value 0.1. (probabilities sum 1. don’t sample() automatically re-scale .)Remember: real data . actually rolled die. just made assumptions happen roll die. assumptions built urn — data generating mechanism — can draw many values like. Let’s roll unfair die 10,000 times.makes dual nature distributions clear. distribution “thing” see plot. mathematical object several different parts, including set possible values (1 6, case) record number times appears. distribution also simple vector numbers used create plot.general, travel back--forth distribution thing distribution vector numbers depending trying accomplish. path back--force via draws.sample() just one many functions creating draws — , colloquially, “drawing” — distribution. Three important functions : runif(), rbinom(), rnorm().","code":"\ndie <- c(1, 2, 3, 4, 5, 6)\n\nsample(x = die, size = 1)## [1] 2\nsample(x = die, size = 10, replace = TRUE)##  [1] 1 4 2 6 3 4 2 4 4 6\nsample(x = die, \n       size = 10, \n       replace = TRUE, \n       prob = c(0.5, 0.1, 0.1, 0.1, 0.1, 0.1))##  [1] 4 3 4 1 1 1 1 1 1 3\ntibble(result = sample(x = die, \n                       size = 10000, \n                       replace = TRUE, \n                       prob = c(0.5, rep(0.1, 5)))) %>% \n  ggplot(aes(x = result)) +\n    geom_bar() +\n    labs(title = \"Distribution of Results of an Unfair Die\",\n         x = \"Result of One Roll\",\n         y = \"Count\") +\n    scale_x_continuous(breaks = 1:6,\n                       labels = as.character(1:6)) +\n    scale_y_continuous(labels = scales::comma_format())"},{"path":"wrangling.html","id":"runif","chapter":"2 Wrangling","heading":"2.9.3 runif()","text":"Consider “uniform” distribution. case every outcome range possible outcomes chance occurring. function runif() (spoken “r-unif”) enables us draw uniform contribution. runif() three arguments: n, min, max. runif() produce n draws min max, value equal chance occurring.Mathematically, write:\\[y_i \\sim U(4, 6)\\],means value \\(y\\) drawn uniform distribution four six.","code":"\nrunif(n = 10, min = 4, max = 6)##  [1] 4.0 5.0 4.7 4.2 4.4 5.3 5.4 4.4 5.9 4.3"},{"path":"wrangling.html","id":"rbinom","chapter":"2 Wrangling","heading":"2.9.4 rbinom()","text":"Consider binomial distribution, case probability Boolean variable (instance success failure) calculated repeated, independent trials. One common example probability flipping coin landing heads. function rbinom() allows us draw binomial distribution. function takes three arguments, n, size, prob.n number values seek draw.\nsize number trials n.\n*prob probability success trial.Suppose wanted flip fair coin one time, let landing heads represent success.thing 100 times:graph , use function scale_x_continuous() x-axis variable continuous, meaning can take real values. breaks argument scale_x_continuous() converts x-axis two different “tick marks.” fairly even distribution Tails Heads. draws typically result even equal split.Randomness creates (inevitable) tension distribution “thing” distribution vector draws thing. case, vector draws balanced Tails Heads. Yet, “know” since coin , definition, fair. sense, mathematics require even split. Yet, randomness means vector draws rarely match mathematically “true” result. OK! First, randomness intrinsic property real world. Second, can make effect randomness small want increasing number draws.Suppose instead wanted simulate unfair coin, probability landing Heads 0.75 instead 0.25.distribution — imaginary urn — draw results coin flip fair coin different distribution — different imaginary urn — distribution biased coin. fact, infinite number distributions. Yet long can draw values distribution, can work . Mathematics:\\[y_i \\sim B(n, p)\\].value \\(y\\) drawn binomial distribution parameters \\(n\\) number trials \\(p\\) probability success.Instead n consisting single trial, situation , 10,000 times, flipping coin 10 times summing , experiment, number heads. case:","code":"\nrbinom(n = 1 , size = 1, prob = 0.5)## [1] 0\ntibble(heads = rbinom(n = 100, size = 1, prob = 0.5)) %>% \n  ggplot(aes(x = heads)) +\n    geom_bar() +\n    labs(title = \"Flipping a Fair Coin 100 Times\",\n         x = \"Result\",\n         y = \"Count\") +\n    scale_x_continuous(breaks = c(0, 1),\n                       labels = c(\"Tails\", \"Heads\"))\ntibble(heads = rbinom(n = 100, size = 1, prob = 0.75)) %>% \n  ggplot(aes(x = heads)) +\n    geom_bar() +\n    labs(title = \"Flipping a Fair Coin 100 Times\",\n         x = \"Result\",\n         y = \"Count\") +\n    scale_x_continuous(breaks = c(0, 1),\n                       labels = c(\"Tails\", \"Heads\"))\nset.seed(9)\ntibble(heads = rbinom(n = 10000, size = 10, prob = 0.5)) %>% \n  ggplot(aes(x = heads)) +\n    geom_bar() +\n    labs(title = \"Flipping a Fair Coin 10 Times\",\n         subtitle = \"Extreme results are possible with enough experiments\",\n         x = \"Total Number of Heads in Ten Flips\",\n         y = \"Count\") +\n    scale_x_continuous(breaks = 0:10)"},{"path":"wrangling.html","id":"normal","chapter":"2 Wrangling","heading":"2.9.5 rnorm()","text":"important distribution normal distribution. Mathematics:\\[y_i \\sim N(\\mu, \\sigma^2)\\].value \\(y_i\\) drawn normal distribution parameters \\(\\mu\\) mean \\(\\sigma\\) standard deviation.bell-shaped distribution defined two parameters: (1) mean \\(\\mu\\) (spoken “mu”) locates center distribution (2) standard deviation \\(\\sigma\\) (spoken “sigma”) determines variation values around center. figure , plot three normal distributions :solid normal curve mean \\(\\mu = 5\\) & standard deviation \\(\\sigma = 2\\).dotted normal curve mean \\(\\mu = 5\\) & standard deviation \\(\\sigma = 5\\).dashed normal curve mean \\(\\mu = 15\\) & standard deviation \\(\\sigma = 2\\).\nFIGURE 2.6: Three normal distributions.\nNotice solid dotted line normal curves center due common mean \\(\\mu\\) = 5. However, dotted line normal curve wider due larger standard deviation \\(\\sigma = 5\\). hand, solid dashed line normal curves variation due common standard deviation \\(\\sigma = 2\\). However, centered different locations.mean \\(\\mu = 0\\) standard deviation \\(\\sigma = 1\\), normal distribution special name. ’s called standard normal distribution \\(z\\)-curve.Furthermore, variable follows normal curve, three rules thumb can use:68% values lie within \\(\\pm\\) 1 standard deviation mean.95% values lie within \\(\\pm\\) 1.96 \\(\\approx\\) 2 standard deviations mean.99.7% values lie within \\(\\pm\\) 3 standard deviations mean.Let’s illustrate standard normal curve. dashed lines -3, -1.96, -1, 0, 1, 1.96, 3. 7 lines cut x-axis 8 segments. areas normal curve 8 segments marked add 100%. example:middle two segments represent interval -1 1. shaded area interval represents 34% + 34% = 68% area curve. words, 68% values.middle four segments represent interval -1.96 1.96. shaded area interval represents 13.5% + 34% + 34% + 13.5% = 95% area curve. words, 95% values.middle six segments represent interval -3 3. shaded area interval represents 2.35% + 13.5% + 34% + 34% + 13.5% + 2.35% = 99.7% area curve. words, 99.7% values.\nFIGURE 2.7: Rules thumb areas normal curves.\nfunction rnorm() (spoken “r-norm”) returns draws normal distribution. rnorm() three arguments: n, mean, sd. n corresponds number draws, mean sd \\(\\mu\\) \\(\\sigma\\) distribution want draw. , imagine urn filled beads. bead number written . distribution standard normal, can draw 10 beads urn running:10 draws come distribution default mean 0 default sd 1. create histogram values?can see, symmetrical one displayed . surprising! just draw 10 beads urn, can possibly good sense numbers beads urn look like. draw 100 values? 100,000?Now ’s looking lot similar “truth,” although still imperfect.Now, let’s compare normal distributions varying means standard deviations, can set using mean sd arguments included function.","code":"\nrnorm(10)##  [1] -0.84  1.38 -1.26  0.07  1.71 -0.60 -0.47 -0.64 -0.29  0.14\ntibble(value = rnorm(10)) %>% \n  ggplot(aes(x = value)) + \n    geom_histogram(bins = 10)\ntibble(value = rnorm(100)) %>% \n  ggplot(aes(x = value)) +\n    geom_histogram(bins = 10)\ntibble(value = rnorm(100000)) %>% \n  ggplot(aes(x = value)) +\n    geom_histogram(bins = 1000)\ntibble(rnorm_5_1 = rnorm(n = 1000, mean = 5, sd = 1), \n       rnorm_0_3 = rnorm(n = 1000, mean = 0, sd = 3),\n       rnorm_0_1 = rnorm(n = 1000, mean = 0, sd = 1)) %>%\n  pivot_longer(cols = everything(), \n               names_to = \"distribution\", \n               values_to = \"value\") %>% \n  ggplot(aes(x = value, fill = distribution)) +\n    geom_density(alpha = 0.5) +\n    labs(title = \"Comparison of Normal Distributions with Differing Mean and Standard Deviation Values\", \n         fill = \"Distribution\",\n         x = \"Value\",\n         y = \"Density\")"},{"path":"wrangling.html","id":"working-with-draws","chapter":"2 Wrangling","heading":"2.9.6 Working with draws","text":"vector draws, can examine various aspects distribution. Examples:Even though know, wrote code, draws come normal distribution mean 2 standard deviation 1, calculated results match values exactly draws random.Note likely use median mad summarize distribution. case, similar mean standard deviation.practice, know exact distribution generates data. (know, estimation unnecessary.) inherent randomness world means calculated statistics match underlying truth perfectly. data collect, closer match .addition mean standard deviation draws, often interested various quantiles distribution, commonly want create intervals cover specified portion draws. Examples:Note draws come distribution centered around 2 rather 0. nothing intrinsically special ranges. mere convention, especially 95% interval.Note cavalier sometimes using word “distribution” sometimes word “draws.” two different things! distribution underlying reality, know certain create , example. draws vector numbers , assume, “drawn” underlying distribution , general, know.assumption, can analyze draws make inferences distribution.Although distributions (draws therefrom) complex, can often treat way treat simple numbers. example, can add two distributions together.Drawing distribution also allows us answer questions via simulation. example, imagine B flipping fair coints. flips coin 3 times. B flips coin 6 times. probability flips heads B?obvious B win game often . also obvious win time. order estimate chances winning, can simply simulate playing game 1,000 times.9% chance winning game.","code":"\ndraws <- rnorm(100, mean = 2, sd = 1)\nmean(draws)## [1] 1.9\nsd(draws)## [1] 1\nmedian(draws)## [1] 1.9\nmad(draws)## [1] 1.1\nquantile(draws, probs = c(0.25, 0.75))## 25% 75% \n## 1.2 2.7\nquantile(draws, probs = c(0.05, 0.95))##  5% 95% \n## 0.4 3.5\nquantile(draws, probs = c(0.025, 0.975))## 2.5%  98% \n## 0.15 3.80\nn <- 100000\ntibble(Normal = rnorm(n, mean = 1),\n       Uniform = runif(n, min = 2, max = 3),\n       Combined = Normal + Uniform) %>% \n  pivot_longer(cols = everything(),\n               names_to = \"Distribution\",\n               values_to = \"draw\") %>% \n  ggplot(aes(x = draw, fill = Distribution)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Two Distributions and Their Sum\",\n         subtitle = \"You can sum distributions just like you sum numbers\",\n         x = \"Value\",\n         y = \"Probability\")\nset.seed(56)\ngames <- 1000 \n\ntibble(A_heads = rbinom(n = games, size = 3, prob = 0.5),\n       B_heads = rbinom(n = games, size = 6, prob = 0.5)) %>% \n  mutate(A_wins = ifelse(A_heads > B_heads, 1, 0)) %>% \n  summarize(A_chances = mean(A_wins))## # A tibble: 1 x 1\n##   A_chances\n##       <dbl>\n## 1     0.091"},{"path":"wrangling.html","id":"other-commands","chapter":"2 Wrangling","heading":"2.10 Other Commands","text":"topics prove important later Primer.","code":""},{"path":"wrangling.html","id":"matrices","chapter":"2 Wrangling","heading":"2.10.1 Matrices","text":"Recall “matrix” R rectangular array data, shaped like data frame tibble, containing one type data, e.g., numeric. Large matrices also print ugly. (differences, none care .) Example:easiest way pull information matrix use [ ], subset operator. grab second third columns m:Note, however, matrices just one dimension “collapse” single vectors:Tibbles, hand, always maintain rectangular shapes, even one column row.can turn matrices tibbles as_tibble().m column names, as_tibble() creates won variables names, using “V” variable.","code":"\nm <- matrix(c(3, 4, 8, 9, 12, 13, 0, 15, -1), ncol = 3)\nm##      [,1] [,2] [,3]\n## [1,]    3    9    0\n## [2,]    4   12   15\n## [3,]    8   13   -1\nm[, 2:3]##      [,1] [,2]\n## [1,]    9    0\n## [2,]   12   15\n## [3,]   13   -1\nm[, 2]## [1]  9 12 13\nm %>% \n  as_tibble()## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if `.name_repair` is omitted as of tibble 2.0.0.\n## Using compatibility `.name_repair`.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_warnings()` to see where this warning was generated.## # A tibble: 3 x 3\n##      V1    V2    V3\n##   <dbl> <dbl> <dbl>\n## 1     3     9     0\n## 2     4    12    15\n## 3     8    13    -1"},{"path":"wrangling.html","id":"missing-values","chapter":"2 Wrangling","heading":"2.10.2 Missing Values","text":"observations tibble blank. called missing values, often marked NA. can create tibble follows:presence NA values can problematic.Fortunately, R functions take argument, na.rm, , set TRUE, removes NA values calculations.Another approach use drop_na().careful, however, use drop_na() without specific variable provided. case, remove rows missing value varible tibble.final approach use .na() explicitly determine value missing.","code":"\ntbl <- tribble(\n  ~ a, ~ b, ~ c,\n    2,   3,   5,\n    4,  NA,   8,\n   NA,   7,   9,\n)\n\ntbl## # A tibble: 3 x 3\n##       a     b     c\n##   <dbl> <dbl> <dbl>\n## 1     2     3     5\n## 2     4    NA     8\n## 3    NA     7     9\ntbl %>% \n  summarize(avg_a = mean(a))## # A tibble: 1 x 1\n##   avg_a\n##   <dbl>\n## 1    NA\ntbl %>% \n  summarize(avg_a = mean(a, na.rm = TRUE))## # A tibble: 1 x 1\n##   avg_a\n##   <dbl>\n## 1     3\ntbl %>% \n  drop_na(a)## # A tibble: 2 x 3\n##       a     b     c\n##   <dbl> <dbl> <dbl>\n## 1     2     3     5\n## 2     4    NA     8\ntbl %>% \n  drop_na()## # A tibble: 1 x 3\n##       a     b     c\n##   <dbl> <dbl> <dbl>\n## 1     2     3     5\ntbl %>% \n  mutate(a_missing = is.na(a))## # A tibble: 3 x 4\n##       a     b     c a_missing\n##   <dbl> <dbl> <dbl> <lgl>    \n## 1     2     3     5 FALSE    \n## 2     4    NA     8 FALSE    \n## 3    NA     7     9 TRUE"},{"path":"wrangling.html","id":"working-by-rows","chapter":"2 Wrangling","heading":"2.10.3 Working by rows","text":"Tibbles main Tidyverse functions designed work columns. something values variable . , sometimes, want work across tibble, comparing value first row value b first row, . , need two tricks. First, use rowwise() inform R next set commands executed across rows.Note “# Rowwise:” printed . set pipe work across rows, need pass c_across() whichever function using, specifying variables want.","code":"\ntbl %>% \n  rowwise()## # A tibble: 3 x 3\n## # Rowwise: \n##       a     b     c\n##   <dbl> <dbl> <dbl>\n## 1     2     3     5\n## 2     4    NA     8\n## 3    NA     7     9\ntbl %>% \n  rowwise() %>% \n  mutate(largest = max(c_across())) %>% \n  mutate(largest_na = max(c_across(), na.rm = TRUE))## # A tibble: 3 x 5\n## # Rowwise: \n##       a     b     c largest largest_na\n##   <dbl> <dbl> <dbl>   <dbl>      <dbl>\n## 1     2     3     5       5          5\n## 2     4    NA     8      NA          8\n## 3    NA     7     9      NA          9"},{"path":"wrangling.html","id":"summary-2","chapter":"2 Wrangling","heading":"2.11 Summary","text":"chapter covered many, many commands. memorized now.! ridiculous. don’t memorized. ? point chapter give tour can R . information, base try solve problems encounter future.key data science concept chapter , , idea “distribution.” word distribution used two different ways. First, distribution invisible object can never use touch. imaginary urn can take draws. special cases ever able “know” distribution , mainly case physical process, like roulette wheel, can inspect case assumed mathematical formula. , almost real world data science problems, “distribution” mental creation whose reality can never confirm.second way word distribution used refer vector values, variable R tibble. 115 ages trains distribution 1,000 draws rnorm().Whether “distribution” means imaginary object vector numbers drawn imaginary object depends context.","code":""},{"path":"functions.html","id":"functions","chapter":"3 Functions","heading":"3 Functions","text":"","code":""},{"path":"functions.html","id":"introduction","chapter":"3 Functions","heading":"3.1 Introduction","text":"function piece code packaged way makes easy reuse. Functions make easy filter(), arrange(), select(), create tibble(), seen Chapters 1 2. Functions also allow transform variables perform mathematical calculations. use functions like rnorm() runif() generate random draws distribution.Note every time discuss function, include parentheses. call function including parentheses necessary arguments within parentheses. correct call rnorm():run function name without parentheses, R return code makes function.Functions can sorts things. sample() takes vector values returns number values randonly selected vector. can specify number random values argument size. call equivalent rolling die.Functions can also take functions arguments. example, replicate() takes expression repeats n times. replicated rolling die ten times?especially useful type function family map_* functions. map_* functions come purrr package, automatically loaded library(tidyverse). functions apply function every row tibble.Let’s create tibble one variable x takes three values: 3, 7, 2.easy use mutate create new variable, sq_root, square root value x.map_* functions provide another approach. map_* function takes two required arguments. First object want iterate. generally column tibble working . Second function want run row tibble.map_dbl() (pronounced “map-double”) took function sqrt() applied element x. two tricky parts use map_* functions. First, need put tilde symbol — “~” — call function. Second, need include period — “.” — spot variable goes.called map_* functions (plural) . know expected output function, can specify kind vector:map(): listmap_lgl(): logicalmap_int(): integermap_dbl(): double (numeric)map_chr(): charactermap_df(): data frameSince example produces numeric output, use map_dbl() instead map().’s difference using mutate() map_* functions? map_* functions useful ability apply functions every single element list, mutate() handle.","code":"\nrnorm(n = 1)## [1] 1.2\nrnorm## function (n, mean = 0, sd = 1) \n## .Call(C_rnorm, n, mean, sd)\n## <bytecode: 0x7f94682518e8>\n## <environment: namespace:stats>\nsample(x = 1:6, size = 1)## [1] 4\nreplicate(10, sample(1:6, 1))##  [1] 6 1 6 6 5 2 5 6 1 4\nlibrary(tidyverse)\ntibble(x = c(3, 7, 2))## # A tibble: 3 x 1\n##       x\n##   <dbl>\n## 1     3\n## 2     7\n## 3     2\ntibble(x = c(3, 7, 2)) %>% \n  mutate(sq_root = sqrt((x)))## # A tibble: 3 x 2\n##       x sq_root\n##   <dbl>   <dbl>\n## 1     3    1.73\n## 2     7    2.65\n## 3     2    1.41\ntibble(x = c(3, 7, 2)) %>% \n  mutate(sq_root = map_dbl(x, ~ sqrt(.)))## # A tibble: 3 x 2\n##       x sq_root\n##   <dbl>   <dbl>\n## 1     3    1.73\n## 2     7    2.65\n## 3     2    1.41"},{"path":"functions.html","id":"list-columns-and-map-functions","chapter":"3 Functions","heading":"3.2 List-columns and map functions","text":"Recall list different atomic vector. atomic vectors, element vector one value. Lists, however, can contain vectors, even complex objects, elements.object, x, contains numeric vector element. extract first element list?number built-R functions output lists. example, ggplots making store plot information lists.function returns multiple values can used create list output wrapping values list().Notice 1x1 tibble one observation, list one element. Voila! just created *list-column**.function returns multiple values vector, like range() , must use list() wrapper want create list-column.list column column data list rather atomic vector. Like lists, can pipe str() read column easily.Let’s practice nhanes dataset. add column dataset included quantiles height variable gender?First, load necessary primer.data library., select relevant variables, group gender. grouping curious height distributed gender. drop rows missing data.Next, create list-column wrapping quantile() list(). quantile() naturally produces numeric vector quantiles height, wrapping list() capture numeric vector list.Take look values height_quantiles:Men taller women, except bottom height distribution, includes children.can use map_* functions create list-column , much importantly, work list-column afterwards. Example:flexibility possible via use list-columns map_* functions.now, practiced using map_* functions built-R functions. Next, show write functions!","code":"\nx <- list(c(3, 7, 2))\nx## [[1]]\n## [1] 3 7 2\nx[[1]][1]## [1] 3\nx <- rnorm(10)\n\n# range() returns the min and max of the argument \n\nrange(x)## [1] -1.3  2.5\ntibble(col_1 = list(range(x))) ## # A tibble: 1 x 1\n##   col_1    \n##   <list>   \n## 1 <dbl [2]>\ntibble(col_1 = list(range(x))) %>%\n  str()## tibble [1 × 1] (S3: tbl_df/tbl/data.frame)\n##  $ col_1:List of 1\n##   ..$ : num [1:2] -1.33 2.47\nlibrary(primer.data)\nnhanes %>%\n  select(gender, height) %>%\n  drop_na() %>% \n  group_by(gender)## # A tibble: 9,647 x 2\n## # Groups:   gender [2]\n##    gender height\n##    <chr>   <dbl>\n##  1 Male     165.\n##  2 Male     165.\n##  3 Male     165.\n##  4 Male     105.\n##  5 Female   168.\n##  6 Male     133.\n##  7 Male     131.\n##  8 Female   167.\n##  9 Female   167.\n## 10 Female   167.\n## # … with 9,637 more rows\ntmp <- nhanes %>%\n  select(gender, height) %>%\n  drop_na() %>% \n  group_by(gender) %>% \n  mutate(height_quantiles = map(height, ~ quantile(.)))\n\ntmp## # A tibble: 9,647 x 3\n## # Groups:   gender [2]\n##    gender height height_quantiles\n##    <chr>   <dbl> <list>          \n##  1 Male     165. <dbl [5]>       \n##  2 Male     165. <dbl [5]>       \n##  3 Male     165. <dbl [5]>       \n##  4 Male     105. <dbl [5]>       \n##  5 Female   168. <dbl [5]>       \n##  6 Male     133. <dbl [5]>       \n##  7 Male     131. <dbl [5]>       \n##  8 Female   167. <dbl [5]>       \n##  9 Female   167. <dbl [5]>       \n## 10 Female   167. <dbl [5]>       \n## # … with 9,637 more rows\ntmp %>% \n  select(gender, height_quantiles) %>% \n  slice(1,5) %>% \n  str()## tibble [4 × 2] (S3: grouped_df/tbl_df/tbl/data.frame)\n##  $ gender          : chr [1:4] \"Female\" \"Female\" \"Male\" \"Male\"\n##  $ height_quantiles:List of 4\n##   ..$ : Named num [1:5] 168 168 168 168 168\n##   .. ..- attr(*, \"names\")= chr [1:5] \"0%\" \"25%\" \"50%\" \"75%\" ...\n##   ..$ : Named num [1:5] 142 142 142 142 142\n##   .. ..- attr(*, \"names\")= chr [1:5] \"0%\" \"25%\" \"50%\" \"75%\" ...\n##   ..$ : Named num [1:5] 165 165 165 165 165\n##   .. ..- attr(*, \"names\")= chr [1:5] \"0%\" \"25%\" \"50%\" \"75%\" ...\n##   ..$ : Named num [1:5] 133 133 133 133 133\n##   .. ..- attr(*, \"names\")= chr [1:5] \"0%\" \"25%\" \"50%\" \"75%\" ...\n##  - attr(*, \"groups\")= tibble [2 × 2] (S3: tbl_df/tbl/data.frame)\n##   ..$ gender: chr [1:2] \"Female\" \"Male\"\n##   ..$ .rows : list<int> [1:2] \n##   .. ..$ : int [1:2] 1 2\n##   .. ..$ : int [1:2] 3 4\n##   .. ..@ ptype: int(0) \n##   ..- attr(*, \".drop\")= logi TRUE\ntibble(ID = 1:3) %>% \n  mutate(draws = map(ID, ~ rnorm(10))) %>% \n  mutate(max = map_dbl(draws, ~ max(.))) %>% \n  mutate(range = map(draws, ~ range(.)))## # A tibble: 3 x 4\n##      ID draws        max range    \n##   <int> <list>     <dbl> <list>   \n## 1     1 <dbl [10]>  2.00 <dbl [2]>\n## 2     2 <dbl [10]>  2.50 <dbl [2]>\n## 3     3 <dbl [10]>  1.09 <dbl [2]>"},{"path":"functions.html","id":"custom-functions","chapter":"3 Functions","heading":"3.3 Custom Functions","text":"","code":""},{"path":"functions.html","id":"anonymous-functions-with-map_-functions","chapter":"3 Functions","heading":"3.3.1 Anonymous functions with map_* functions","text":"can create functions operations “fly” without bothering give name. nameless functions called anonymous functions.can use anonymous functions conjunction map_* family functions. ’re commonly used conduct mathematical operations repeatedly.can call anonymous function using ~ operator using . represent current element.Note parentheses necessary. long everything ~ works R code, anonymous function work, time replace . value relevant value .x variable — old case — value row.","code":"\ntibble(old = c(3, 7, 2)) %>% \n  mutate(new = map_dbl(old, ~ (. + 1)))## # A tibble: 3 x 2\n##     old   new\n##   <dbl> <dbl>\n## 1     3     4\n## 2     7     8\n## 3     2     3\ntibble(old = c(3, 7, 2)) %>% \n  mutate(new = map_dbl(old, ~ . + 1))## # A tibble: 3 x 2\n##     old   new\n##   <dbl> <dbl>\n## 1     3     4\n## 2     7     8\n## 3     2     3"},{"path":"functions.html","id":"creating-your-own-functions","chapter":"3 Functions","heading":"3.3.2 Creating your own functions","text":"plenty built-functions R, ones mentioned . can also create custom functions, may look something like :just created function! function return 1 + 1 whenever called.\nwanted leave mystery function? say, want add number 6 value x, user provides us.Congratulations! incorporated first formal argument. Formal arguments functions additional parameters allow user customize use function. Instead adding 1 + 1 , function takes number x user defines adds 6. Now let’s drive home make function two formal arguments.","code":"\nadd_one_and_one <- function(){\n  1 + 1\n}\n\nadd_one_and_one()## [1] 2\nadd_six_to_something <- function(x){\n  x + 6\n}\n\nadd_six_to_something(x = 1)## [1] 7\nadd_x_to_y <- function(x, y) {\n  x + y\n}\n\nadd_x_to_y(1, 2)## [1] 3\nadd_x_to_y(4, 3)## [1] 7"},{"path":"functions.html","id":"skateboard-perfectly-formed-rear-view-mirror","chapter":"3 Functions","heading":"3.3.3 Skateboard >> perfectly formed rear-view mirror","text":"image — widely attributed Spotify development team — conveys important point.\nFIGURE 3.1: ultimate guide Minimum Viable Product (+great examples)\nBuild skateboard build car fancy car part. limited--functioning thing useful. also keeps spirits high.related valuable Telescope Rule:faster make four-inch mirror six-inch mirror make six-inch mirror.","code":""},{"path":"functions.html","id":"no_na_sampler","chapter":"3 Functions","heading":"3.4 no_NA_sampler()","text":"Assume want sample 10 observations height nhanes tibble primer.data package. easy built function sample().One problem approach sample missing values height. can avoid manipulating vector inside call sample().works, , first, ugly code. , second, hard extend constraints. example, assume want sample individuals missing values variables, just height. , really make custom function. Call function no_NA_sampler().first step function creation write code normal pipe want function . case, code look like:start nhanes, use drop_na() remove rows missing values variable, sample 10 rows random pull height. turn function, just need copy/paste pipe within body function definition:Voila! function just executes code within body. first step building function write function. write code want function execute.first version, however, “hard codes” lot options might want change. want sample 5 values height 500? case, hard code new number place “10.” better option add argument can pass whatever value want.want sample different variable height different tibble nhanes? , trick turn hard coded values arguments. argument tbl placeholder data set, n number samples want extracted data set, var variable samples studying.R know interpret something like age passed argument. double curly braces around var tell R, essence, var variable tibble created sampling imputed data set (tbl).Now function want, add comments error checking.","code":"\nsample(nhanes$height, size = 10)##  [1] 155 157 163 183 133 168  99 165 170 170\nsample(nhanes$height[! is.na(nhanes$height)], size = 10)##  [1] 167 176 157 159 181 163 166 150 173 159\nnhanes %>% \n  drop_na() %>%\n  sample_n(10) %>% \n  pull(height)##  [1] 148 170 148 158 169 161 167 156 157 161\nno_NA_sampler <- function(){\n  nhanes %>% \n    drop_na() %>%\n    sample_n(10) %>% \n    pull(height)\n}\n\nno_NA_sampler()##  [1] 174 156 157 146 156 164 165 181 162 160\nno_NA_sampler <- function(n){\n  nhanes %>% \n    drop_na() %>%\n    sample_n(n) %>% \n    pull(height)\n}\n\nno_NA_sampler(n = 2)## [1] 175 171\nno_NA_sampler(n = 25)##  [1] 162 160 173 152 178 157 156 148 168 165 164 158 155 155 167 169 167 172 160\n## [20] 164 164 160 156 158 165\nno_NA_sampler <- function(tbl, var, n){\n  tbl %>% \n    drop_na() %>%\n    sample_n(n) %>% \n    pull({{var}})\n}\n\nno_NA_sampler(nhanes, height, n = 2)## [1] 171 160\nno_NA_sampler(trains, age, n = 5)## [1] 68 56 42 54 63\nno_NA_sampler <- function(tbl, var, n){\n  \n  # Function for grabbing `n` samples from a variable `var` which lives in a\n  # tibble `tbl`. \n  \n  # I could not figure out how to check to see if `var` actually lives in tibble\n  # in my error checking. Also, I don't like that I need to use is_double() as\n  # the check on `n` even though I want `n` to be an integer.\n  \n  stopifnot(is_tibble(tbl))\n  stopifnot(is_double(n))\n\n  tbl %>% \n    drop_na() %>%\n    \n    # What happens if n is \"too large\"? That is, I need to think harder about a)\n    # whether or not I am sampling with or without replacement and b) which I\n    # should be doing.\n    \n    sample_n(size = n) %>% \n    pull({{var}})\n}"},{"path":"functions.html","id":"prediction-game","chapter":"3 Functions","heading":"3.5 Prediction Game","text":"Let’s play prediction game. Consider kenya tibble primer.data.game pick random value rv13, number people live vicinity polling station. guess number. guess number. winner Prediction Game person whose guess closest random value selected. Example:Run code R Console try . works! also sloppy disorganized. first step writing good code write bad code.don’t want play Prediction Game just . want thousands times. Copy/pasting code thousand times stupid. Instead, need function. Just place working code within function definition, Voila!function definition , changes. Yet, creating function, can now easily run multiple times.problem version want prediction_game() return message winner. Right now, returns nothing. just prints winner. Let’s change , also allow guesses passed argument, along tibble variable. can leave n hard coded 1 since, definition, Prediction Game attempt guess one number, least now.general, want store results tibble, makes later analysis plotting easier.wins game play 1,000 times?hardly surprising 500 wins often 600 since mean rv13 539.23. mean seems like pretty good guess! best guess.test whether mean median better guess, use created prediction_game function guesses 442 (median) 539 (mean) plot results.mean bad prediction. best prediction (surprisingly?) median, 442.","code":"\nkenya## # A tibble: 1,672 x 9\n##    block poll_station treatment poverty distance pop_density mean_age reg_byrv13\n##    <chr> <chr>        <fct>       <dbl>    <dbl>       <dbl>    <dbl>      <dbl>\n##  1 KWAL… 007/001      control     0.247     22.0    0.00296      39.6    0.00358\n##  2 KWAL… 007/004      local + …   0.329     25.1    0.000888     43.8    0.0742 \n##  3 KWAL… 007/009      local       0.263     27.8    0.00184      34.7    0.00691\n##  4 KWAL… 007/011      local + …   0.429     27.2    0.000270     44.6    0.26   \n##  5 KWAL… 007/017      local + …   0.341     19.3    0.000544     39.0    0.0228 \n##  6 KWAL… 007/018      local       0.204     24.0    0.00798      37.1    0.00243\n##  7 KWAL… 007/019      SMS         0.272     25.1    0.00167      39.2    0.00487\n##  8 KWAL… 007/020      control     0.316     23.8    0.000538     36.3    0      \n##  9 KWAL… 007/022      canvass     0.396     20.5    0.000216     42.9    0.00575\n## 10 KWAL… 007/023      local + …   0.398     14.5    0.000148     39.8    0.0360 \n## # … with 1,662 more rows, and 1 more variable: rv13 <dbl>\nyour_guess <- 500\nmy_guess <- 600\n\nsampled_value <- no_NA_sampler(kenya, rv13, n = 1) \n\nyour_error <- abs(your_guess - sampled_value)\nmy_error <- abs(my_guess - sampled_value)\n\nif(your_error < my_error) cat(\"You win!\")## You win!\nif(your_error > my_error) cat(\"I win!\")\nprediction_game <- function(){\n  your_guess <- 500\n  my_guess <- 600\n  \n  sampled_value <- no_NA_sampler(kenya, rv13, n = 1) \n  \n  your_error <- abs(your_guess - sampled_value)\n  my_error <- abs(my_guess - sampled_value)\n  \n  if(your_error < my_error) cat(\"You win!\")\n  if(your_error > my_error) cat(\"I win!\")\n}\nreplicate(3, prediction_game())## I win!You win!I win!## [[1]]\n## NULL\n## \n## [[2]]\n## NULL\n## \n## [[3]]\n## NULL\nprediction_game <- function(guesses, tbl, var){\n  \n  # This is telling our function to stop if we do not select two guesses \n  # in the format of c(guess 1, guess 2).\n  \n  stopifnot(all(is_double(guesses)))\n  stopifnot(length(guesses) == 2)\n  \n  # This tells the function that the \"guess\" inputted first in the \n  # guesses is \"your\" guess, whereas the second input is \"my\" guess.\n  \n  your_guess <- guesses[1]\n  my_guess <- guesses[2]\n  \n  # Use the function no_NA_sampler to draw a sample from a data set\n  # of our choosing, with a {{var}} and n.\n  \n  sampled_value <- no_NA_sampler(tbl, {{var}}, n = 1) \n  \n  # Subtract the sampled value obtained from no_NA_sampler from \n  # both of our guesses. \n  \n  your_error <- abs(your_guess - sampled_value)\n  my_error <- abs(my_guess - sampled_value)\n  \n  # If the difference between your guess and the sampled value is \n  # less than the difference between my guess and the sampled value\n  # (meaning that your guess was closer to the truth), the function\n  # returns the message \"Guess, your_guess, wins!\".\n  \n  if(your_error < my_error){ \n    return(paste(\"Guess\", your_guess, \"wins!\"))\n  }\n  \n  # If your error exceeds my error (meaning that your guess was\n  # further than the truth than mine), the function prints the \n  # message \"Guess, my_guess, wins!\" \n  \n  if(your_error > my_error){ \n    return(paste(\"Guess\", my_guess, \"wins!\"))\n  }\n  \n  # If we guess the same number, and our error rates are therefore\n  # identical, we return the message \"A tie!\". \n  \n  if(your_error == my_error){ \n    return(\"A tie!\")\n  }\n\n}\nreplicate(5, prediction_game(guesses = c(500, 600), kenya, rv13))## [1] \"Guess 500 wins!\" \"Guess 500 wins!\" \"Guess 500 wins!\" \"Guess 600 wins!\"\n## [5] \"Guess 500 wins!\"\ntibble(ID = 1:3) %>% \n  mutate(result = map_chr(ID, ~ \n                            prediction_game(guesses = c(500, 600),\n                                            kenya, \n                                            rv13)))## # A tibble: 3 x 2\n##      ID result         \n##   <int> <chr>          \n## 1     1 Guess 500 wins!\n## 2     2 Guess 600 wins!\n## 3     3 Guess 600 wins!\ntibble(ID = 1:1000) %>% \n  mutate(result = map_chr(ID, ~ \n                            prediction_game(guesses = c(500, 600),\n                                            kenya, \n                                            rv13))) %>% \n  ggplot(aes(result)) +\n    geom_bar()\ntibble(ID = 1:1000) %>% \n  mutate(result = map_chr(ID, \n                          ~ prediction_game(c(442, 539),\n                                            kenya,\n                                            rv13))) %>% \n  ggplot(aes(result)) +\n    geom_bar()"},{"path":"functions.html","id":"playing-within-a-tibble","chapter":"3 Functions","heading":"3.5.0.1 Playing within a tibble","text":"cases, convenient play portions Prediction Game within tibble. Imagine trying guess biggest value 10 random samples.can now manipulate result column see prediction better. Using structure , subtract guesses variable guessing; case, biggest value 10 random samples.Run test 1,000 times.Empirically, see 900 much better guess 800.","code":"\ntibble(ID = 1:3, guess_1 = 800, guess_2 = 900) %>% \n  mutate(result = map(ID, ~ no_NA_sampler(kenya, rv13, 10)))## # A tibble: 3 x 4\n##      ID guess_1 guess_2 result    \n##   <int>   <dbl>   <dbl> <list>    \n## 1     1     800     900 <dbl [10]>\n## 2     2     800     900 <dbl [10]>\n## 3     3     800     900 <dbl [10]>\ntibble(ID = 1:3, guess_1 = 800, guess_2 = 900) %>% \n  mutate(result = map(ID, ~ no_NA_sampler(kenya, rv13, 10))) %>% \n  mutate(biggest = map_dbl(result, ~ max(.))) %>% \n  mutate(error_1 = abs(guess_1 - biggest)) %>% \n  mutate(error_2 = abs(guess_2 - biggest)) %>% \n  mutate(winner = case_when(error_1 < error_2 ~ \"Guess one wins!\",\n                            error_1 > error_2 ~ \"Guess two wins!\",\n                            TRUE ~ \"A tie!\"))## # A tibble: 3 x 8\n##      ID guess_1 guess_2 result     biggest error_1 error_2 winner         \n##   <int>   <dbl>   <dbl> <list>       <dbl>   <dbl>   <dbl> <chr>          \n## 1     1     800     900 <dbl [10]>    1382     582     482 Guess two wins!\n## 2     2     800     900 <dbl [10]>    2246    1446    1346 Guess two wins!\n## 3     3     800     900 <dbl [10]>    1422     622     522 Guess two wins!\ntibble(ID = 1:1000, guess_1 = 800, guess_2 = 900) %>% \n  mutate(result = map(ID, ~ no_NA_sampler(kenya, rv13, 10))) %>% \n  mutate(biggest = map_dbl(result, ~ max(.))) %>% \n  mutate(error_1 = abs(guess_1 - biggest)) %>% \n  mutate(error_2 = abs(guess_2 - biggest)) %>% \n  mutate(winner = case_when(error_1 < error_2 ~ \"Guess one wins!\",\n                            error_1 > error_2 ~ \"Guess two wins!\",\n                            TRUE ~ \"A tie!\")) %>% \n  ggplot(aes(winner)) +\n    geom_bar()"},{"path":"functions.html","id":"summary-3","chapter":"3 Functions","heading":"3.6 Summary","text":"","code":""},{"path":"functions.html","id":"lists-and-list-columns","chapter":"3 Functions","heading":"3.6.1 Lists and list-columns","text":"introduction chapter centered discussion lists list-columns. Key points section include:list different atomic vector. Atomic vectors familiar us: element vector one value, thus atomic vector column data set, observation gets single value. Lists, however, can contain vectors elements.various ways create lists. can directly input values inside list(), wrap values c() first create vector element.function returns multiple values can used create list output. turn output list, simply wrap line code list().can take list column , applying anonymous function map(), create another list column. similar taking tibble piping dplyr function (mutate()) gives new tibble can work .can also use map_* functions take list column input return atomic vector – column single value per observation – output.","code":""},{"path":"functions.html","id":"custom-functions-1","chapter":"3 Functions","heading":"3.6.2 Custom functions","text":"chapter, focused functions.particular, building function, want remember key lessons:\n- Optimize usefulness adding formal arguments needed. function gives option n may helpful function allows us enter options data set, variable, n value.\n- structural relationship argument names (n) sample() (also includes n), ensure argument names sensible. helps readers, also . short: using “bob_ross” denote number samples want… bad idea.\n- Make sure account possible values NA functions. can accomplished placing something like drop_na() another line code within function’s body, adding na.rm = argument function. might even enforce preferred default – least ’re giving user way control behavior around NAs.\n- default, function returns result last line body.\n- starting function, remember smaller steps easier trying build everything one motion. general: start writing body, test body basic function, add formal arguments.\n- Use double curly braces around vars, since R know interpret variables passed argument. double curly braces tell R var variable tibble created function.","code":""},{"path":"functions.html","id":"distributions-1","chapter":"3 Functions","heading":"3.6.3 Distributions","text":"word “distribution” can mean two things. First, object — mathematical formula, imaginary urn — can draw values. Second, list values.two important aspects distribution center variability.median often stable measure center mean. mad (scaled median absolute deviation) often stable measure variation standard deviation.Outliers cause lack stability. distribution without outliers, mean/median mad/sd close value matter much ones use.","code":""},{"path":"functions.html","id":"other-important-information","chapter":"3 Functions","heading":"3.6.4 Other important information","text":"median often stable measure mean.starting function, remember smaller steps easier trying build everything one motion. general: start writing body, test body basic function, add formal arguments.Use double curly braces around vars, since R know interpret variables passed argument. double curly braces tell R var variable tibble created function.Sensible names formal arguments help , also anyone reading code.","code":""},{"path":"rubin-causal-model.html","id":"rubin-causal-model","chapter":"4 Rubin Causal Model","heading":"4 Rubin Causal Model","text":"ever wondered world like without ?George Bailey movie “’s Wonderful Life.” movie follows George explores world never born. clear profound impact lives many people community.showing world like without George, get idea causal effect life town people live . looking causal effects chapter using framework potential outcomes Rubin Causal Model (RCM).\nFIGURE 4.1: Don Rubin professor Statistics Harvard.\n","code":""},{"path":"rubin-causal-model.html","id":"preceptor-tables","chapter":"4 Rubin Causal Model","heading":"4.1 Preceptor Tables","text":"Preceptor Table table rows columns data data (reasonably) like , , none data missing, thing want know trivial calculate. Preceptor Tables can vary depending number rows columns , well amount data missing . use question marks placeholders data missing Preceptor Table.Assume five adult brothers given four heights. average height five brothers? given , can use statistics make best guess. Let’s look Preceptor Table problem: case, row brother column height. always ID column Preceptor Tables can identify different units. always furthest left. addition ID column, call column brother’s heights outcome column. Outcomes columns always next ID column.interested predicting Andy’s height. One guess just average four brothers: \\[\\frac{(178 + 165 + 172 + 173)}{4} = 172\\] realistic think best guess ? consider things like know four brothers’ heights. sampled randomly? know heights tallest family? case make sense use average estimate Andy’s height? Probably !Now let’s think slightly complex problem. Say heights 100 Harvard students, want know average height students school. , 100 students randomly sampled? estimate 90th percentile height student population? questions complicated, might less confident best guess. Now let’s say given characteristics height 100 sampled students, .e., sex age. ’ll notice Preceptor Table new type column: covariates. better able forecast student’s height given age sex?far, asked predictive questions. chapter, however, primarily focuses causal inference.","code":""},{"path":"rubin-causal-model.html","id":"causal-effect","chapter":"4 Rubin Causal Model","heading":"4.2 Causal effect","text":"\nFIGURE 4.2: study conducted Ryan Enos.\nRubin Causal Model (RCM) based idea potential outcomes. Enos (2014) measured attitudes toward immigration among Boston commuters. Individuals exposed one two possible conditions, attitudes towards immigrants recorded. One condition train platform near individuals speaking Spanish. train platform without Spanish-speakers. calculate causal effect Spanish-speakers nearby, need compare outcome individual one possible state world (Spanish-speakers) another (without Spanish-speakers). impossible observe potential outcomes . One potential outcomes always missing. dilemma Fundamental Problem Causal Inference.circumstances, interested comparing two experimental manipulations, one generally termed “treatment” “control.” difference potential outcome treatment potential outcome control called “causal effect” “treatment effect.” scenario didn’t actually happen, thus didn’t observe, called “counterfactual.” According RCM, causal effect platform Spanish-speakers difference attitude “treatment” (Spanish-speakers) “control” (Spanish-speakers).commuter survey consisted three questions, measuring agreement 1 5 integer scale, 1 liberal 5 conservative. person, three answers summed, generating overall measure attitude toward immigration ranged rom 3 15. attitude towards immigrants 13 Spanish-speakers 9 without Spanish-speakers, causal effect platform Spanish-speakers 4-point increase score.use variable \\(Y\\) represent potential outcomes, variable interested understanding modeling. \\(Y\\) called response variable variable want “explain.” case attitude score. trying understand causal effect, need two variables: control treated values can represented separately. use variables \\(Y_t\\) \\(Y_c\\).","code":""},{"path":"rubin-causal-model.html","id":"potential-outcomes","chapter":"4 Rubin Causal Model","heading":"4.2.1 Potential outcomes","text":"Suppose Yao one commuters surveyed experiment. omniscient, know outcomes Yao treatment (Spanish-speakers) control (Spanish-speakers). can show using ideal Preceptor Table. Preceptor Table considered ideal missing data, calculating number interested trivial. table know causal effect Yao. Everyone else study might lower attitude score (liberal) treated. Regardless causal effect subjects, causal effect Yao train platform Spanish-speakers shift towards conservative attitude.Using response variable — actual symbol rather written description — makes concise Preceptor Table.Yao139 Recall “causal effect” difference Yao’s potential outcomes treatment control.Yao139+4 Remember actual Preceptor Table bunch missing data! can use simple arithmetic calculate causal effect Yao’s attitude toward immigration. Instead, required estimate . estimand variable real world trying measure. case, \\(Y_{t}-Y_{c}\\), \\(+4\\). estimand value calculated, rather unknown variable want estimate.","code":""},{"path":"rubin-causal-model.html","id":"multiple-units","chapter":"4 Rubin Causal Model","heading":"4.2.2 Multiple units","text":"Generally study many individuals (, broadly, “units”) potential outcomes. notation needed allow us differentiate different units.words, needs distinction \\(Y_t\\) Yao, \\(Y_t\\) Emma. something like \\(Y_t(Yao)\\) \\(Y_t(Emma)\\), ineffective approach wanted fill full Preceptor Table. Instead, use variable \\(u\\) (\\(u\\) “unit”) indicate outcome control outcome treatment might different individual unit (person).Now, instead \\(Y_t\\), use \\(Y_t(u)\\) represent ‘Attitude Treated.’ want talk Emma, say “Emma’s Attitude Treated” “\\(Y_t(u = Emma)\\)” “\\(Y_t(u)\\) Emma,” just \\(Y_t\\). notation ambiguous one subject.Let’s look ideal Preceptor Table subjects using new notation:Yao139+4Emma11110Cassidy1110+1Tahmid912-3Diego64+2 ideal Preceptor Table, many possible estimands might interested . Consider examples, along true values:potential outcome one person, e.g., Yao’s potential outcome treatment: \\(13\\).causal effect one person, Emma. difference potential outcomes: \\(11 - 11 = 0\\).positive causal effect: \\(+4\\), Yao.negative causal effect: \\(-3\\), Tahmid.median causal effect: \\(+1\\).median percentage change: \\(+10.0\\%\\). see , calculate percentage change person. ’ll get 5 percentages: \\(+44.4\\%\\), \\(0.0\\%\\), \\(+10.0\\%\\), \\(-25.0\\%\\), \\(+25.0\\%\\).total number people causal effect positive: \\(3\\).. lot things one might care !variables calculated examples estimands might interested . One estimand important enough name: average treatment effect, often abbreviated ATE. average treatment effect mean causal effects. , mean \\(+0.8\\).Remember actual Preceptor Table riddled, always , question marks, looks like:Yao13??Emma11??Cassidy?10?Tahmid?12?Diego6?? Calculating values table longer simple math problem. See discussion Harvard Professor Matt Blackwell:","code":""},{"path":"rubin-causal-model.html","id":"simple-models","chapter":"4 Rubin Causal Model","heading":"4.3 Simple models","text":"can fill question marks? fundamental problem causal inference, can never know missing values. can never know missing values, must make assumptions. “Assumption” just means need “model,” models parameters.","code":""},{"path":"rubin-causal-model.html","id":"a-single-value-for-tau","chapter":"4 Rubin Causal Model","heading":"4.3.1 A single value for tau","text":"One model might causal effect everyone. single parameter, \\(\\tau\\), estimate. (\\(\\tau\\) Greek letter, written “tau” rhyming “cow.”) estimate, can fill Preceptor Table , knowing , can estimate unobserved potential outcome person. use assumption \\(\\tau\\) estimate counterfactual outcome unit.Remember Preceptor Table looks like missing data:Yao13??Emma11??Cassidy?10?Tahmid?12?Diego6?? assume \\(\\tau\\) treatment effect everyone, fill table? using \\(\\tau\\) estimate causal effect. definition: \\(Y_t(u) - Y_c(u) = \\tau\\). Using simple algebra, clear \\(Y_t(u) = Y_c(u) + \\tau\\) \\(Y_c(u) = Y_t(u) - \\tau\\). words, add observed value every observation control group (subtract observed value every observation treatment group), thus fill missing values.Assuming constant treatment effect, \\(\\tau\\), everyone, filling missing values look like :Yao13$$13 - \\tau$$$$\\tau$$Emma11$$11 - \\tau$$$$\\tau$$Cassidy$$10 + \\tau$$10$$\\tau$$Tahmid$$12 + \\tau$$12$$\\tau$$Diego6$$6 - \\tau$$$$\\tau$$ Now need find estimate \\(\\tau\\) order fill missing values. One approach subtract average observed control values average observed treated values. \\[((13 + 11 + 6) / 3) - ((10 + 12) /  2)\\] \\[10 - 11 = -1\\]gives us estimate \\(-1\\) \\(\\tau\\). Let’s fill missing values adding \\(\\tau\\) observed values control subtracting \\(\\tau\\) observed value treatment like :Yao13$$13 - (-1)$$-1Emma11$$11 - (-1)$$-1Cassidy$$10 + (-1)$$10-1Tahmid$$12 + (-1)$$12-1Diego5$$5 - (-1)$$-1 gives us:Yao1314-1Emma1112-1Cassidy910-1Tahmid1112-1Diego67-1 ","code":""},{"path":"rubin-causal-model.html","id":"two-values-for-tau","chapter":"4 Rubin Causal Model","heading":"4.3.2 Two values for tau","text":"second model might assume causal effect different levels category constant within levels. Perhaps \\(\\tau_F\\) females \\(\\tau_M\\) males \\(\\tau_F != \\tau_M\\). making assumption give us different model can fill missing values Preceptor Table. key concept can’t make progress unless make assumptions. inescapable result Fundamental Problem Causal Inference.Let’s look particular model think sex impact treatment effect:Yao13$$13 - \\tau_M$$$$\\tau_M$$Emma11$$11 - \\tau_F$$$$\\tau_F$$Cassidy$$10 + \\tau_F$$10$$\\tau_F$$Tahmid$$12 + \\tau_M$$12$$\\tau_M$$Diego6$$6 - \\tau_M$$$$\\tau_M$$ two different estimates \\(\\tau\\).\\(\\tau_M\\) \\[(13+6)/2 - 12 = -3.5\\]\n\\(\\tau_F\\) \\[(11-10 = +1)\\]Using values, fill new table like :Yao13$$13 - (-3.5)$$-3.5Emma11$$11 - (+1)$$+1Cassidy$$10 + (+1)$$10+1Tahmid$$12 + (-3.5)$$12-3.5Diego6$$6 - (-3.5)$$-3.5 gives us:Yao1316.5-3.5Emma1110+1Cassidy1110+1Tahmid8.512-3.5Diego69.5-3.5 now two different estimates Emma (everyone else table). estimate \\(Y_c(Emma)\\) using assumption constant treatment effect (single value \\(\\tau\\)), get 12. estimate assuming treatment effect constant sex, calculate \\(Y_c(Emma) = 10\\). difference estimates Emma highlights difficulties inference. Models drive inference. Different models produce different inferences.","code":""},{"path":"rubin-causal-model.html","id":"heterogenous-treatment-effects","chapter":"4 Rubin Causal Model","heading":"4.3.3 Heterogenous treatment effects","text":"assumption constant treatment effect, \\(\\tau\\), usually true. ! never true. People vary. effect pill always different effect pill , least measure outcomes accurately enough. Treatment effects always heterogeneous, meaning vary across individuals.Reality looks like :Yao13$$13 - \\tau_{yao}$$$$\\tau_{yao}$$Emma11$$11 - \\tau_{emma}$$$$\\tau_{emma}$$Cassidy$$10 + \\tau_{cassidy}$$10$$\\tau_{cassidy}$$Tahmid$$12 + \\tau_{tahmid}$$12$$\\tau_{tahmid}$$Diego6$$6 - \\tau_{diego}$$$$\\tau_{diego}$$ Can solve \\(\\tau_{yao}\\). ! Fundamental Problem Causal Inference. can make progress unwilling assume least structure causal effect across different individuals?might able solve individual’s value \\(\\tau\\), completely stuck.","code":""},{"path":"rubin-causal-model.html","id":"average-treatment-effect","chapter":"4 Rubin Causal Model","heading":"4.3.4 Average treatment effect","text":"average treatment effect average difference potential outcomes treated group control group. difference estimand estimands like \\(\\tau\\), \\(\\tau_M\\) \\(\\tau_F\\), , case, care using average treatment effect fill missing values row. average treatment effect useful don’t assume anything individuals’ \\(\\tau\\), like \\(\\tau_{yao}\\), can still understand something average causal effect across whole sample., simplest way estimate ATE take mean treated group (\\(10\\)) mean control group (\\(11\\)) take difference means (\\(-1\\)). ’ll call estimate average treatment effect, \\(\\widehat{ATE}\\), pronounced “ATE-hat.”already exact calculation , talking ? Remember unwilling assume treatment effect constant study population, solve \\(\\tau\\) \\(\\tau\\) different different individuals. \\(\\widehat{ATE}\\) helpful.estimands may require filling question marks Preceptor Table. can get good estimate average treatment effect without filling every question mark — average treatment effect just single number. Rarely study care happens individuals. case, don’t care specifically happen Cassidy’s attitude treated. Instead, care generally experiment impacts people’s attitudes towards immigrants. average estimate, like \\(\\widehat{ATE}\\) can helpful.noted , popular estimand. ?’s obvious estimator estimand: difference observed outcomes treated group control group: \\(Y_t(u) - Y_c(u)\\).’s obvious estimator estimand: difference observed outcomes treated group control group: \\(Y_t(u) - Y_c(u)\\).treatment randomly assigned, estimator unbiased: can fairly confident estimate large enough treatment control group.treatment randomly assigned, estimator unbiased: can fairly confident estimate large enough treatment control group.earlier, willing assume causal effect everyone (big assumption!), can use estimate ATE, \\(\\widehat{ATE}\\), fill missing individual values Preceptor Table.earlier, willing assume causal effect everyone (big assumption!), can use estimate ATE, \\(\\widehat{ATE}\\), fill missing individual values Preceptor Table.Just ATE often useful estimand doesn’t mean always .Consider point #3. example, let’s say treatment effect vary dependent sex. males strong negative effect (-3), females smaller positive effect (+1). However, average treatment effect whole sample, even estimate correctly, single negative number (-1) (since negative effect males larger positive effect females). model estimate ATE simple thus alluring, don’t assume ’s always right model problem.estimating ATE easy. \\(\\widehat{ATE}\\) good estimate actual ATE? , knew missing values Preceptor Table, calculate ATE perfectly. missing values may wildly different observed values. Consider unobservable ideal Preceptor Table:Yao1311+2Emma119+2Cassidy1210+2Tahmid1412+2Diego64+2 example, indeed constant treatment effect everyone: \\(+2\\). Note observed values , unobserved values estimated ATE, \\(-1\\), pretty far actual ATE, \\(+2\\). think reasonable estimate ATE, using value constant \\(\\tau\\) might best guess. discussion, see Matt Blackwell:","code":""},{"path":"rubin-causal-model.html","id":"complications","chapter":"4 Rubin Causal Model","heading":"4.4 Complications","text":"","code":""},{"path":"rubin-causal-model.html","id":"data-problems","chapter":"4 Rubin Causal Model","heading":"4.4.1 Data problems","text":"Assume run train experiment, want know average attitude towards immigrants United States adults. first, seems like easy problem — ’s nothing causal ! knew true values, build data set like :  , answer simply average values. table? ! actually : reality, don’t know attitude towards immigrants United States adults. , lot missing data.maybe survey 1,000 people attitudes towards immigrants, get table looks like :  surveying 1,000 people attitudes towards immigrants now values work . , however, solve missing data problem. likely interested attitudes toward immigration entire population, just 1,000 person sample. ’ll need think whether sample representative full population. vast majority US adults still value. second two common sources missing data:units sample, see one potential outcome.units outside sample, see potential outcomes.fact many potential sources missing data, like saw infinite Preceptor Table! missing data problem creates need statistical inferences. data missing, inference needed.\nFIGURE 4.3: study conducted Barfort, Klemmensen Larsen.\nLet’s consider new example experiment highlight another type data problem might encounter. Say want know causal effect elected governor longevity. states minimum age requirement elected governor 30. People age 30 chance elected governor. means people less 30 one possible potential outcome. actual Preceptor Table, means rows 2 columns (people old enough elected), rows 1 column (people young elected).actual Preceptor Table problem might look something like : Yao--?Dean Khurana??Cassidy--?Preceptor??Tahmid--? Yao, Cassidy Tahmid question mark treatment column chance elected governor. Often real world actual Preceptor Table might look like . rows two () potential outcomes, fewer. go ?consider actually interested knowing. case, don’t really care causal effect people can’t possibly elected governor. words, don’t care causal effect whole population, rather subset population. Just like case infinite Preceptor Table need throw rows specific problem. Instead saying want know causal effect elected governor, might specify want know causal effect American population 30.defined problem reasonable actual Preceptor Table, can begin deal question marks.","code":""},{"path":"rubin-causal-model.html","id":"causal-and-predictive-models","chapter":"4 Rubin Causal Model","heading":"4.4.2 Causal and predictive models","text":"Causal inference often compared prediction. prediction, want know outcome, \\(Y(u)\\). causal inference, want know function potential outcomes, treatment effect: \\(Y_t(u) - Y_c(u)\\).missing data problems. Prediction involves getting estimate outcome variable don’t , thus missing, whether future data unable collect. Thus, prediction term using statistical inference fill missing data individual outcomes, situations om concept potential outcomes apply.Causal inference, however, term filling missing data potential outcomes. unlike prediction, one potential outcome can ever observed, even principle.causal inference prediction, process data missing observed crucial. think missing data similar observed data, can make inferences easily. , think dissimilarities consider model .Key point: predictive model, one \\(Y(u)\\) value unit. different RCM (least) two potential outcomes (treated control). one outcome column predictive model, whereas two causal model.predictive model infer happen outcome \\(Y(u)\\) changed \\(X\\) given unit. can compare two units, one one value \\(X\\) another different value \\(X\\).sense, models predictive. data stable distribution, make predictive forecast someone’s attitude. subset models causal, meaning , given individual, can change value \\(X\\) observe change outcome, \\(Y(u)\\), calculate causal effect.","code":""},{"path":"rubin-causal-model.html","id":"the-assignment-mechanism","chapter":"4 Rubin Causal Model","heading":"4.4.3 The assignment mechanism","text":"“assignment mechanism” process units received treatment units got control.sidestepped following question : difference sample means treated units control units, \\(\\widehat{ATE}\\), good estimate \\(ATE\\)? depends entirely method units assigned treatment, called assignment mechanism. mechanism whereby potential outcomes missing potential outcomes observed.already comes non-causal context considering sampling. trying estimate average attitude towards immigrants US, usually taking sample. process people enter sample called sampling mechanism. process people enter sample related attitude, even indirectly, estimates sample good estimates population.Whenever assignment mechanism correlated potential outcomes, say confounding. Confounding problem, since means simple estimate \\(ATE\\) , potentially, biased.Assignment mechanisms can also intentionally biased order manufacture desired outcomes. Let’s consider scenario entire platform either treated control. case assignment mechanism choice Spanish-speakers; allowed choose platform want stand . Let’s also say can perfectly predict attitude people platform. Spanish-speakers know platform liberal attitudes towards immigrants friendly, therefore always choose stand platforms. case, assignment mechanism platforms random. Spanish-speakers know averages various platforms experiment: Based knowledge Spanish-speakers experiment choose following treatment assignments: assignment mechanism used distorts averages \\(Y_t(u)\\) \\(Y_c(u)\\), turn distorts difference means. average treated group shifted lower (liberal), average control group shifted higher (conservative). gives illusion average treatment effect \\(\\widehat{ATE}\\) negative. true positive causal effect masked non-random assignment mechanism.Therefore, difference means longer good estimate ATE. fact, case wrong sign! merely consequence small sample: even million platforms experiment, get good estimate ATE.extreme example problem called selection bias. Selection bias person assigning treatment chooses basis potential outcomes. Spanish-speakers choosing platforms stand randomly. Rather, making treatment decisions based directly potential outcomes platform. Remember, whenever assignment mechanism correlated potential outcomes confounding, problem means estimand biased. examples confounding caused selection bias, selection bias always confoundingMuch like best way avoid making poor inferences sample population take random sample population, best assignment mechanism avoiding confounding randomization. platform flip coin determine treatment control group.Random assignment guarantees , average, correlation treatment assignment anything else, neither covariates potential outcomes.many circumstances, however, randomized trials possible due ethical practical concerns. scenarios necessity non-random assignment mechanism.example, let’s say train platforms experiment loud Spanish-speakers might heard anyone nearby. Therefore necessity, quieter platforms can assigned treatment group. non-random assignment may introduce confounding. Say systematic difference people quieter platforms compared people louder platforms. case, assignment mechanism correlated potential outcomes, confounding.Many statistical methods developed causal inference non-random assignment mechanism. methods, however, beyond scope book.","code":""},{"path":"rubin-causal-model.html","id":"the-infinite-preceptor-table","chapter":"4 Rubin Causal Model","heading":"4.4.4 The infinite Preceptor Table","text":"discussed ideal Preceptor Tables (missing data), actual Preceptor Tables (question marks representing values don’t know), one type Preceptor Table. real world, Preceptor Table infinite number rows, therefore infinite amount missing data. call type Preceptor Table infinite Preceptor Table. reality unworkable, make assumptions reduce true problem something manageable.Let’s start looking kinds missing data make infinite Preceptor Table. example, say care causal effect experiment Yao. care attitude right experiment? ! also care Yao’s potential outcomes one year now, two years now, .full Preceptor Table includes people know (Yao) people don’t (example, Eliot), now future: fact, time continuous, row Yao now, Yao one second now, Yao one day now . Preceptor Table extends downward forever. Thus, order estimate causal effect, need assumptions, aren’t dealing infinite table.obvious way eliminate rows table assume causal effect Yao now ones Yao future. plausible? Sort . Yao now Yao one second pretty similar! Yao now Yao 30 years less . Unfortunately, ’s magic way get good estimate every missing value infinite Preceptor Table! assumptions, can reduce true problem problem dealing .can extend Preceptor Table adding people sample rows, can also add additional treatments columns. Let’s go back original five people sample. also wanted test causal effect another language spoken platform? ’ll call original treatment \\(t\\) new treatment \\(t'\\).Yao13??Emma11??Cassidy??10Tahmid??12Diego6?? Note Yao, now three causal effects can estimate: difference original treatment new treatment, difference original treatment control, difference new treatment control.Even just one language testing, still multiple treatments. example, amount time commuter platform Spanish-speakers might vary across commuters. case, might receive different treatment.Yao13?????Emma11?????Cassidy?????10Tahmid?????12Diego6????? Instead considering treatment terms duration, also consider different volume levels, measured decibels (dB), Spanish spoken.Yao13????Emma11????Cassidy????10Tahmid????12Diego6???? Indeed, infinite number possible treatments. Preceptor Table extends right forever. , assumptions come rescue. rather, just throw hands try estimate things. crucial define one’s estimand precisely: interested difference potential outcomes Spanish spoken 10 minutes 60 dB versus control, can ignore possible columns infinite Preceptor Table.Thus, whenever considering causal question, best way think start infinite Preceptor Table. First throw rows think duplicates (observations Yao one second now, two seconds now, etc.) outside scope interested now (maybe don’t care outcomes 30 years future study). Second, throw columns don’t care , possible treatments aren’t considering. Finally, define precisely—terms potential outcomes—estimand. may something simple, average treatment effect, something complex. done steps, can start thinking fill question marks. remember infinite Preceptor Table always , conscious rows columns throwing !","code":""},{"path":"rubin-causal-model.html","id":"no-causation-without-manipulation","chapter":"4 Rubin Causal Model","heading":"4.4.5 No causation without manipulation","text":"order potential outcome make sense, must possible, least priori. example, way Yao, circumstance, ever train study, \\(Y_{t}(u)\\) impossible . can never happen. \\(Y_{t}(u)\\) can never observed, even theory, causal effect treatment Yao’s attitude undefined.causal effect train study well defined simple difference two potential outcomes, might happen. case, (something else) can manipulate world, least conceptually, possible one thing different thing might happen.definition causal effects becomes much problematic way one potential outcomes happen, ever. example, causal effect Yao’s height weight? might seem just need compare two potential outcomes: Yao’s weight treatment (treatment defined 3 inches taller) Yao’s weight control (control defined current height).moment’s reflection highlights problem: can’t increase Yao’s height. way observe, even conceptually, Yao’s weight taller way make taller. can’t manipulate Yao’s height, makes sense investigate causal effect height weight. Hence slogan: causation without manipulation.raises question can manipulated. something manipulated, consider causal. can race ever considered causal? sex? genetic condition like color-blindness? Can manipulate characteristics? modern world questions simple.Take color-blindness example. Say interested color-blindness impacts ability complete jig-saw puzzle. color-blindness genetic might argue manipulated. advances technology like gene-therapy might allow us actually change someone’s genes. claim ability manipulate color-blindness? yes, measure causal effect color-blindness ability complete jig-saw puzzles.slogan “causation without manipulation” may first seem straight forward, clearly simple. Questions race, sex, gender genetics complex considered care.","code":""},{"path":"rubin-causal-model.html","id":"internal-and-external-validity","chapter":"4 Rubin Causal Model","heading":"4.4.6 Internal and external validity","text":"Recall two main sources missing data:units sample, see one potential outcomeFor units outside sample, see potential outcomesIf randomized assignment large sample, can confident good estimate average treatment effect sample. say experiment high internal validity: inferences making likely reflect truth sample.However, may interested population beyond particular sample, second main source missing data. example, let’s look broader context train experiment. likely exclusively concerned attitudes people ride trains, rather attitudes larger population. Train platforms, however, valuable setting run experiment. Let’s say ran randomized experiment 10,000 people Boston, found \\(\\widehat{ATE} = -1\\). assume estimate accurate larger general population?answer question depends part external validity study. 10,000 people study similar people want generalize findings ? Perhaps want generalize train commuters cities. Let’s say 10,000 people Boston choose ride trains environmental reasons. ’s another form selection bias. sample randomly selected population interested. problem? people differ systematically people way may affect response experiment. example, preference public transportation environmental reasons may correlated political beliefs.Note concern can expressed terms assignment mechanism. People don’t ride train 0% chance receiving treatment. Thus, study can’t directly speak treatment impact attitudes towards immigrants. way can make claims making additional assumptions, train-riders reflect makeup political beliefs people don’t ride trains.external validity study often directly related representativeness sample. Representativeness well sample represents larger population interested generalizing . train experiment allow us calculate causal effect people commute cars? Can calculate causal effect people New York City? generalize broader populations consider experimental estimates applicable beyond experiment. Maybe think commuters Boston New York similar enough, \\(\\widehat{ATE}\\) also good estimate causal effect treatment NYC. also conclude people commute car fundamentally different people commute train. true, say estimate true commuters sample accurately represent broader group want generalize .circumstances experiment may also affect external validity study. Perhaps train study conducted middle summer platforms uncomfortably hot. , variation one aspect treatment (whether Spanish-speakers nearby), don’t variation another (temperature train platform). may attitude towards immigrants impacted train platform uncomfortably hot, treatment impact attitude otherwise.dealing human subjects, particular concern regarding external validity: Hawthorne effect. human subjects know part experiment, may change behavior.example, Hawthorne effect can impact attitudes expressed surveys. Maybe respondents extreme attitude either direction (liberal conservative) survey opportunity express opinion.","code":""},{"path":"rubin-causal-model.html","id":"correlation-with-potential-outcomes","chapter":"4 Rubin Causal Model","heading":"4.4.7 Correlation with potential outcomes","text":"considering relationship treatment outcome, one important assumptions lack correlation treatment assignment potential outcomes. Consider version train experiment. Assume , Republican platform Spanish-speakers, attitude value 9. platform hear Spanish, attitude 11. Democrat attitude 9 regardless whether platform Spanish-speakers. words, causal effect treatment group +2 Republicans, 0 Democrats. run experiment random assignment, discover average causal effect somewhere 0 2, depending relative proportion Republicans Democrats.1119+2R2119+2R3990D4119+2R5990D Unfortunately (?), people choose ride certain trains randomly. might assume/hope correlation train ride potential outcomes. true, still able estimate causal effect. Yet rarely true general. , instead, Republicans control group, Democrats treated? case, everyone attitude 9! appears presence Spanish-speakers platform “matter.” correlation treatment potential outcomes invalidates naive estimate average treatment effect.R?9?R?9?D9??R?9?D9?? Keep mind problem arises correlation treatment assignment potential outcome, simply correlation treatment assignment outcome. case, correlation treatment assignment outcome zero! Just looking outcomes observe enough. must make assumptions outcomes don’t observe, happened.","code":""},{"path":"rubin-causal-model.html","id":"summary-4","chapter":"4 Rubin Causal Model","heading":"4.5 Summary","text":"fundamental components every problem causal inference units, treatments outcomes. units rows tibble. treatments columns. outcomes values.causal effect difference one potential outcome another. different life missed train?causal effect treatment single unit point time difference value outcome variable treatment without treatment. fundamental problem causal inference impossible observe causal effect single unit. must make assumptions — .e, must make models — order estimate causal effects.","code":""},{"path":"probability.html","id":"probability","chapter":"5 Probability","heading":"5 Probability","text":" usual touchstone whether someone asserts mere persuasion least subjective conviction, .e., firm belief, betting. Often someone pronounces propositions confident inflexible defiance seems entirely laid aside concern error. bet disconcerts . Sometimes reveals persuaded enough one ducat ten. happily bet one, ten suddenly becomes aware previously noticed, namely quite possible erred. -— Immanuel Kant, Critique Pure ReasonThe central tension, opportunity, data science interplay data science, empirical observations models use understand . Probability language use explore interplay; connects models data, data models.","code":""},{"path":"probability.html","id":"probability-distributions","chapter":"5 Probability","heading":"5.1 Probability distributions","text":"\nFIGURE 5.1: Dice Probability.\nmean Trump 30% chance winning re-election fall 2020? 90% probability rain today? dice casino unfair?Probability quantifying uncertainty. can think probability proportion. probability event occurring number 0 1, 0 means event impossible 1 means event 100% certain.Let’s begin simplest events: coin flips dice rolls. dice coins fair, can operate assumption outcomes equally likely.allows us make following statements:probability rolling 1 2 2/6, 1/3.probability rolling 1, 2, 3, 4, 5, 6 1.probability flipping coin getting tails 1/2.purposes Primer, probability distribution mathematical object covers set outcomes, distinct outcome chance occurring 0 1 inclusive. chances must sum 1. set possible outcomes — heads tails coin, 1 6 single die, 2 12 pair dice — can either discrete continuous. set outcomes domain probability distribution. three types probability distributions: mathematical, empirical, posterior.key difference distribution, explored earlier chapters, probability distribution requirement sum probabilities individual outcomes must exactly 1. requirement distribution. distribution can turned probability distribution “normalizing” , explore. context, often refer distribution (yet) probability distribution “unnormalized” distribution.Pay attention notation. Whenever talking specific probability (represented single value), use \\(\\rho\\) (Greek letter “rho” spoken aloud “p” us) subscript specifies exact outcome probability. instance, \\(\\rho_h = 0.5\\) denotes probability getting heads coin toss coin fair. \\(\\rho_t\\) — spoken “PT” “P sub T” “P tails” — denotes probability getting tails coin toss. However, referring entire probability distribution set outcomes, use \\(\\text{Prob}()\\). example, probability distribution coin toss \\(\\text{Prob}(\\text{coin})\\). , \\(\\text{Prob}(\\text{coin})\\) composed two specific probabilities (50% 50%) mapped two values domain: Heads Tails. Similarly, \\(\\text{Prob}(\\text{sum two dice})\\) probability distribution set 11 outcomes (2 12) possible take sum two dice. \\(\\text{Prob}(\\text{sum two dice})\\) made 11 numbers — \\(\\rho_2\\), \\(\\rho_3\\), …, \\(\\rho_{12}\\) — representing unknown probability sum equal value. , \\(\\rho_2\\) probability rolling 2.","code":""},{"path":"probability.html","id":"flipping-a-coin","chapter":"5 Probability","heading":"5.1.1 Flipping a coin","text":"mathematical distribution based mathematical formulas. Assuming coin perfectly fair, , average, get heads often get tails.empirical distribution based data. can think probability distribution created running simulation. theory, increase number coins flip simulation, empirical distribution look similar mathematical distribution. probability distribution Platonic form. empirical distribution often look like mathematical probability distribution, rarely exactly .simulation, 56 heads 44 tails. outcome vary every time run simulation, proportion heads tails different coin fair.posterior distribution based beliefs expectations. displays belief things can’t see right now. may posterior distributions events past, present, future.case coin toss, posterior distribution changes depending beliefs. instance, let’s say friend brought coin school asked bet . result heads, pay $5.makes suspicious; posterior distribution reflect . might believe \\(\\rho_h\\) 0.95 \\(\\rho_t\\) 0.05.full terminology mathematical (empirical posterior) probability distribution. often shorten just mathematical (empirical posterior) distribution. word “probability” understood, even present.","code":""},{"path":"probability.html","id":"rolling-two-dice","chapter":"5 Probability","heading":"5.1.2 Rolling two dice","text":"mathematical distribution tells us , fair dice, probability getting 1, 2, 3, 4, 5, 6 equal: 1/6 chance . roll two dice time sum numbers, values closest middle common values edge combinations numbers add middle values.get empirical distribution running simulation rolling two dice hundred times. result identical mathematical distribution inherent randomness real world.might consider labeling y-axis plots empirical distributions “Proportion” rather “Probability” since actual proportion, calculated real (simulated) data. keep “Probability” since want emphasize parallels mathematical, empirical posterior probability distributions.posterior distribution rolling two dice hundred times depends expectations. take dice Monopoly set, reason believe assumptions underlying mathematical distribution true. However, walk crooked casino host asks play craps, might suspicious. craps, come-roll 7 11 “natural,” resulting win “shooter” loss casino. might expect numbers occur less often fair dice. Meanwhile, come-roll 2, 3 12 loss shooter. might also expect values like 2, 3 12 occur frequently. posterior distribution might look like :Someone less suspicious casino posterior distribution looks like mathematical distribution.","code":""},{"path":"probability.html","id":"presidential-elections","chapter":"5 Probability","heading":"5.1.3 Presidential elections","text":"Now let’s say building probability distributions political events, like presidential election. want know probability Democratic candidate wins X electoral votes, X comes range possible outcomes: 0 538. (total number electoral votes US elections since 1964 538.)can start mathematical distribution X assumes chances Democratic candidate winning given state’s electoral votes 0.5 results state independent.know campaign platforms, donations, charisma, many factors contribute candidate’s success. Elections complicated coin tosses. also know many presidential elections history resulted much bigger victories defeats distribution seems allow .empirical distribution case involve looking past elections United States counting number electoral votes Democrats won . empirical distribution, create tibble electoral vote results past elections. Looking elections since 1964, can observe number electoral votes Democrats received one different. Given 15 entries, difficult draw conclusions make predictions based empirical distribution.However, model enough suggest assumptions mathematical probability distribution work electoral votes. model assumes Democrats 50% chance receiving 538 votes. Just looking mathematical probability distribution, can observe receiving 13 17 486 votes 538 extreme almost impossible mathematical model. However, empirical distribution tells us real election results.posterior distribution electoral votes popular topic, area strong disagreement, among data scientists. Consider posterior FiveThirtyEight.posterior FiveThirtyEight website August 13, 2020. created using data distribution, simply displayed differently. electoral result, height bar represents probability given event occur. However, lablels y-axis telling us specific probability outcome . OK! specific values useful. removed labels y-axes, matter?posterior Economist, also August 13, 2020. looks confusing first chose merge axes Republican Democratic electoral votes. can tell Economist less optimistic, relative FiveThirtyEight, Trump’s chances election.two models, built smart people using similar data sources, reached fairly different conclusions. Data science difficult! one “right” answer. Real life problem set.\nFIGURE 5.2: Watch makers two models throw shade Twitter! Eliot Morris one primary authors Economist model. Nate Silver charge 538. don’t seem impressed ’s work! smack talk .\nmany political science questions explore posterior distributions. can relate past, present, future.Past: many electoral votes Hilary Clinton won picked different VP?Present: total campaign donations Harvard faculty?Future: many electoral votes Democratic candidate president win 2024?","code":""},{"path":"probability.html","id":"working-with-probability-distributions","chapter":"5 Probability","heading":"5.1.4 Working with probability distributions","text":"\nFIGURE 5.3: Bruno de Finetti, Italian statistician wrote famous treatise theory probability began statement “PROBABILITY EXIST.” probability exists subjectively minds.\nprobability distribution always easy work . complex object. , many contexts, don’t really care complexity. , instead providing full probability distribution, often just use summary measure, number two three captures aspects entire distribution relevant matter hand. Let’s explore issues using 538 posterior probability distribution, August 13, 2020, number electoral votes won Joe Biden. tibble 1,000,000 draws distribution:distribution sample draws distribution different things. , squint, sort thing, least purposes. example, want know mean distribution, mean draws fairly good estimate, especially number draws large enough.Recall Chapter 2 can draw randomly specified probability distributions:elements vectors “draws” specified probability distributions. applied situations, tools produce draws rather summary objects. Fortunately, vector draws easy work . Start summary statistics:Calculate 95% interval directly:Approximate 95% interval two ways:case, using mean standard deviation produces 95% interval closer true interval. cases, median scaled median absolute deviation better. Either approximation generally “good enough” work. , need know exact 95% interval, must use quantile().","code":"\ndraws## # A tibble: 1,000,000 x 2\n##       ID electoral_votes\n##    <int>           <int>\n##  1     1             197\n##  2     2             357\n##  3     3             406\n##  4     4             491\n##  5     5             150\n##  6     6             369\n##  7     7             345\n##  8     8             185\n##  9     9             211\n## 10    10             203\n## # … with 999,990 more rows\nrnorm(10)##  [1] -0.061 -0.191  1.073  0.217  1.185 -0.742 -2.412  0.175 -0.152 -0.273\nrunif(10)##  [1] 0.178 0.038 0.911 0.860 0.206 0.330 0.041 0.138 0.853 0.907\nkey_stats <- draws %>% \n  summarize(mn = mean(electoral_votes),\n            md = median(electoral_votes),\n            sd = sd(electoral_votes),\n            mad = mad(electoral_votes))\n\nkey_stats## # A tibble: 1 x 4\n##      mn    md    sd   mad\n##   <dbl> <dbl> <dbl> <dbl>\n## 1  325.   326  86.9  101.\nquantile(draws$electoral_votes, probs = c(0.025, 0.975))## 2.5%  98% \n##  172  483\nc(key_stats$mn - 2 * key_stats$sd, \n  key_stats$mn + 2 * key_stats$sd)## [1] 152 499\nc(key_stats$md - 2 * key_stats$mad, \n  key_stats$md + 2 * key_stats$mad)## [1] 124 528"},{"path":"probability.html","id":"unnormalized-distributions","chapter":"5 Probability","heading":"5.1.5 Unnormalized distributions","text":"Remember probability distributions mathematical objects cover set outcomes, outcome domain mapped probability value 0 1 inclusive sum mappings 1. Sometimes, may see distributions similar probability distributions, y-axis displays raw counts instead proportions. Unnormalized distributions probability distributions, easy convert two. simply divide outcome counts y-axis sum outcome counts “normalize” unnormalized distribution. Unnormalized distributions often intermediary step; sometimes handy work counts end.instance, can generate following unnormalized distribution sum rolling two dice.Notice shape distribution empirical probability distribution generated earlier, except y-axis labeled differently.two plots — unnormalized normalized — exact shape. many ways, object. Yet normalization required want work probability distribution.","code":""},{"path":"probability.html","id":"joint-distributions","chapter":"5 Probability","heading":"5.1.6 Joint distributions","text":"Recall \\(\\text{Prob}(\\text{coin})\\) probability distribution result coin toss. includes two parts, probability heads (\\(\\rho_h\\)) probability tails (\\(\\rho_t\\)). univariate distribution one outcome, can heads tails. one outcome, joint distribution.Joint distributions also mathematical objects cover set outcomes, distinct outcome chance occurring 0 1 sum chances must equal 1. key joint distribution measures chance events B occur. notation \\(\\text{Prob}(, B)\\).Let’s say rolling two six-sided dice simultaneously. Die 1 weighted 50% chance rolling 6 10% chance values. Die 2 weighted 50% chance rolling 5 10% chance rolling values. Let’s roll dice 1,000 times. previous examples involving two dice, cared sum results outcomes first versus second die simulation. joint distributions, order matters; instead 11 possible outcomes x-axis distribution plot (ranging 2 12), 36. Furthermore, 2D probability distribution sufficient represent variables involved, joint distribution example displayed using 3D plot.","code":""},{"path":"probability.html","id":"tree-diagrams","chapter":"5 Probability","heading":"5.2 Tree diagrams","text":"","code":""},{"path":"probability.html","id":"independence","chapter":"5 Probability","heading":"5.2.1 Independence","text":"far, learned explore \\(\\text{Prob}()\\), fancy, statistical way saying probability distribution event . Keep mind distinction individual outcome set \\(\\), like probability heads (\\(\\rho_h\\)) entire distribution \\(\\text{Prob}(\\text{coin})\\), includes probability possible outcomes. \\(\\text{Prob}()\\) like \\(\\text{Prob}(\\text{coin})\\) \\(\\text{Prob}(\\text{sum two dice})\\).flipped two coins row, one ? know probability getting heads first coin 1/2. odds getting heads two times row? Let’s take look tree diagram. read diagram left right. left, probability getting heads 0.5 first toss. , tree branches .got heads first time, go top branch. probability getting heads 0.5.got tails first time, go bottom branch. probability getting heads 0.5.Notice regardless get first time flip coin, probability getting heads 0.5 throughout. Coin flips, scenario, independent. result one coin flip impact next coin flip.","code":""},{"path":"probability.html","id":"conditional-probability","chapter":"5 Probability","heading":"5.2.2 Conditional probability","text":"Imagine 60% people community disease. doctor develops test determine random person disease. However, test isn’t 100% accurate. 80% probability correctly returning positive person disease 90% probability correctly returning negative person disease.probability random person disease 0.6. Since person either disease doesn’t (two possibilities), probability person disease \\(1 - 0.6 = 0.4\\).Now tree branches .random person disease, go top branch. probability infected person testing positive 0.8 test 80% sure correctly returning positive person disease.logic, random person disease, go bottom branch. probability person incorrectly testing positive 0.1.decide go top branch random person disease. go bottom branch . called conditional probability. probability testing positive dependent whether person disease.express statistical notation? \\(\\text{Prob}(|B)\\) thing probability given B. \\(\\text{Prob}(|B)\\) essentially means probability know sure value B. Note \\(\\text{Prob}(|B)\\) thing \\(\\text{Prob}(B|)\\).","code":""},{"path":"probability.html","id":"two-models","chapter":"5 Probability","heading":"5.3 Two models","text":"city 100,000 people. true exactly 1% population disease, don’t know people . terms count, means\n1,000 people disease \n100,000 population. test 95% accurate. , disease 95% chance test reports , don’t disease., 1,000 people truly disease — 1,000 1% \n100,000 people city — 950 correctly test positive 50 incorrectly test negative. city also 99,000 people disease,\n4,950 incorrectly test positive 94,050 correctly test negative. means number people test positive disease 950 plus 4,950, equals\n5,900 \n950 disease. simple terms, probability disease given positive test result much lower stated 95% accuracy test.joint empirical distribution test result disease status. Note unnormalized distribution dot represents person city.joint distribution displayed 3D. Instead using “jitter” feature R unstack dots, using 3D plot visualize number dots box. number people correctly test negative city 94,050, far outnumbering categories. 4,950 false positives, 950 true positives, 50 false negatives. can barely see 3D bar coming combinations.section called “Two Models” , person, two possible states world: disease disease. assumption, outcomes. call two possible states world “models,” even though simple models.addition two models, two possible results experiment given person: test positive test negative. , assumption. allow outcome. later sections, look complex situations consider two models two possible results experiment. meantime, built unnormalized joint distribution models results. key point! Look back earlier chapter discussed unnormalized distributions joint distributions.Getting back figure, difference distributions? can useful data analysis?want analyze plots looking different slices. instance, let’s say tested positive disease. Since test always accurate, 100% certain . isolate slice test result equals 1 (meaning positive). zoom plot, 950 people tested positive disease 4,950 tested positive disease. case, focusing one slice probability distribution test result positive. two disease outcomes: positive negative. isolating section, looking conditional distribution. Conditional positive test, can visualize likelihood actually disease versus .Stat 110 Animations video really good job explaining similar concept.","code":""},{"path":"probability.html","id":"three-models","chapter":"5 Probability","heading":"5.4 Three models","text":"Imagine friend gives bag two marbles. either two white marbles, two black marbles, one color. Thus, bag contain 0% white marbles, 50% white marbles, 100% white marbles. proportion, \\(p\\), white marbles 0, 0.5, 1.Let’s say take marble bag, record whether ’s black white, return bag. repeat three times, observing number white marbles see three trials. get three whites, two whites, one white, zero whites result trial. Let’s make call Bayes scatterplot . three models (three different proportions white marbles bag) four possible experimental results. Let’s create 3,000 draws joint distribution:Plot joint distribution:3D visualization:y-axes scatterplot 3D visualization labeled “Number White Marbles Bag.” value y-axis model, belief world. instance, model 0, white marbles bag, meaning none marbles pull sample white.Let’s say draw three white marbles. isolate slice result simulation involves three white marbles zero black ones. unnormalized probability distribution.Next, let’s normalize distribution.plot makes sense three marbles draw bag white, pretty good chance black marbles bag. can’t certain! possible draw three white even bag contains one white one black. possible? 10%. However, impossible white marbles bag.","code":"\n# Create the joint distribution of the number of white marbles in the bag\n# (in_bag) and the number of white marbles pulled out in the sample (in_sample),\n# one-by-one. in_bag takes three possible values: 0, 1 and 2, corresponding to\n# zero, one and two white marbles potentially in the bag.\n\njoint_dist <- tibble(in_bag = rep(c(0, 1, 2), 1000)) %>%\n  mutate(in_sample = map_int(in_bag, ~ rbinom(n = 1, \n                                              size = 3, \n                                              p = ./2))) \n\njoint_dist## # A tibble: 3,000 x 2\n##    in_bag in_sample\n##     <dbl>     <int>\n##  1      0         0\n##  2      1         2\n##  3      2         3\n##  4      0         0\n##  5      1         2\n##  6      2         3\n##  7      0         0\n##  8      1         1\n##  9      2         3\n## 10      0         0\n## # … with 2,990 more rows\n# The distribution is unnormalized. All we see is the number of simulations in\n# each \"bucket.\"\n\njoint_dist %>%\n  ggplot(aes(x = in_sample, y = in_bag)) +\n    geom_jitter(alpha = 0.5) +\n    labs(title = \"Black and White Marbles\",\n         subtitle = \"More white marbles in bag mean more white marbles selected\",\n         x = \"White Marbles Selected\",\n         y = \"White Marbles in the Bag\") +\n    scale_y_continuous(breaks = c(0, 1, 2)) +\n  theme_classic()\n# The key step is the filter. Creating a conditional distribution from a joint\n# distribution is the same thing as filtering that joint distribution for a\n# specific value. A conditional distribution is a \"slice\" of the joint\n# distribution, and we take that slice with filter().\n\njoint_dist %>% \n  filter(in_sample == 3) %>% \n  ggplot(aes(in_bag)) +\n    geom_histogram(binwidth = 0.25, color = \"white\") +\n    labs(title = \"Unnormalized Conditional Distribution\",\n         subtitle = \"Number of white marbles in bag given that three were selected in the sample\",\n         x = \"Number of White Marbles in the Bag\",\n         y = \"Count\") +\n    scale_x_continuous(breaks = seq(1, 2)) +\n    theme_classic()\njoint_dist %>% \n  filter(in_sample == 3) %>% \n  ggplot(aes(in_bag)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))), \n                   binwidth = 0.25, \n                   color = \"white\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Number of white marbles in bag given that three were selected in the sample\",\n         x = \"Number of White Marbles in the Bag\",\n         y = \"Probability\") +\n    scale_x_continuous(breaks = c(1, 2)) +\n    scale_y_continuous(labels = \n                         scales::percent_format(accuracy = 1)) +\n    theme_classic()"},{"path":"probability.html","id":"n-models","chapter":"5 Probability","heading":"5.5 N models","text":"Assume coin \\(\\rho_h\\). guarantee 11 possible values \\(\\rho_h\\): \\(0, 0.1, 0.2, ..., 0.9, 1\\). words, 11 possible models, 11 things might true world. just like situations previously discussed, except models consider.going run experiment flip coin 20 times record number heads. result tell value \\(\\rho_h\\)? Ultimately, want calculate posterior distribution \\(\\rho_h\\), written p(\\(\\rho_h\\)).start, useful consider things might happen , example, \\(\\rho_h = 0.4\\). Fortunately, R functions simulating random variables makes easy.First, notice many different things can happen! Even know, certain, \\(\\rho_h = 0.4\\), many outcomes possible. Life remarkably random. Second, likely result experiment 8 heads, expect. Third, transformed raw counts many times total appeared probability distribution. Sometimes, however, convenient just keep track raw counts. shape figure cases.Either way, figures show happened model — \\(\\rho_h = 0.4\\) — true.can thing 11 possible models, calculating happen true. somewhat counterfactual since one can true. Yet assumption allow us create joint distribution models might true data experiment might generate. Let’s simplify p(models, data), although keep precise meaning mind.3D version plot.diagrams, see 11 models 21 outcomes. don’t really care p(\\(models\\), \\(data\\)), joint distribution models--might--true data---experiment-might-generate. Instead, want estimate \\(p\\), unknown parameter determines probability coin come heads tossed. joint distribution alone can’t tell us . created joint distribution even conducted experiment. creation, tool use make inferences. Instead, want conditional distribution, p(\\(models\\) | \\(data = 8\\)). results experiment. results tell us probability distribution \\(p\\)?answer question, simply take vertical slice joint distribution point x-axis corresponding results experiment.animation shows want joint distributions. take slice (red one), isolate , rotate look conditional distribution, normalize (change values along current z-axis counts probabilities), observe resulting posterior.part joint distribution care . aren’t interested object looks like , example, number heads 11. portion irrelevant observed 8 heads, 11. using filter function simulation tibble created, can conclude total 465 times simulation 8 heads observed.expect, time 8 coin tosses came heads, value \\(p\\) 0.4. , numerous occasions, . quite common value \\(p\\) like 0.3 0.5 generate 8 heads. Consider:Yet distribution raw counts. unnormalized density. turn proper probability density (.e., one sum probabilities across possible outcomes sums one) just divide everything total number observations.likely value \\(\\rho_h\\) still 0.4, . , much likely \\(p\\) either 0.3 0.5. 8% chance \\(\\rho_h \\ge 0.6\\).might wondering: use model? Well, let’s say toss coin 20 times get 8 heads . Given result, probability future samples 20 flips result 10 heads?three main ways go solving problem simulations.first wrong way assuming \\(\\rho_h\\) certain observed 8 heads 20 tosses. conclude 8/20 gives us 0.4. big problem ignoring uncertainty estimating \\(\\rho_h\\). lead us following code.second method involves sampling whole posterior distribution vector previously created. lead following correct code.Third way sample actual distribution, small dataset just rows, includes \\(\\rho_h\\) probability \\(\\rho_h\\). also gives correct answer.may noticed, calculated value using first method, believe getting 10 heads less likely really . run casino based assumptions, lose money. important careful assumptions making. tossed coin 20 times got 8 heads. However, wrong assume \\(\\rho_h\\) = 0.4 just based result.","code":"\nsims <- 10000000\n\nodds <- tibble(sim_ID = 1:sims) %>%\n  mutate(heads = map_int(sim_ID, ~ rbinom(n = 1, size = 20, p = .4))) %>% \n  mutate(result = ifelse(heads >= 10, TRUE, FALSE)) %>% \n  summarize(success = sum(result)/sims)\n\nodds## # A tibble: 1 x 1\n##   success\n##     <dbl>\n## 1   0.245\np_draws <- tibble(p = rep(seq(0, 1, 0.1), 1000)) %>%\n  mutate(heads = map_int(p, ~ rbinom(n = 1, size = 20, p = .))) %>%\n  filter(heads == 8)\n  \nodds <- tibble(p = sample(p_draws$p, size = sims, replace = TRUE)) %>%\n  mutate(heads = map_int(p, ~ rbinom(n = 1, size = 20, p = .))) %>% \n  mutate(result = ifelse(heads >= 10, TRUE, FALSE)) %>% \n  summarize(success = sum(result)/sims)\n\nodds## # A tibble: 1 x 1\n##   success\n##     <dbl>\n## 1   0.328\np_posterior <- x %>% \n  filter(heads == 8) %>% \n  group_by(p) %>% \n  summarize(total = n(), .groups = \"drop\") %>%\n  mutate(probs = total/sum(total))\n\nodds <- tibble(p = sample(p_posterior$p, \n                          size = sims, \n                          prob = p_posterior$probs, \n                          replace = TRUE)) %>%\n  mutate(heads = map_int(p, ~ rbinom(n = 1, \n                                     size = 20, \n                                     p = .))) %>% \n  mutate(result = ifelse(heads >= 10, \n                         TRUE, \n                         FALSE)) %>% \n  summarize(success = sum(result)/sims)\n\nodds## # A tibble: 1 x 1\n##   success\n##     <dbl>\n## 1   0.320"},{"path":"probability.html","id":"cardinal-virtues","chapter":"5 Probability","heading":"5.6 Cardinal Virtues","text":"four Cardinal Virtues Wisdom, Justice, Courage, Temperance. data science , ultimately, moral act, use virtues guide work. Wisdom highlights importance exploring data. Given questions seek answer, data valid? representative? ethical proceed? Justice focuses Preceptor Table mathematical structure model. virtue Courage allows us go words math code, hardest step data science process. Temperance guides us use model created answer questions began . modest claims make, wary naive attempts “test” .","code":""},{"path":"probability.html","id":"wisdom","chapter":"5 Probability","heading":"5.6.1 Wisdom","text":"\nFIGURE 5.4: Wisdom.\nWisdom encompasses four topics: data, validity, , population ethics.First, look data perform exploratory data analysis, EDA. can never look data much.Second, confirm data accurately capturing concepts care . Gelman, Hill, Vehtari (2020) write:important data analyzing map research question trying answer. sounds obvious often overlooked ignored can inconvenient. Optimally, means outcome measure accurately reflect phenomenon interest, model include relevant predictors, model generalize cases applied.example, regard outcome variable, model incomes necessarily tell patterns total assets. model test scores necessarily tell child intelligence cognitive development. …sample representative mothers children may appropriate making inferences mothers children participate Temporary Assistance Needy Families program. … Similarly, results regarding diet exercise obtained study performed patients risk heart disease may generally applicable generally healthy individuals.want connection problem face data . desire poor replacement substance. data relevant, data science useless.Third, key concept “population,” largely equivalent rows ideal Preceptor Table, discussed Chapter 4. Gelman, Hill, Vehtari (2020) write:regression model fit data used make inferences larger population, hence implicit assumption interpreting regression coefficients sample representative population.precise, key assumption data representative distribution outcome \\(y\\) given predictors \\(x_1\\), \\(x_2\\), …, included model. example, regression earnings height sex, acceptable women tall people overrepresented sample, compared general population, problems arise sample includes many rich people. Selection x interfere inferences regression model, selection y . one motivation include predictors regressions, allow assumption representativeness, conditional X, reasonable.Representativeness concern even data conventionally considered sample. example, forecasting model Section 7.1 contains data 16 consecutive elections, sample anything, one purpose model predict future elections. Using regression fit past data predict next election mathematically equivalent considering observed data new outcome random sample hypothetical superpopulation. , precise, like treating errors random sample normal error distribution. another example, regression model fit data 50 states, interested making predictions hypothetical 51st state, may well interested hypothetical outcome 50 states future year. long generalization involved, ideas statistical sampling arise, need think representativeness sample implicit explicit population inferences drawn. related idea generative modeling, discussed Section 4.1.Validity columns tibble. Representativeness rows.Fourth, even can make model, always ask : ? Ethics matter.","code":""},{"path":"probability.html","id":"justice","chapter":"5 Probability","heading":"5.6.2 Justice","text":"\nFIGURE 5.5: Justice.\nthree key aspects Justice: Preceptor Table, predictive versus causal models, mathematical formula.","code":""},{"path":"probability.html","id":"preceptor-table","chapter":"5 Probability","heading":"5.6.2.1 Preceptor Table","text":"Precision matters. know want know? Creating Preceptor Table forces clear trying accomplish problems face along way.Preceptor Table table rows columns data (reasonably) like . Preceptor Table questions marks — describe ideal Preceptor Table — calculate number want without need inference.First, infinite Preceptor Table well described Chapter 4. never use , useful understand , assumptions must make work something simpler.Second, ideal Preceptor Table Preceptor Table question marks, reasonable number rows columns. Conceptually, heart analysis.Third, actual Preceptor Table Preceptor Table annoying question marks real world saddles us .central problem inference fill question marks actual Preceptor Table.Note concept Preceptor Table subtle first appears. example, consider problem using party predict income trains data. Naively, might look like don’t question marks. 115 rows data, party income. Preceptor Table really need 115 rows trying draw inferences people sample 115. new person shows , tells us party, asks us guess income? ideal Preceptor Table include row, data party present data income question mark.","code":""},{"path":"probability.html","id":"predictive-versus-causal-models","chapter":"5 Probability","heading":"5.6.2.2 Predictive versus causal models","text":"modeling (just) prediction (also) modeling causation? Predictive models care nothing causation. Causal models often also concerned prediction, means measuring quality model.Every model predictive, sense , give new data — drawn stable distribution — can create predictive forecast. subset models causal, meaning , given individual, can change value one input figure new output , , calculate causal effect.prediction, care forecasting Y given X -yet-unseen data — implying Preceptor Table rows know X Y. notion “manipulation” models. don’t pretend , Joe, turn variable X value 5 value 30 just turning knob , , cause Joe’s value Y change 17 23. can compare two people (two groups people), one X equal 5 one X equal 30, see differ Y. basic assumption predictive models one possible Y Joe. , assumption, two possible values Y, one X equal 5 another X equals 30. Preceptor Table single column Y.causal inference, however, can consider case Joe \\(X = 5\\) Joe \\(X = 30\\). mathematical model can used. models can used prediction, estimating value Y yet-unseen observation values X. , case, instead single column Preceptor Table Y, least two (possibly many) columns, one potential outcomes consideration.difference prediction models causal models former one column Y latter one.related issue different types Preceptor Tables. Preceptor Tables, useful, think, clear description different types.","code":""},{"path":"probability.html","id":"mathematical-model","chapter":"5 Probability","heading":"5.6.2.3 Mathematical Model","text":"Justice requires (simple) math. Consider model coin-tossing:\\[ T_i  \\sim B(p_H, n = 20) \\]\ntotal number \\(T\\) Heads experiment \\(\\) 20 flips single coin, \\(T_i\\), distributed binomial \\(n = 20\\) unknown probability \\(\\rho_h\\) coin coming Heads.Note:cheat simplification! Bayesians specified full Bayesian machinery. really need priors unknown parameter \\(\\rho_h\\) well. complex introductory class, wave hands, accept default sesinvle parameters built functions use point readers advanced books, like Gelman, Hill, Vehtari (2020).cheat simplification! Bayesians specified full Bayesian machinery. really need priors unknown parameter \\(\\rho_h\\) well. complex introductory class, wave hands, accept default sesinvle parameters built functions use point readers advanced books, like Gelman, Hill, Vehtari (2020).Defining \\(\\rho_h\\) “probability coin comes Heads” bit fudge. calculate hand compare tools produce, won’t . Instead, calcualted value closer zero. ? \\(\\rho_h\\) really “long-run percentage time coin comes Heads.” just percentage experiment.Defining \\(\\rho_h\\) “probability coin comes Heads” bit fudge. calculate hand compare tools produce, won’t . Instead, calcualted value closer zero. ? \\(\\rho_h\\) really “long-run percentage time coin comes Heads.” just percentage experiment.simple case, fortunate parameter \\(\\rho_h\\) (mostly!) simple analog real world quantity. Much time, parameters easy interpret. complex model, especially one interaction terms, focus less parameters actual predictions.","code":""},{"path":"probability.html","id":"courage","chapter":"5 Probability","heading":"5.6.3 Courage","text":"\nFIGURE 5.6: Courage.\nthree languages data science words, math code, important code. need explain structure model using three languages, need Courage implement model code.Code allows us “fit” model estimating values unknown parameters, like \\(\\rho_h\\). Sadly, can never know true values parameters. , like good data scientists, can express uncertain knowledge form posterior probability distributions. distributions, can compare actual values outcome variable “fitted” “predicted” results model. can examine “residuals,” difference fitted actual values.Every outcome sum two parts: model model:\\[outcome = model + \\ \\ \\ \\ \\ model\\]doesn’t matter outcome . result coin flip, weight person, GDP country. Whatever outcome considering always made two parts. first model created. second stuff — blooming buzzing complexity real world — part model.uncertainty driven ignorance \\(\\rho_h\\).parameter something exist real world. (, , data.) Instead, parameter mental abstraction, building block use help us accomplish true goal: replace least questions marks Preceptor Table. Since parameters mental abstractions, always uncertain value, however much data might collect., often , uncertainty comes forces , assumption, model. example, coin fair, expect \\(T_i\\) equal 10. , often, different, even correct \\(\\rho_h\\) equals exactly 0.5. randomness intrinsic fallen world.","code":""},{"path":"probability.html","id":"temperance","chapter":"5 Probability","heading":"5.6.4 Temperance","text":"\nFIGURE 5.7: Temperance.\nimportant concepts statistics data science “Data Generating Mechanism.” data — data collect see — generated complexity confusion world. God’s mechanism brought data us. job build model process, create, computer, mechanism generates fake data consistent data see. DGM, can answer question might . particular, DGM, provide predictions data seen estimates uncertainty associated predictions. Courage helped us create DGM. Temperance guide us use.created (checked) model, now use model answer questions. Models made use, beauty. world confronts us. Make decisions must. decisions better ones use high quality models help make .Sadly, models never good like . First, world intrinsically uncertain.\nFIGURE 5.8: Donald Rumsfeld.\nknown knowns. things know know. also know known unknowns. say, know things know. also unknown unknowns, ones know know. – Donald RumsfeldWhat really care data haven’t seen yet, mostly data tomorrow. world changes, always ? doesn’t change much, maybe OK. changes lot, good model ? general, world changes . means forecasts uncertain naive use model might suggest.\nFIGURE 5.9: Three Card Monte.\nmean? Well imagine crowd playing Three Card Monte streets New York. guy running game runs demo shows cards make confident. earn money making overconfident persuading bet. odds may seem good demo round, doesn’t actually say anything likely happen real, high stakes game begins. person running game many simulations, making “victim” forget actually make conclusions odds winning. variables simply know even put lot effort making posterior probability distributions. People can using slight hand, instance.need patience order study understand unknown unknowns data. Patience also important analyze “realism” models. created mathematical probability distribution presidential elections, instance, assumed Democratic candidate 50% chance winning vote electoral college. comparing mathematical model empirical cases, however, recognize mathematical model unlikely true. mathematical model suggested getting fewer 100 votes next impossible, many past Democratic candidates empirical distribution received less 100 electoral votes.","code":""},{"path":"probability.html","id":"summary-5","chapter":"5 Probability","heading":"5.7 Summary","text":"Throughout chapter, spent time going examples conditional distributions. However, ’s worth noting probability distributions conditional something. Even simple examples, flipping coin multiple times, assuming probability getting heads versus tails change tosses.also discussed difference empirical, mathematical, posterior probability distributions. Even though developed heuristics better understand distributions, every time make claim world, based beliefs - think world. wrong. beliefs can differ. Two reasonable people can conflicting beliefs fairness die.useful understand three types distributions concept conditional distributions, almost every probability distribution conditional posterior. can leave words future discussions, generally book. implicit.keen learn probability, video featuring Professor Gary King. great way review concepts covered chapter, albeit higher level mathematics.","code":""},{"path":"one-parameter.html","id":"one-parameter","chapter":"6 One Parameter","heading":"6 One Parameter","text":"scene Hunger Games, dystopian novel children selected via lottery fight death. basic elements event, called “Reaping,” :children ages 12+ entered lottery.children ages 12+ entered lottery.Children aged 12 entered , children aged 13 entered twice, children aged 14 entered three times, etc.Children aged 12 entered , children aged 13 entered twice, children aged 14 entered three times, etc.Families may enter names children required exchange food.Families may enter names children required exchange food.One boy one girl selected year tributes represent district battle death.One boy one girl selected year tributes represent district battle death.Children selected urn may volunteer tribute.Children selected urn may volunteer tribute.scene , Primrose Everdeen selected urn. twelve year old, name entered . Though know total number names, know poor families (make majority Everdeen’s district) able enter times exchange food. Therefore, can reasonably assume children, including Primrose’s sister, entered many times required. , , Primrose misfortune selected? , refer henceforth, sampled?explore sampling, come understand , unlikely, anomalies like Primrose Everdeen certainly possible. Let’s get started!\nFIGURE 6.1: Mr. DeVito correct: sampling badass.\nLast chapter, learned probability, act quantifying uncertainty. chapter, learn sampling, beginning journey toward inference. sample, take portion total population attempt draw conclusion portion, conclusion can generalize entire population.Observe urn Figure 6.2. certain number red certain number white beads equal size. appears urn mixed beforehand, seem coherent pattern spatial distribution red white beads.Let’s now ask , proportion urn’s beads red?\nFIGURE 6.2: urn red white beads.\nOne way answer question perform exhaustive count: remove bead individually, count number red beads number white beads, divide number red beads total number beads. However, long tedious process. Therefore, use sampling! Consider two questions:get 17 red beads random sample size 50 taken urn 2,400 (white red) beads, many red beads urn?probability, using urn, draw 8 red beads use shovel size 20?always, need tidyverse package.","code":"\nlibrary(tidyverse)"},{"path":"one-parameter.html","id":"sampling-activity","chapter":"6 One Parameter","heading":"6.1 Real sampling activity","text":"\nFIGURE 6.3: urn red white beads.\n","code":""},{"path":"one-parameter.html","id":"using-the-shovel-method-once","chapter":"6 One Parameter","heading":"6.1.1 Using the shovel method once","text":"Instead performing exhaustive count, let’s insert shovel urn seen Figure 6.2. Using shovel, let’s remove \\(5 \\cdot 10 = 50\\) beads, seen Figure 6.3. , taking sample total population beads.\nFIGURE 6.4: Inserting shovel urn.\n\nFIGURE 6.5: Removing 50 beads urn.\nObserve 17 50 sampled beads red thus 17/50 = 0.34 = 34% shovel’s beads red. can view proportion beads red shovel guess proportion beads red entire urn. exact exhaustive count beads urn, guess 34% took much less time energy make.Recall \\(p\\) true value proportion red beads. one \\(p\\). guesses proportion red beads known \\(\\hat{p}\\), \\(\\hat{p}\\) estimated value \\(p\\) comes taking sample. can infinite number \\(\\hat{p}\\).Imagine started activity beginning, replacing 50 beads back urn starting . remove exactly 17 red beads? Maybe?repeated activity many times? guess proportion urn’s beads red, \\(\\hat{p}\\), exactly 34% every time? Surely .Let’s repeat exercise help 33 groups friends understand value varies across 33 independent trials.","code":""},{"path":"one-parameter.html","id":"student-shovels","chapter":"6 One Parameter","heading":"6.1.2 Using the shovel 33 times","text":"33 groups friends following:Use shovel remove 50 beads .Count number red beads compute proportion 50 beads red.Return beads urn.Mix contents urn let previous group’s results influence next group’s.33 groups friends make note proportion red beads sample collected. group marks proportion 50 beads red appropriate bin hand-drawn histogram seen .\nFIGURE 6.6: Constructing histogram proportions.\nHistograms allow us visualize distribution numerical variable. particular, center values falls values vary. partially completed histogram first 10 33 groups friends’ results can seen figure .\nFIGURE 6.7: Hand-drawn histogram first 10 33 proportions.\nObserve following details histogram:low end, one group removed 50 beads urn proportion red 0.20 0.25.high end, another group removed 50 beads urn proportion 0.45 0.5 red.However, frequently occurring proportions 0.30 0.35 red, right middle distribution.distribution somewhat bell-shaped.tactile_sample_urn saves results 33 groups friends.group, given names, number red_beads obtained, corresponding proportion 50 beads red, called prop_red. also ID variable gives 33 groups unique identifier. row can viewed one instance replicated activity: using shovel remove 50 beads computing proportion beads red.Let’s visualize distribution 33 proportions using geom_histogram() binwidth = 0.05. computerized complete version partially completed hand-drawn histogram saw earlier. Setting boundary = 0.4 indicates want binning scheme one bins’ boundary 0.4. color = \"white\" modifies color boundary visual clarity.","code":"## # A tibble: 33 x 4\n##    group         red_beads prop_red    ID\n##    <chr>             <dbl>    <dbl> <int>\n##  1 Mal, Francis         17     0.34     1\n##  2 Nam, Joshua          19     0.38     2\n##  3 Mark, Ramses         21     0.42     3\n##  4 Maeve, Josh          18     0.36     4\n##  5 Morgan, Emily        21     0.42     5\n##  6 Ace, Chris           18     0.36     6\n##  7 Mia, James           15     0.3      7\n##  8 Griffin, Mary        18     0.36     8\n##  9 Yuki, Harry          21     0.42     9\n## 10 Frank, Clara         21     0.42    10\n## # … with 23 more rows\ntactile_sample_urn %>%\n  ggplot(aes(x = prop_red)) +\n  geom_histogram(binwidth = 0.05, \n                 boundary = 0.4, \n                 color = \"white\") +\n  labs(x = expression(paste(\"Proportion of 50 beads that were red \", hat(p))),\n       y = \"Count\",\n       title = \"Proportions Red in 33 Samples\") "},{"path":"one-parameter.html","id":"what-did-we-just-do","chapter":"6 One Parameter","heading":"6.1.3 What did we just do?","text":"just demonstrated activity statistical concept sampling. want know proportion urn’s beads red. Performing exhaustive count red white beads time-consuming. Therefore, extracted sample 50 beads using shovel. Using sample 50 beads, estimated proportion urn’s beads red 34%.Moreover, mixed beads use shovel, samples randomly drawn. sample drawn random, samples different . samples different , obtained different proportions red observed previous histogram. known concept sampling variation.Section 6.2, ’ll mimic hands-sampling activity just performed computer. allow us repeat sampling exercise much 33 times, also allow us use shovels different numbers slots just 50.Afterwards, ’ll present definitions, terminology, notation related sampling Section 6.3. many disciplines, necessary background knowledge may seem confusing first. However, truly understand underlying concepts practice, ’ll able master .tie contents chapter real world, ’ll present example one common uses sampling: polls. Section 6.5.2 ’ll look particular case study: 2013 poll U.S. President Barack Obama’s popularity among young Americans, conducted Kennedy School’s Institute Politics Harvard University.","code":""},{"path":"one-parameter.html","id":"virtual-sampling","chapter":"6 One Parameter","heading":"6.2 Virtual sampling","text":"previous Section 6.1, performed tactile sampling activity. words, used physical urn beads physical shovel. performed sampling activity hand develop firm understanding root ideas behind sampling. section, mimic tactile sampling activity virtual sampling activity using computer. virtual urn virtual shovel.","code":""},{"path":"one-parameter.html","id":"using-the-virtual-shovel-once","chapter":"6 One Parameter","heading":"6.2.1 Using the virtual shovel once","text":"Let’s start performing virtual analog tactile sampling exercise performed Section 6.1. first need virtual analog urn seen beginning chapter. end, create tibble named urn. rows urn correspond exactly contents actual urn.reference, sample_frac() merely re-arranges rows tibble. use set.seed() ensure beads virtual urn always order. ensures figures book match written descriptions.Observe urn 1,000 rows, meaning urn contains\n1,000 equally-sized beads. first variable ID used identification variable; none beads actual urn marked numbers. second variable color indicates whether particular virtual bead red white. View contents urn RStudio’s data viewer scroll contents convince urn indeed virtual analog actual urn.Note , chapter, used variable ID two different ways: first, keep track samples drawn 33 individual teams , second, keep track \n1,000 beads virtual urn. OK! ID means concept cases. need careful, however, working one table ID column. case, rename one columns order avoid conflicts.Now virtual analog urn, need virtual analog shovel seen Figure 6.2 generate virtual samples 50 beads. ’re going use sample_n() list-columns.Let’s take sample 50 beads virtual urn.usual, map functions list-columns powerful confusing.Let’s compute proportion beads virtual sample red. First, add column indicates number red beads.work? R treats TRUE like number 1 FALSE like number 0. summing number TRUEs FALSEs equivalent summing 1’s 0’s. end, operation counts number beads color red.Second, add column total number beads. (already “know” 50, never hurts make code general.)Third, calculate proportion red:Careful readers note numb_red changing example . reason, course, block re-runs shovel exercise, getting (potentially) different number red beads time. wanted number block, need use set.seed() time, always providing seed time.Let’s now perform virtual analog 33 groups students use sampling shovel!","code":"\nset.seed(10)\nurn <- tibble(color = c(rep(\"red\", 400), rep(\"white\", 600))) %>%\n  sample_frac() %>% \n  mutate(ID = 1:1000) %>% \n  select(ID, color)\n\nurn  ## # A tibble: 1,000 x 2\n##       ID color\n##    <int> <chr>\n##  1     1 white\n##  2     2 white\n##  3     3 red  \n##  4     4 red  \n##  5     5 white\n##  6     6 white\n##  7     7 white\n##  8     8 white\n##  9     9 white\n## 10    10 white\n## # … with 990 more rows\ntibble(ID = 1) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50)))## # A tibble: 1 x 2\n##      ID shovel           \n##   <dbl> <list>           \n## 1     1 <tibble [50 × 2]>\ntibble(ID = 1) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\")))## # A tibble: 1 x 3\n##      ID shovel            numb_red\n##   <dbl> <list>               <int>\n## 1     1 <tibble [50 × 2]>       16\ntibble(ID = 1) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color)))## # A tibble: 1 x 4\n##      ID shovel            numb_red numb_beads\n##   <dbl> <list>               <int>      <int>\n## 1     1 <tibble [50 × 2]>       20         50\ntibble(ID = 1) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)## # A tibble: 1 x 5\n##      ID shovel            numb_red numb_beads prop_red\n##   <dbl> <list>               <int>      <int>    <dbl>\n## 1     1 <tibble [50 × 2]>       23         50     0.46"},{"path":"one-parameter.html","id":"using-the-virtual-shovel-33-times","chapter":"6 One Parameter","heading":"6.2.2 Using the virtual shovel 33 times","text":"tactile sampling exercise Section 6.1, 33 groups students use shovel, yielding 33 samples size 50 beads. used 33 samples compute 33 proportions. can perform repeated/replicated sampling virtually just thing 33 times.’ll save results data frame called virtual_samples.Let’s visualize variation histogram Figure 6.8.Note add ‘binwidth = 0.05’ ‘boundary = 0.4’ arguments well. Recall setting ‘boundary = 0.4’ ensures binning scheme one bins’ boundaries 0.4. Since ‘binwidth = 0.05’ also set, create bins boundaries 0.30, 0.35, 0.45, 0.5, etc. well. Recall \\(\\hat{p}\\) equal proportions red samples.Observe occasionally obtained proportions red less 30%. hand, occasionally obtained proportions greater 45%. However, frequently occurring proportions 35% 40%. differences proportions red? sampling variation.Compare virtual results tactile results previous section. Observe histograms somewhat similar center variation, although identical. slight differences due random sampling variation. Furthermore, observe distributions somewhat bell-shaped.\nFIGURE 6.8: Comparing 33 virtual 33 tactile proportions red.\n","code":"\nset.seed(9)\nvirtual_samples <- tibble(ID = 1:33) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)\n\nvirtual_samples## # A tibble: 33 x 5\n##       ID shovel            numb_red numb_beads prop_red\n##    <int> <list>               <int>      <int>    <dbl>\n##  1     1 <tibble [50 × 2]>       21         50     0.42\n##  2     2 <tibble [50 × 2]>       19         50     0.38\n##  3     3 <tibble [50 × 2]>       17         50     0.34\n##  4     4 <tibble [50 × 2]>       15         50     0.3 \n##  5     5 <tibble [50 × 2]>       17         50     0.34\n##  6     6 <tibble [50 × 2]>       21         50     0.42\n##  7     7 <tibble [50 × 2]>        9         50     0.18\n##  8     8 <tibble [50 × 2]>       21         50     0.42\n##  9     9 <tibble [50 × 2]>       16         50     0.32\n## 10    10 <tibble [50 × 2]>       20         50     0.4 \n## # … with 23 more rows\nvirtual_samples %>% \nggplot(aes(x = prop_red)) +\n  geom_histogram(binwidth = 0.05, \n                 boundary = 0.4, \n                 color = \"white\") +\n  labs(x = expression(hat(p)),\n       y = \"Count\",\n       title = \"Distribution of 33 proportions red\") +\n  \n  # Labels the axes in an attractive fashion. Without this code, the axes labels\n  # would include 2.5, which makes no sense because all the values are integers.\n  \n  scale_y_continuous(breaks = seq(2, 10, 2))"},{"path":"one-parameter.html","id":"shovel-1000-times","chapter":"6 One Parameter","heading":"6.2.3 Using the virtual shovel 1,000 times","text":"\nFIGURE 6.9: much sampling, little time.\nNow say want study effects sampling variation 33 samples, larger number samples (1000). two choices point. groups friends manually take 1,000 samples 50 beads compute corresponding 1,000 proportions. However, time-consuming. computers excel: automating long repetitive tasks performing quickly. point, abandon tactile sampling favor virtual sampling.Observe now 1,000 replicates prop_red, proportion 50 beads red. Using code earlier, let’s now visualize distribution 1,000 replicates prop_red histogram Figure 6.10., frequently occurring proportions red beads occur 35% 45%. Every now , obtain proportions low 20% 25%, others high 55% 60%. rare, however. Furthermore, observe now much symmetric smoother bell-shaped distribution. distribution , fact, approximated well normal distribution.","code":"\nset.seed(9)\nvirtual_samples <- tibble(ID = 1:1000) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)\n\nvirtual_samples## # A tibble: 1,000 x 5\n##       ID shovel            numb_red numb_beads prop_red\n##    <int> <list>               <int>      <int>    <dbl>\n##  1     1 <tibble [50 × 2]>       21         50     0.42\n##  2     2 <tibble [50 × 2]>       19         50     0.38\n##  3     3 <tibble [50 × 2]>       17         50     0.34\n##  4     4 <tibble [50 × 2]>       15         50     0.3 \n##  5     5 <tibble [50 × 2]>       17         50     0.34\n##  6     6 <tibble [50 × 2]>       21         50     0.42\n##  7     7 <tibble [50 × 2]>        9         50     0.18\n##  8     8 <tibble [50 × 2]>       21         50     0.42\n##  9     9 <tibble [50 × 2]>       16         50     0.32\n## 10    10 <tibble [50 × 2]>       20         50     0.4 \n## # … with 990 more rows\nvirtual_samples %>% \n  ggplot(aes(x = prop_red)) +\n    geom_histogram(binwidth = 0.01, \n                   boundary = 0.4, \n                   color = \"white\") +\n    labs(x = expression(hat(p)), \n         y = \"Count\",\n         title = \"Distribution of 1,000 proportions red\") "},{"path":"one-parameter.html","id":"different-shovels","chapter":"6 One Parameter","heading":"6.2.4 The effect of different shovel sizes","text":"Instead just one shovel, imagine three choices shovels extract sample beads : shovels size 25, 50, 100.goal estimate proportion urn’s beads red, shovel choose?\nUsing newly developed tools virtual sampling, let’s unpack effect different sample sizes!Virtually use appropriate shovel generate 1,000 samples size beads.Compute resulting 1,000 replicates proportion shovel’s beads red.Visualize distribution 1,000 proportions red using histogram.Start virtually using shovel 1000 times. , compute resulting 1000 replicates proportion red. Finally, plot distribution using histogram.repeat process shovel size 50.Finally, perform process 1000 replicates map histogram using shovel size 100.easy comparison, present three resulting histograms single row matching x y axes Figure 6.12.\nFIGURE 6.10: Comparing distributions proportion red different sample sizes.\nObserve sample size increases, variation 1,000 replicates proportion red decreases. words, sample size increases, fewer differences due sampling variation distribution centers tightly around value. Eyeballing Figure 6.12, three histograms appear center around roughly 40%.can numerically explicit amount variation three sets 1,000 values prop_red using standard deviation. standard deviation summary statistic measures amount variation within numerical variable. three sample sizes, let’s compute standard deviation 1,000 proportions red running following data wrangling code uses sd() summary function. observed earlier, sample size increases, variation decreases. words, less variation 1,000 values proportion red. sample size increases, guesses true proportion urn’s beads red get precise. Therefore, larger shovel, precise result!","code":"\nvirtual_samples_25 <- tibble(ID = 1:1000) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 25))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)\n\n\nvirtual_samples_25 %>%\n  ggplot(aes(x = prop_red)) +\n  geom_histogram(binwidth = 0.05, boundary = 0.4, color = \"white\") +\n  labs(x = \"Proportion of 25 beads that were red\", \n       title = \"25\") \nvirtual_samples_50 <- tibble(ID = 1:1000) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 50))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)\n\n\nvirtual_samples_50  %>%\n  ggplot(aes(x = prop_red)) +\n  geom_histogram(binwidth = 0.05, boundary = 0.4, color = \"white\") +\n  labs(x = \"Proportion of 50 beads that were red\", title = \"50\")  \nvirtual_samples_100 <- tibble(ID = 1:1000) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 100))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)\n\n\nvirtual_samples_100 %>%\n  ggplot(aes(x = prop_red)) +\n  geom_histogram(binwidth = 0.05, boundary = 0.4, color = \"white\") +\n  labs(x = \"Proportion of 100 beads that were red\", title = \"100\") \n# Use bind_rows to combine the data from our three saved virtual sampling\n# objects. Use mutate() in each to clarify the n as the necessary number\n# of samples taken. This makes our data easier to interpret and prevents\n# duplicate elements.\n\nvirtual_prop <- bind_rows(virtual_samples_25 %>% \n                            mutate(n = 25), \n                          virtual_samples_50 %>% \n                            mutate(n = 50), \n                          virtual_samples_100 %>% \n                            mutate(n = 100))\n\n# Plot our new object with the x-axis showing prop_red. Add elements\n# binwidth, boundary, and color for stylistic clarity. Use \n# labs() to add an x-axis label and title. Facet_wrap()  \n# splits the graph into multiple plots by the variable (~n). \n\ncomparing_sampling_distributions <- ggplot(virtual_prop, aes(x = prop_red)) +\n  geom_histogram(binwidth = 0.05, boundary = 0.4, color = \"white\") +\n  labs(x = \"Proportion of shovel's beads that are red\", \n       title = \"Comparing distributions of proportions red for three different shovel sizes.\") +\n  facet_wrap(~ n) \n\n# Inspect our new facetted graph. \n\ncomparing_sampling_distributions\nvirtual_samples_25 %>% \n  summarize(sd = sd(prop_red), .groups = 'drop_last')## # A tibble: 1 x 1\n##       sd\n##    <dbl>\n## 1 0.0987\nvirtual_samples_50 %>% \n  summarize(sd = sd(prop_red), .groups = 'drop_last')## # A tibble: 1 x 1\n##       sd\n##    <dbl>\n## 1 0.0673\nvirtual_samples_100 %>% \n  summarize(sd = sd(prop_red), .groups = 'drop_last')## # A tibble: 1 x 1\n##       sd\n##    <dbl>\n## 1 0.0453"},{"path":"one-parameter.html","id":"functions-are-your-friend","chapter":"6 One Parameter","heading":"6.2.5 Functions are your friend!","text":"Note last section, ran less code three times, different sizes shovel (25, 50, 100). Whenever find writing code three times, write function thing. Let’s look code used shovel size 25 calculated proportion beads red one time:pipe want, creating function relatively easy. Just place code within function definition “pull ” specific variables arguments.See just uses code create virtual_prop_red_25, generalizes . Now can create tibbles , ready plot histograms, three lines code:still isn’t best way. Note three objects need deal , virtual_prop_red_25, virtual_prop_red_50, virtual_prop_red_100. Instead, let’s store results single tibble. can ? using map() create list column!First, ’ll create tibble variable named shovel_size values (25, 50, 100):Next, ’ll create list column called prop_red_results output prop_red().Adding another map_* function let us get standard deviations estimated proportions:Now framework, ’s need limit sizes 25, 50, 100. try integers 1 100? can use code, except ’ll now set shovel_size = 1:100 initializing tibble.Now, standard deviation prop_red shovel sizes 1 100. Let’s plot value see changes shovel gets larger:\nFIGURE 6.11: Comparing standard deviations proportions red 100 different shovels. standard deviation decreases square root shovel size.\nred line represents important statistical concept: standard error (SE). mathematical definition SE purposes standard deviation divided square root sample size. shovel size increases, thus sample size increases, find standard error decreases. confusing right now, fear ! delve explanation next section.\nFIGURE 6.12: poets philosophers confused : don’t worry! won’t problem set.\npower running many analyses using map_* functions list columns: , tell standard deviation decreasing shovel size increased, looking shovel sizes 25, 50, 100, wasn’t clear quickly decreasing.","code":"\ntibble(ID = 1:1000) %>% \n  mutate(shovel = map(ID, ~ sample_n(urn, size = 25))) %>% \n  mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n  mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n  mutate(prop_red = numb_red / numb_beads)## # A tibble: 1,000 x 5\n##       ID shovel            numb_red numb_beads prop_red\n##    <int> <list>               <int>      <int>    <dbl>\n##  1     1 <tibble [25 × 2]>        8         25     0.32\n##  2     2 <tibble [25 × 2]>       12         25     0.48\n##  3     3 <tibble [25 × 2]>       14         25     0.56\n##  4     4 <tibble [25 × 2]>        9         25     0.36\n##  5     5 <tibble [25 × 2]>       11         25     0.44\n##  6     6 <tibble [25 × 2]>       10         25     0.4 \n##  7     7 <tibble [25 × 2]>        9         25     0.36\n##  8     8 <tibble [25 × 2]>       10         25     0.4 \n##  9     9 <tibble [25 × 2]>        6         25     0.24\n## 10    10 <tibble [25 × 2]>        8         25     0.32\n## # … with 990 more rows\nprop_red <- function(x, shovel_size, reps){\n  tibble(ID = 1:reps) %>% \n    mutate(shovel = map(ID, ~ sample_n(x, size = shovel_size))) %>% \n    mutate(numb_red = map_int(shovel, ~ sum(.$color == \"red\"))) %>% \n    mutate(numb_beads = map_int(shovel, ~ length(.$color))) %>% \n    mutate(prop_red = numb_red / numb_beads)\n}\nvirtual_prop_red_25  <- prop_red(x = urn, shovel_size = 25,  reps = 1000)\nvirtual_prop_red_50  <- prop_red(x = urn, shovel_size = 50,  reps = 1000)\nvirtual_prop_red_100 <- prop_red(x = urn, shovel_size = 100, reps = 1000)\ntibble(shovel_size = c(25, 50, 100))## # A tibble: 3 x 1\n##   shovel_size\n##         <dbl>\n## 1          25\n## 2          50\n## 3         100\ntibble(shovel_size = c(25, 50, 100)) %>%\n  mutate(prop_red_results = map(shovel_size,\n                                ~ prop_red(x = urn, \n                                           shovel_size = .x, \n                                           reps = 1000)))## # A tibble: 3 x 2\n##   shovel_size prop_red_results    \n##         <dbl> <list>              \n## 1          25 <tibble [1,000 × 5]>\n## 2          50 <tibble [1,000 × 5]>\n## 3         100 <tibble [1,000 × 5]>\nshovels <- tibble(shovel_size = c(25, 50, 100)) %>%\n  mutate(prop_red_results = map(shovel_size,\n                                ~ prop_red(x = urn, \n                                           shovel_size = .x, \n                                           reps = 1000))) %>% \n  mutate(prop_red_sd = map_dbl(prop_red_results, ~ pull(., prop_red) %>% sd()))\n\nglimpse(shovels)## Rows: 3\n## Columns: 3\n## $ shovel_size      <dbl> 25, 50, 100\n## $ prop_red_results <list> [<tbl_df[1000 x 5]>, <tbl_df[1000 x 5]>, <tbl_df[10…\n## $ prop_red_sd      <dbl> 0.099, 0.070, 0.046\nshovels_100 <- tibble(shovel_size = 1:100) %>%\n  mutate(prop_red_results = map(shovel_size,\n                                ~ prop_red(x = urn, \n                                           shovel_size = .x, \n                                           reps = 1000))) %>% \n  mutate(prop_red_sd = map_dbl(prop_red_results, ~ pull(., prop_red) %>% sd()))\n\nglimpse(shovels_100)## Rows: 100\n## Columns: 3\n## $ shovel_size      <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n## $ prop_red_results <list> [<tbl_df[1000 x 5]>, <tbl_df[1000 x 5]>, <tbl_df[10…\n## $ prop_red_sd      <dbl> 0.483, 0.337, 0.271, 0.250, 0.214, 0.195, 0.191, 0.1…"},{"path":"one-parameter.html","id":"standard-errors","chapter":"6 One Parameter","heading":"6.3 Standard error","text":"","code":""},{"path":"one-parameter.html","id":"terminology-and-notation","chapter":"6 One Parameter","heading":"6.3.1 Terminology and notation","text":"\nFIGURE 6.13: Let Yoda’s wisdom dull pain terminology section.\nLet’s now introduce terminology notation well statistical definitions related sampling. likely want read section times. Keep mind, however, concepts underlying terminology, notation, definitions tie directly concepts underlying tactile virtual sampling activities. simply take time practice master .First, population collection individuals observations interested . also commonly denoted study population. mathematically denote population’s size using upper-case \\(N\\). sampling activities, (study) population collection \\(N\\) = 1000 identically sized red white beads contained urn.Second, population parameter numerical summary quantity population unknown, wish knew. example, quantity mean, population parameter interest population mean. mathematically denoted Greek letter \\(\\mu\\) pronounced “mu.” earlier sampling urn activity, however, since interested proportion urn’s beads red, population parameter population proportion. mathematically denoted letter \\(p\\).Third, census exhaustive enumeration counting \\(N\\) individuals observations population order compute population parameter’s value exactly. sampling activity, correspond counting number beads \\(N\\) = 1000 red computing population proportion \\(p\\) red exactly. number \\(N\\) individuals observations population large case urn, census can quite expensive terms time, energy, money.Fourth, sampling act collecting sample population don’t means perform census. mathematically denote sample’s size using lower case \\(n\\), opposed upper case \\(N\\) denotes population’s size. Typically sample size \\(n\\) much smaller population size \\(N\\). Thus sampling cheaper alternative performing census. sampling activities, used shovels varying slots extract samples size \\(n\\) = 1 \\(n\\) = 100.Fifth, point estimate (AKA sample statistic) summary statistic computed sample estimates unknown population parameter. sampling activities, recall unknown population parameter population proportion mathematically denoted \\(p\\). point estimate sample proportion: proportion shovel’s beads red. words, guess proportion urn’s beads red. mathematically denote sample proportion using \\(\\hat{p}\\). “hat” top \\(p\\) indicates estimate unknown population proportion \\(p\\).Sixth idea representative sampling. sample said representative sample roughly looks like population. words, sample’s characteristics good representation population’s characteristics? sampling activity, samples \\(n\\) beads extracted using shovels representative urn’s \\(N\\) = 1000 beads?Seventh idea generalizability. say sample generalizable results based sample can generalize population. sampling activity, can generalize sample proportion shovels entire urn? Using mathematical notation, akin asking \\(\\hat{p}\\) “good guess” \\(p\\)?Eighth, say biased sampling occurs certain individuals observations population higher chance included sample others. say sampling procedure unbiased every observation population equal chance sampled. red beads much smaller white beads, therefore prone falling shovel, sample biased. sampling activities, since mixed \\(N = 1000\\) beads prior group’s sampling since equally sized beads equal chance sampled, samples unbiased.Ninth lastly, idea random sampling. say sampling procedure random sample randomly population unbiased fashion. sampling activities, correspond sufficiently mixing urn use shovel.\nFIGURE 6.14: Fear look like Spongebob reading section. re-cap right now!\nPhew, ’s lot new terminology notation learn! Let’s put together describe paradigm sampling.general:sampling sample size \\(n\\) done random, thenthe sample unbiased representative population size \\(N\\), thusany result based sample can generalize population, thusthe point estimate “good guess” unknown population parameter, thusinstead performing census, can draw inferences population using sampling.Specific sampling activity:extract sample \\(n=50\\) beads random, words, mix equally sized beads using shovel, thenthe contents shovel unbiased representation contents urn’s 1000 beads, thusany result based shovel’s beads can generalize urn, thusthe sample proportion \\(\\hat{p}\\) \\(n=50\\) beads shovel red “good guess” population proportion \\(p\\) \\(N=1000\\) beads red, thusinstead manually going 1000 beads urn, can infer urn using shovel.Note last word wrote bold: infer. act “inferring” means deduce conclude information evidence reasoning. sampling activities, wanted infer proportion urn’s beads red. Statistical inference “theory, methods, practice forming judgments parameters population reliability statistical relationships, typically basis random sampling.” words, statistical inference act inference via sampling.","code":""},{"path":"one-parameter.html","id":"sampling-definitions","chapter":"6 One Parameter","heading":"6.3.2 Statistical definitions","text":"\nFIGURE 6.15: almost done! Hang .\nNow, important statistical definitions related sampling. refresher 1,000 repeated/replicated virtual samples size \\(n\\) = 25, \\(n\\) = 50, \\(n\\) = 100 Section 6.2, let’s display figure showing difference proportions red according different shovel sizes.\nFIGURE 6.16: Previously seen three distributions sample proportion \\(\\hat{p}\\).\ntypes distributions special name: sampling distributions; visualization displays effect sampling variation distribution point estimate; case, sample proportion \\(\\hat{p}\\). Using sampling distributions, given sample size \\(n\\), can make statements values typically expect.example, observe centers three sampling distributions: roughly centered around \\(0.4 = 40\\%\\). Furthermore, observe somewhat likely observe sample proportions red beads \\(0.2 = 20\\%\\) using shovel 25 slots, almost never observe proportion 20% using shovel 100 slots. Observe also effect sample size sampling variation. sample size \\(n\\) increases 25 50 100, variation sampling distribution decreases thus values cluster tightly around center around 40%. quantified variation using standard deviation sample proportions, seeing standard deviation decreases square root sample size:\nFIGURE 6.17: Previously seen comparing standard deviations proportions red 100 different shovels\nsample size increases, standard deviation proportion red beads decreases. type standard deviation another special name: standard error","code":""},{"path":"one-parameter.html","id":"what-is-a-standard-error","chapter":"6 One Parameter","heading":"6.3.3 What is a “standard error?”","text":"“standard error” (SE) term measures accuracy sample distribution represents population use standard deviation. Specifically, SE used refer standard deviation sample statistic (aka point estimate), mean median. example, “standard error mean” refers standard deviation distribution sample means taken population.statistics, sample mean deviates actual mean population; deviation standard error mean.Many students struggle differentiate standard error standard deviation. relationship standard error standard deviation , given sample size, standard error equals standard deviation divided square root sample size. Accordingly, standard error inversely proportional sample size; larger sample size, smaller standard error statistic approach actual value.data points involved calculations mean, smaller standard error tends . standard error small, data said representative true mean. cases standard error large, data may notable irregularities. Thus, larger sample size = smaller standard error = representative truth.help reinforce concepts, let’s re-display Figure 6.14 using new terminology, notation, definitions relating sampling figure .\nFIGURE 6.18: Three sampling distributions sample proportion \\(\\hat{p}\\).\nFurthermore, let’s display graph standard errors \\(n = 1\\) \\(n = 100\\) using new terminology, notation, definitions relating sampling.\nFIGURE 6.19: Standard errors sample proportion based sample sizes 1 100\nRemember key message last table: sample size \\(n\\) goes , “typical” error point estimate go , quantified standard error.","code":""},{"path":"one-parameter.html","id":"moral-of-the-story","chapter":"6 One Parameter","heading":"6.3.4 The moral of the story","text":"know two pieces information data, ? First, need measure center distribution. include mean median, shows center data points. Second, need measure variability distribution. understand center, must understand different (spread) data points one another. Thus, need measure like sd() MAD. summary statistics necessary understanding distribution. two figures encompass need know distribution? ! , allowed two numbers keep, valuable.mean median good estimate center posterior standard error mad good estimate variability posterior, +/- 2 standard errors covering 95% outcomes.standard error measures accuracy sample distribution compared population using standard deviation. Specifically, standard deviation data points divided square root sample size. , find larger sample sizes = lower standard errors = accurate representative guesses.\nFIGURE 6.20: Real life sampling hard! scenarios, ’s impossible ask entire population opinions.\n","code":""},{"path":"one-parameter.html","id":"answering-the-questions","chapter":"6 One Parameter","heading":"6.4 Answering the questions","text":"Recall question asked beginning chapter:get 17 red beads random sample size 50 taken urn 2,400 (white red) beads, many red beads urn?probability, using urn, draw 8 red beads use shovel size 20?looked number different models accuracy precision. delve primary question, must return discussion distributions: posterior, joint, marginal.","code":""},{"path":"one-parameter.html","id":"joint-distribution","chapter":"6 One Parameter","heading":"6.4.1 Joint distribution","text":"Chapter 5 outlined key intuition behind inference: joint distribution data---might-see---experiment models----considering. take joint distribution, combine actual results experiment, calculate posterior distribution set possible models. words, start \\[p(models, data)\\]add specific results experiment, calculate conditional distribution models, given data seen:\\[p(models | data = results\\ \\ experiment)\\]\nrest just details.can thing sampling problem. Assume know 2,400 beads urn, either red white. experiment involves one time use paddle 50 slots. 2,401 models consideration. might zero red beads one red bead … 2,399 red beads 2,400 red beads. paddle size 50, 51 possible results experiment: zero red beads one red bead . . . 49 red beads 50 red beads. information can calculate joint distribution models considering experiment results might observe. joint distribution, can calculate conditional distribution total number red beads, given however many observed sample.better visualize distribution, take look 3D version plot. Note U shape graph. , mean note peaks areas number red beads paddle 0 50 50 50. due fact , draw 0 red beads sample 50 beads, possibilities number red beads urn consistently close 0. Similarily, sample 50 beads comes 50 red beads, possibilities number red beads urn consistently closer 1000.\nFIGURE 6.21: 3D image joint distribution created Rayshader.\n","code":""},{"path":"one-parameter.html","id":"posterior-distribution","chapter":"6 One Parameter","heading":"6.4.2 Posterior distribution","text":"follow steps now Chapter 5. run experiment. look question – asking posterior probability certain case. case find , using 50 slot shovel, get result 17 red beads. make posterior probability? want:\\[p(models | data = 17)\\]approach works . take “slice” joint distribution number red beads paddle equal 17. normalization, gives us posterior probability number red beads urn. Let’s call tibble data post use post create graphic posterior.visualize 3D plot, see slice figure . things note. First, x-axis extends 600 (rather total 1000) due fact , paddle draws 17/50 = .34 = 34% red beads, almost impossible total number red beads total urn exceed 600. likely number red beads total urn, paddle draws 17/50 red beads, somewhere 290-350 range. signified peak points. probability lower 280 350 less likely number red beads urn, conditional fact paddle drew 17/50 red beads. posterior distribution.value red beads found paddle (0 50), posterior distribution possible values red beads total urn. distribution meant illustrate , though sample gives estimate total proportion red beads entire urn, much variation actual proportion might .Recall Question #1 start Chapter: “get 17 red beads random sample size 50, many red beads entire urn?” answer single number. posterior distribution just : distribution. sample, many different results total number red beads entire urn. Certain totals red beads, like extremes close 0 2,400, essentially impossible due sample value 32%. totals, like 800, occur far frequently totals.means , can provide range possibilities (can estimate possibilities occur frequently), can never say know total number red beads certainty.key issue urn paradigm , unlike real world data science, can technically find total number red beads. just perform exhaustive count ’ve desperately avoiding. real world, “true” solution can never known. require inference, tools like sampling helpful making assumptions world around us.\nFIGURE 6.22: 3D image joint distribution created Rayshader.\n","code":"\nx %>% \n  filter(red_paddle == 17) %>% \n  ggplot(aes(x = red_urn)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 50) + \n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Number of red beads is centered at 816\",\n         x = \"Number of Beads in Urn which Are Red\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format(accuracy = 1)) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"one-parameter.html","id":"using-the-posterior","chapter":"6 One Parameter","heading":"6.4.3 Using the posterior","text":"Now posterior distribution number red beads urn, can use object forecast outcomes, outcomes yet observed. Recall, start Chapter, Question 2: “Conditional answer Question 1, probability, using urn, draw 8 red beads use shovel size 20?”answer 25%. R code bit tricky. begin post tibble, simple way specify posterior distribution number red beads urn. row, can simulate, 100 times, number red beads might draw, conditional assumption red_urn red beads urn. list-column results annoying work , unnest() . identify simulations result 8 red beads drawn.can simply take mean values positive results different rows posterior radically different probabilities true. need weighted mean, weights correspond probability number red beads urn , indeed, equal red_urn post.","code":"\npost <- x %>% \n  filter(red_paddle == 17) %>% \n  group_by(red_urn) %>% \n  summarize(total = n(), .groups = \"drop\") %>%\n  mutate(probs = total/sum(total)) %>% \n  select(-total)\n\n\npost %>% \n  mutate(new_reds = map(red_urn, \n                            ~ rbinom(n = 100, \n                                     size = 20,\n                                     prob = ./1000))) %>% \n  unnest(new_reds) %>% \n  mutate(res = ifelse(new_reds > 8, TRUE, FALSE)) %>% \n  summarise(final = weighted.mean(res, probs))## # A tibble: 1 x 1\n##   final\n##   <dbl>\n## 1 0.252"},{"path":"one-parameter.html","id":"discussion","chapter":"6 One Parameter","heading":"6.5 Discussion","text":"","code":""},{"path":"one-parameter.html","id":"stan_glm","chapter":"6 One Parameter","heading":"6.5.1 stan_glm()","text":"Instead building joint conditional probability distributions “hand” , can just use stan_glm() **rstanarm* package. now, just walk code quickly. Chapter 7 provide step--step explanation.Assume , , shovel size 50 drawn urn returned 17 red beads 33 white. Create object contains data.shovel tibble two variables: ID red, takes value 1 bead red, value 0 white. Create model, using stan_glm().single function call done work previously: created joint distribution estimated posterior probability distribution, conditional data passed data argument. fit_1 object, just lines code create posterior probability distribution \\(p\\)., less, result got earlier plot, much less work.just easy estimate posterior probability distribution number red beads pulled urn shovel size 20, given information already know composition urn.Recall second question:probability, using urn, draw 8 red beads use shovel size 20?can either eyeball graphic calculate value new_shovel object directly:","code":"\nshovel <- tibble(red = c(rep(1, 17), rep(0, 33))) %>% \n  \n  # `sample_frac()` just re-arranges the rows of `shovel`. Doing so is\n  # aesthetically pleasing but does not matter since the order of the beads in\n  # the shovel is irrelevant to estimating the proportion of red beads in the\n  # urn, given that we assumed that sampling bead X has no impact on whether or\n  # not bead Y ends up in the sample. Such \"independence\" assumptions are almost\n  # universal.\n  \n  sample_frac() %>% \n  mutate(ID = 1:nrow(.)) %>% \n  select(ID, red)\n  \nshovel## # A tibble: 50 x 2\n##       ID   red\n##    <int> <dbl>\n##  1     1     0\n##  2     2     1\n##  3     3     1\n##  4     4     0\n##  5     5     0\n##  6     6     0\n##  7     7     1\n##  8     8     0\n##  9     9     1\n## 10    10     0\n## # … with 40 more rows\nlibrary(rstanarm)\n\nfit_1 <- stan_glm(formula = red ~ 1, \n                  data = shovel,\n                  family = binomial,\n                  refresh = 0,\n                  seed = 2020)\nfit_1 %>% \n  posterior_epred(newdata = tibble(constant = 1)) %>% \n  as_tibble() %>% \n  ggplot(aes(x = `1`,\n             y = after_stat(count/sum(count)))) +\n    geom_histogram(bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Number of red beads is centered at 768\",\n         x = \"TThe Proportion of Red Beads: p\",\n         y = \"Probability\") + \n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()\nnew_shovel <- posterior_predict(fit_1, \n                                newdata = tibble(constant = rep(1, 20))) %>% \n  as_tibble() %>% \n  rowwise() %>% \n  mutate(total = sum(c_across(everything()))) %>% \n  select(total)\nnew_shovel %>% \n  ggplot(aes(total)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   boundary = 1,\n                   binwidth = 1) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Number of red beads in 20-place shovel\",\n         x = \"Number of Red Beads\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format(accuracy = 1)) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()\nsum((new_shovel$total > 8)/ length(new_shovel$total))## [1] 0.25"},{"path":"one-parameter.html","id":"sampling-case-study","chapter":"6 One Parameter","heading":"6.5.2 Case study: Polls","text":"Let’s now switch gears realistic sampling scenario: poll. practice, pollsters take 1,000 repeated samples previous sampling activities, rather take single sample ’s large possible.December 4, 2013, National Public Radio US reported poll President Obama’s approval rating among young Americans aged 18-29 article, “Poll: Support Obama Among Young Americans Eroding.” poll conducted Kennedy School’s Institute Politics Harvard University. quote article:voting large numbers 2008 2012, young Americans souring President Obama.According new Harvard University Institute Politics poll, just 41 percent millennials — adults ages 18-29 — approve Obama’s job performance, lowest-ever standing among group 11-point drop April.Let’s tie elements real life poll new article “tactile” “virtual” urn activity Sections 6.1 6.2 using terminology, notations, definitions learned Section 6.3. ’ll see sampling activity urn idealized version pollsters trying real life.First, (Study) Population \\(N\\) individuals observations interest?Urn: \\(N\\) = 1000 identically sized red white beadsObama poll: \\(N\\) = ? young Americans aged 18-29Second, population parameter?Urn: population proportion \\(p\\) beads urn red.Obama poll: population proportion \\(p\\) young Americans approve Obama’s job performance.Third, census look like?Urn: Manually going \\(N\\) = 1000 beads exactly computing population proportion \\(p\\) beads red.Obama poll: Locating \\(N\\) young Americans asking approve Obama’s job performance. case, don’t even know population size \\(N\\) !Fourth, perform sampling obtain sample size \\(n\\)?Urn: Using shovel \\(n\\) slots.Obama poll: One method get list phone numbers young Americans pick \\(n\\) phone numbers. poll’s case, sample size poll \\(n = 2089\\) young Americans.Fifth, point estimate (AKA sample statistic) unknown population parameter?Urn: sample proportion \\(\\hat{p}\\) beads shovel red.Obama poll: sample proportion \\(\\hat{p}\\) young Americans sample approve Obama’s job performance. poll’s case, \\(\\hat{p} = 0.41 = 41\\%\\), quoted percentage second paragraph article.Sixth, sampling procedure representative?Urn: contents shovel representative contents urn? mixed urn sampling, can feel confident .Obama poll: sample \\(n = 2089\\) young Americans representative young Americans aged 18-29? depends whether sampling random.Seventh, samples generalizable greater population?Urn: sample proportion \\(\\hat{p}\\) shovel’s beads red “good guess” population proportion \\(p\\) urn’s beads red? Given sample representative, answer yes.Obama poll: sample proportion \\(\\hat{p} = 0.41\\) sample young Americans supported Obama “good guess” population proportion \\(p\\) young Americans supported Obama time 2013? words, can confidently say roughly 41% young Americans approved Obama time poll? , depends whether sampling random.Eighth, sampling procedure unbiased? words, observations equal chance included sample?Urn: Since bead equally sized mixed urn using shovel, bead equal chance included sample hence sampling unbiased.Obama poll: young Americans equal chance represented poll? , depends whether sampling random.Ninth lastly, sampling done random?Urn: long mixed urn sufficiently sampling, samples random.Obama poll: sample conducted random? can’t answer question without knowing sampling methodology used Kennedy School’s Institute Politics Harvard University. ’ll discuss end section.words, poll Kennedy School’s Institute Politics Harvard University can thought instance using shovel sample beads urn. Furthermore, another polling company conducted similar poll young Americans roughly time, likely get different estimate 41%. due sampling variation.Let’s now revisit sampling paradigm Subsection 6.3.1:general:sampling sample size \\(n\\) done random, thenthe sample unbiased representative population size \\(N\\), thusany result based sample can generalize population, thusthe point estimate “good guess” unknown population parameter, thusinstead performing census, can infer population using sampling.Specific urn:extract sample \\(n = 50\\) beads random, words, mix equally sized beads using shovel, thenthe contents shovel unbiased representation contents urn’s 1000 beads, thusany result based shovel’s beads can generalize urn, thusthe sample proportion \\(\\hat{p}\\) \\(n = 50\\) beads shovel red “good guess” population proportion \\(p\\) \\(N = 1000\\) beads red, thusinstead manually going 1000 beads urn, can infer urn using shovel.Specific Obama poll:way contacting randomly chosen sample 2089 young Americans polling approval President Obama 2013, thenthese 2089 young Americans unbiased representative sample young Americans 2013, thusany results based sample 2089 young Americans can generalize entire population young Americans 2013, thusthe reported sample approval rating 41% 2089 young Americans good guess true approval rating among young Americans 2013, thusinstead performing expensive census young Americans 2013, can infer young Americans 2013 using polling.can see, critical sample obtained Kennedy School’s Institute Politics Harvard University truly random order infer young Americans’ opinions Obama. sample truly random? ’s hard answer questions without knowing sampling methodology used.example, Kennedy School’s Institute Politics Harvard University conducted poll using mobile phone numbers? People without mobile phones left therefore represented sample. flaw example censoring, exclusion certain datapoints due issue data collection. results incomplete observation increases prediction uncertainty estimand, Obama’s approval rating among young Americans. Ensuring samples random easy sampling urn exercises; however, real life situation like Obama poll, much harder .visualized chapter demonstration famous theorem, mathematically proven truth, called Central Limit Theorem. loosely states sample means based larger larger sample sizes, sampling distribution sample means becomes normally shaped narrow. words, sampling distribution increasingly follows normal distribution variation sampling distributions gets smaller, quantified standard errors.","code":""},{"path":"one-parameter.html","id":"sampling-mechanism","chapter":"6 One Parameter","heading":"6.5.3 Sampling Mechanism","text":"One important aspects sampling sampling mechanism: mechanism sample population. concept related, distinctly different, assignment mechanism learned Chapter 3.assignment mechanism sorts units control experiment groups, sampling mechanism means aquire sample. Assignment mechanisms place urn paradigm since measuring causal relationship assigning beads specific groups.think sampling mechanism : certain beads sampled, others ? completely random?order investigate concept, let’s revisit Preceptor Tables.","code":""},{"path":"one-parameter.html","id":"preceptor-tables-1","chapter":"6 One Parameter","heading":"6.5.3.1 Preceptor Tables","text":"Recall Preceptor Table table rows columns data (reasonably) like . two different types Preceptor Tables applicable urn example: actual ideal.\nFIGURE 6.23: see another Precetor Table section.\nactual Preceptor Table shows actually know. Accordingly, table riddled question marks real world saddles us . ideal Preceptor Table Preceptor Table question marks, reasonable number rows columns. ideal Preceptor Table, need inference; estimand simple matter arithmetic.visualize different Preceptor Tables usefulness us data scientists, let’s revisit urn.case Rubin Causal Model, wish knew values every single unit every possible scenario. analogous ideal table know color identity every single bead. compare previous Preceptor Table, ideal Preceptor Table look like: can create ideal Preceptor Table performing exhaustive census entire urn. Let’s say , tedious process, find true real proportion red beads exactly 37.5%. know color every bead.world, estimand, proportion red beads urn, simple matter arithmetic. However, emphasized , performing exhaustive count easiest way estimate proportion red beads. Real life sampling far complex. process extremely prone error. Despite , people overestimate validity conclusions drawn sampling. stress unknowns sampling, let’s look actual Preceptor Table.Let’s imagine use shovel sample 100 beads urn. taking sample, find 40% sampled beads red. Let’s visualize looking entire urn taken sample. actual Preceptor Table. know colors randomly sampled 100 beads, remaining bead colors missing data! data? Well, take sample 100 beads, color identifications 100 total 1000 beads urn. rest beads sampled say certain whether white red.Something else must consider beads get sampled, others . consequence sampling mechanism. drawing sample using shovel 100 slots, 100 known values. Therefore, shovel (addition mixing urn beforehand) sampling mechanism.Consider : information tell us, specifically, Bead 1? Bead 2? know proportion red beads sample 40%. mean bead 1 precisely 40% chance red? learned Chapter 5, true! uncertainty.can claim certain , 100 beads sampled (total 1000 beads urn), 40% red. making prediction probability one sampled beads red, 40% correct probability. making prediction probability unsampled bead red, answer 40% incorrect, likely extremely incorrect. sample tell us something.","code":""},{"path":"one-parameter.html","id":"precision-versus-accuracy-or-bias-versus-variance","chapter":"6 One Parameter","heading":"6.5.4 Precision versus accuracy (or bias versus variance)","text":"saw previous section sample size \\(n\\) increases, point estimates vary less less concentrated around true population parameter. variation quantified decreasing standard error. words, typical error point estimates decrease. sampling exercise, sample size increased, variation sample proportions \\(\\hat{p}\\) decreased. also known precise estimate.random sampling ensures point estimates accurate, hand large sample size ensures point estimates precise. terms “accuracy” “precision” may sound like mean thing, subtle difference. Accuracy describes “target” estimates , whereas precision describes “consistent” estimates . figure illustrates difference.\nFIGURE 6.24: Comparing accuracy precision.\nNow, ’s obvious best case scenario precise accurate option. However, real life sampling isn’t easy!option use shovel 200 slots, minor magnetic property caused pick slightly red beads 100 slotted shovel? one hand, larger shovel gives us increased precision due larger sample size. , magnetic property gives us decreased accuracy due sampling bias. , often case real world, tradeoff!","code":""},{"path":"one-parameter.html","id":"el-jefes-or-felipes","chapter":"6 One Parameter","heading":"6.5.5 El Jefe’s or Felipe’s?","text":"\nFIGURE 6.25: El Jefe’s, Harvard Square staple, known large portions delicious horchata.\n\nFIGURE 6.26: Felipe’s, another staple, said authentic experience addicting churros.\napply complex example urn, imagine conducting poll gather information whether Harvard students prefer El Jefe’s Taqueria Felipe’s Taqueria. given two options: 1) can conduct poll 50 students walking Lamont Library 2) can conduct poll 300 students walking outside El Jefe’s Taqueria.first scenario provides accurate estimate, since students outside Lamont Library much less likely biased sample. second scenario, however, provides precise estimate due larger sample size. Even though students outside El Jefe’s might patrons, safe assume least patrons, making sample somewhat biased. better option? depends views trade-offs accuracy precision. precision matters, prefer larger sample.","code":""},{"path":"one-parameter.html","id":"summary-6","chapter":"6 One Parameter","heading":"6.6 Summary","text":"chapter, performed tactile virtual sampling exercises infer unknown parameter also presented case study sampling real life polls. case, used sample proportion \\(\\hat{p}\\) estimate population proportion \\(p\\). However, just limited scenarios related proportions. words, can use sampling estimate population parameters using point estimates well.continue journey, recall case Primrose Everdeen represents: matter realistic model , predictions never certain.","code":""},{"path":"two-parameters.html","id":"two-parameters","chapter":"7 Two Parameters","heading":"7 Two Parameters","text":"Chapter 6, learned inference. created joint distribution models consideration data might observed. observed data, went joint distribution conditional distribution possible models given data , fact, observe. conditional distribution, suitably normalized, posterior probability distribution space possible models. distribution, can answer question might (reasonably) ask.pain ass whole process ! professionals actually go steps every time work data science problem? ! Don’t absurd. Instead, professionals use standard tools , automated fashion, take care steps, taking us directly assumptions data posterior:\\[p(models | data = data\\ \\ observed)\\]Even , however, relative likelihood different models important. Models invisible, mental entities physical presence unicorns leprechauns. world , make test predictions. many red beads come urn next time use shovel? People better models make better predictions. matters.addition change tools, two key differences chapter. First, Chapter 6 dealt limited set specific models: 1,001 possible models. procedure used just saw Chapter 5. chapter, hand, continuous parameter. Second, Chapter 6 used models just one parameter: number red beads, can also transform parameter \\(p\\), number red beads divided 2,400. model Chapter 6 binomial, one unknown parameter \\(p\\) models. chapter, two unknown parameters: mean \\(\\mu\\) height US standard deviation, \\(\\sigma\\), normally distributed error term.purpose chapter demonstrate, slowly thoroughly, professionals data science.Data science ultimately moral act, use four Cardinal Virtues — Wisdom, Justice, Courage Temperance — organize approach.","code":""},{"path":"two-parameters.html","id":"wisdom-1","chapter":"7 Two Parameters","heading":"7.1 Wisdom","text":"decision face? reason making models , primarily making models fun, although ! reason face decision. must decide X Y. must choose , B C. must set D specific numeric value. Given decision, make model world help us.textbook, tough avoid “toy problem” trap. real world complex. substantive decision problem includes great deal complexity requires even context. time get level detail now, although see Chapter 12 provides useful case studies. , simplify. going create model height adult men. use model answer four questions:average height men?average height men?probability next man meet taller 180 centimeters?probability next man meet taller 180 centimeters?probability , among next 4 men meet, tallest least 10 cm taller shortest?probability , among next 4 men meet, tallest least 10 cm taller shortest?posterior probability distribution height 3rd tallest man next 100 meet?posterior probability distribution height 3rd tallest man next 100 meet?first fourth questions require full scale posterior probability distribution answer. middle two questions single number answer, first create posterior probability distribution order derive number.starting process, however, need look data .","code":""},{"path":"two-parameters.html","id":"eda-for-nhanes","chapter":"7 Two Parameters","heading":"7.1.1 EDA for nhanes","text":"Let’s look nhanes dataset National Health Nutrition Examination Survey conducted around 2010 Centers Disease Control Prevention covering children adults United States.nhanes data diverse array things like physical attributes, education, sleep. Let’s restrict attention subset, focusing age, gender height.Look random sample data:Notice decimal height column ch7. height <dbl> <int>.Let’s also run glimpse() new data.lookout anything suspicious. NA’s data set? types data columns, .e. age characterized integer instead double? females males?can never look data closely.addition glimpse(), can run skim(), skimr package, calculate summary statistics.TABLE 7.1: Data summaryVariable type: characterVariable type: numericInteresting! 353 missing values height subset data. Just using glimpse() show us . Let’s filter NA’s using drop_na(). delete rows value variable missing. simplicity, let’s consider adults.Plot data. geom_density() smooth version geom_histogram(). geom_density(), y-axis scaled area curve equals 1.can see probable heights genders men generally taller women.Let’s focus subset nhanes data, designed answer questions. , instead using data, let’s just use 50 randomly selected observations. (set.seed() function ensures 50 observations selected every time code run.) Using just 50 observations sets stage discussion coverage Section 7.5.data — sample adult American men 2010 — allow us answer questions, however roughly?Wisdom comes . social sciences, never perfect relationship data question trying answer. Data American males 2010 thing data American males today. data men France Mexico. Moreover, problem hasn’t specified Earth , near. Walking basketball tournament generate different answers walking around Times Square.Yet, data relevant. Right? certainly better nothing. Using -perfect data generally better using data .-perfect data always better? ! problem estimating median height 5th grade girls Tokyo, doubt data relevant. Wisdom recognizes danger using non-relevant data build model mistakenly using model way make situation worse. data won’t help, don’t use data, don’t build model. Better just use common sense experience. find better data.statistical term “population” often relevant . Recall Chapter 6 “population” set units interested .aspect Wisdom ethics. Just can make model mean make model. Models can used evil , possible, evil. Fortunately, hard generate many ethical worries height models. , instead, modeling criminality, ethics become much complex . . .","code":"\nlibrary(tidyverse)\nlibrary(primer.data)\nlibrary(skimr)\nglimpse(nhanes)## Rows: 10,000\n## Columns: 15\n## $ survey         <int> 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, …\n## $ gender         <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"Mal…\n## $ age            <int> 34, 34, 34, 4, 49, 9, 8, 45, 45, 45, 66, 58, 54, 10, 5…\n## $ race           <chr> \"White\", \"White\", \"White\", \"Other\", \"White\", \"White\", …\n## $ education      <fct> High School, High School, High School, NA, Some Colleg…\n## $ hh_income      <fct> 25000-34999, 25000-34999, 25000-34999, 20000-24999, 35…\n## $ weight         <dbl> 87, 87, 87, 17, 87, 30, 35, 76, 76, 76, 68, 78, 75, 39…\n## $ height         <dbl> 165, 165, 165, 105, 168, 133, 131, 167, 167, 167, 170,…\n## $ bmi            <dbl> 32, 32, 32, 15, 31, 17, 21, 27, 27, 27, 24, 24, 26, 19…\n## $ pulse          <int> 70, 70, 70, NA, 86, 82, 72, 62, 62, 62, 60, 62, 76, 80…\n## $ diabetes       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n## $ general_health <int> 3, 3, 3, NA, 3, NA, NA, 4, 4, 4, 4, 4, 2, NA, NA, 3, N…\n## $ depressed      <fct> Several, Several, Several, NA, Several, NA, NA, None, …\n## $ pregnancies    <int> NA, NA, NA, NA, 2, NA, NA, 1, 1, 1, NA, NA, NA, NA, NA…\n## $ sleep          <int> 4, 4, 4, NA, 8, NA, NA, 8, 8, 8, 7, 5, 4, NA, 5, 7, NA…\nnhanes %>% \n  select(age, gender, height)## # A tibble: 10,000 x 3\n##      age gender height\n##    <int> <chr>   <dbl>\n##  1    34 Male     165.\n##  2    34 Male     165.\n##  3    34 Male     165.\n##  4     4 Male     105.\n##  5    49 Female   168.\n##  6     9 Male     133.\n##  7     8 Male     131.\n##  8    45 Female   167.\n##  9    45 Female   167.\n## 10    45 Female   167.\n## # … with 9,990 more rows\nnhanes %>% \n  select(age, gender, height) %>% \n  sample_n(5)## # A tibble: 5 x 3\n##     age gender height\n##   <int> <chr>   <dbl>\n## 1    14 Male     157.\n## 2    21 Male     173.\n## 3    48 Male     152.\n## 4    50 Male     195 \n## 5    31 Female   158.\nnhanes %>% \n  select(age, gender, height) %>% \n  glimpse()## Rows: 10,000\n## Columns: 3\n## $ age    <int> 34, 34, 34, 4, 49, 9, 8, 45, 45, 45, 66, 58, 54, 10, 58, 50, 9…\n## $ gender <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Fem…\n## $ height <dbl> 165, 165, 165, 105, 168, 133, 131, 167, 167, 167, 170, 182, 16…\nnhanes %>% \n  select(age, gender, height) %>% \n  skim()\nch7 <- nhanes %>% \n  select(age, gender, height) %>%\n  filter(age >= 18) %>% \n  drop_na()\nch7 %>%\n  ggplot(aes(x = height, color = gender)) + \n  geom_density() + \n  labs(x = \"Height\",\n       title = \"Height by Gender in NHANES Dataset\")\nch7_all <- nhanes %>%\n  filter(gender == \"Male\", age >= 18) %>%\n  select(height) %>%\n  drop_na() \n\nset.seed(9)\nch7 <- ch7_all %>% \n  sample_n(50)"},{"path":"two-parameters.html","id":"justice-1","chapter":"7 Two Parameters","heading":"7.2 Justice","text":"looked data decided “close enough” questions creating model help us derive better answers, move Justice. mathematical model Preceptor Table two components Justice.Mathematical knowledge least important skill data scientist.However, little mathematical notation make modeling assumptions clear, bring precision approach. case:\\[ y_i =  \\mu + \\epsilon_i \\]\n\\(\\epsilon_i \\sim N(0, \\sigma^2)\\). \\(y_i\\) height male \\(\\). \\(\\mu\\) average height males population. \\(\\epsilon_i\\) “error term,” difference height male \\(\\) average height males. \\(\\epsilon_i\\) , assumption, normally distributed mean 0 standard deviation \\(\\sigma\\).simplest model can construct. Note:model two unknown parameters: \\(\\mu\\) \\(\\sigma\\). can anything else need estimate values parameters. Can ever know exact value? ! Perfection lies God’s R code. , using Bayesian approach similar used Chapters 5 6, able create posterior probability distribution parameter.model wrong, models.model wrong, models.parameter care \\(\\mu\\). parameter substantively meaningful interpretation. meaning \\(\\sigma\\) difficult describe, also don’t particular care value. Parameters like \\(\\sigma\\) context nuisance auxiliary parameters. still estimate posterior distributions, don’t really care posteriors look like.parameter care \\(\\mu\\). parameter substantively meaningful interpretation. meaning \\(\\sigma\\) difficult describe, also don’t particular care value. Parameters like \\(\\sigma\\) context nuisance auxiliary parameters. still estimate posterior distributions, don’t really care posteriors look like.\\(\\mu\\) average height men sample. can calculate directly. 175.61. estimation required! Instead, \\(\\mu\\) average height men population. Recall discussions Chapter 6 population universe people/units/whatever seek draw conclusions. level, seems simple. deeper level, subtle. example, walking around Copenhagen, population really care , order answer three questions, set adult men might run today. population adult men US 2010. close enough? better nothing? case different details matter.\\(\\mu\\) average height men sample. can calculate directly. 175.61. estimation required! Instead, \\(\\mu\\) average height men population. Recall discussions Chapter 6 population universe people/units/whatever seek draw conclusions. level, seems simple. deeper level, subtle. example, walking around Copenhagen, population really care , order answer three questions, set adult men might run today. population adult men US 2010. close enough? better nothing? case different details matter.\\(\\sigma\\) estimate standard deviation errors, .e. variability height accounting mean.\\(\\sigma\\) estimate standard deviation errors, .e. variability height accounting mean.Consider:\\[outcome = model + \\ \\ \\ \\ \\ model\\]\ncase, outcome height individual male. , also called “response,” trying understand /explain /predict. model creation, mixture data parameters, attempt capture underlying structure world generates outcome.difference outcome model? definition, model, blooming buzzing complexity real world. model always incomplete won’t capture everything. Whatever model misses thrown error term.Preceptor Table problem almost identical one saw Chapter 4: Since causal model, one potential outcome — say, one outcome: individual’s height.","code":""},{"path":"two-parameters.html","id":"courage-1","chapter":"7 Two Parameters","heading":"7.3 Courage","text":"data science, deal words, math, code, important code. need Courage create model, take leap faith can make ideas real.","code":""},{"path":"two-parameters.html","id":"stan_glm-1","chapter":"7 Two Parameters","heading":"7.3.0.1 stan_glm","text":"Bayesian models hard create R. rstanarm package provides tools need, importantly function stan_glm().first argument stan_glm() data, case filtered ch7 tibble contains 50 observations. mandatory argument formula want use build model. case, since predictor variables, equation height ~ 1.Details:may take time. Bayesian models, especially ones large amounts data, can take longer might like. Indeed, computational limits main reason Bayesian approaches — , extent, still — little used. creating models, often want use cache = TRUE code chunk option. saves result model don’t recalculate every time knit document.may take time. Bayesian models, especially ones large amounts data, can take longer might like. Indeed, computational limits main reason Bayesian approaches — , extent, still — little used. creating models, often want use cache = TRUE code chunk option. saves result model don’t recalculate every time knit document.data argument, like usage R, input data.data argument, like usage R, input data.don’t set refresh = 0, model puke many lines confusing output. can learn output reading help page stan_glm(). output provides details fitting process runs well diagnostics final result. details beyond scope book.don’t set refresh = 0, model puke many lines confusing output. can learn output reading help page stan_glm(). output provides details fitting process runs well diagnostics final result. details beyond scope book.always assign result call stan_glm() object, . convention, name object often include word “fit” indicate fitted model object.always assign result call stan_glm() object, . convention, name object often include word “fit” indicate fitted model object.direct connection mathematical form model created Justice code use fit model Courage. height ~ 1 code equivalent \\(y_i = \\mu\\).direct connection mathematical form model created Justice code use fit model Courage. height ~ 1 code equivalent \\(y_i = \\mu\\).default value family gaussian, need include call . Justice section, assumption \\(\\epsilon_i \\sim N(0, \\sigma^2)\\) equivalent using gaussian. \\(\\epsilon_i\\) different distribution, need use different family. saw example situation end Chapter 6 performed urn analysis using stan_glm().default value family gaussian, need include call . Justice section, assumption \\(\\epsilon_i \\sim N(0, \\sigma^2)\\) equivalent using gaussian. \\(\\epsilon_i\\) different distribution, need use different family. saw example situation end Chapter 6 performed urn analysis using stan_glm().Although can use standalone function set.seed() order make code reproducible, convenient use seed argument within stan_glm(). Even though fitting process, unavoidably, contains random component, get exact answer set seed = 9 rerun code.Although can use standalone function set.seed() order make code reproducible, convenient use seed argument within stan_glm(). Even though fitting process, unavoidably, contains random component, get exact answer set seed = 9 rerun code.","code":"\nlibrary(rstanarm)\nfit_obj <- stan_glm(data = ch7, \n                    formula = height ~ 1, \n                    family = gaussian, \n                    refresh = 0,\n                    seed = 9)"},{"path":"two-parameters.html","id":"printed-model","chapter":"7 Two Parameters","heading":"7.3.0.1.1 Printed model","text":"several ways examine fitted model. simplest print . Recall just typing x prompt writing print(x).first line telling us model used, case stan_glm().second line tells us model using Gaussian, normal, distribution. discussed distribution Section 2.9.5. typically use default unless working lefthand variable extremely non-normal, e.g., something takes two values like 0/1 TRUE/FALSE. Since height (roughly) normally distributed, Gaussian distribution good choice.third line gives us back formula provided. creating model predicting height constant — just simplest model can create. Formulas R constructed two parts. First, left side tilde (“~” symbol) “response” “dependent” variable, thing trying explain. Since model height, height goes lefthand side. Second, “explanatory” “independent” “predictor” variables righthand side tilde. often many variables , simplest possible model, one, single constant. (number 1 indicates constant. mean think everyone height 1.)fourth fifth lines output tell us 50 observations one predictor (constant). , terminology bit confusing. mean suggest \\(\\mu\\) “constant?” means , although \\(\\mu\\)’s value unknown, fixed. change person person. 1 formula corresponds parameter \\(\\mu\\) mathematical definition model.knew information fit model. R records fit_obj don’t want forget . second half display gives summary parameter values. can look just second half detail argument:see output two parameters model: “(Intercept)” “sigma.” can confusing! Recall thing care \\(\\mu\\), average height population. ideal Preceptor Table — row every adult male population care missing data — \\(\\mu\\) trivial calculate, uncertainty. know named parameter \\(\\mu\\). R sees 1 formula. fields statistics, constant term called “intercept.” , now three things — \\(\\mu\\) (math), 1 (code), “(Intercept)” (output) — refer exact concept. last time terminology confusing.point, stan_glm() — rather print() method objects created stan_glm() — problem. full posteriors \\(\\mu\\) \\(\\sigma\\). simple printed summary. can’t show entire distribution. , best numbers provide? right answer question! , choice provide “Median” posterior “MAD_SD.”Anytime distribution, whether posterior probability otherwise, important single number associated measure location. data? two common choices measure mean median. use median posterior distributions can often quite skewed, making mean less reliable measure.second important number summarizing distribution concerns spread. far data spread around center? common measure used standard deviation. MAD SD, scaled median absolute deviation, another. variable normal distribution, standard deviation MAD SD similar. MAD SD much robust outliers, used . (Note MAD SD measure referred mad till now. measure calculated mad() command R. Terminology confusing, usual.)can also change number digits shown:Now understand meaning Median MAD_SD display, can interpret actual numbers. median intercept, 175.61, median posterior distribution \\(\\mu\\), average height American men 2010. median sigma, 8.55, median posterior distribution true \\(\\sigma\\), can roughly understood variability height men, account estimate \\(\\mu\\).MAD SD parameter measure variability posterior distributions parameter. spread ? Speaking roughly, 95% mass posterior probability distribution located within +/- 2 MAD SDs median. example, 95% confident true value \\(\\mu\\) somewhere 173.88 177.34.","code":"\nfit_obj## stan_glm\n##  family:       gaussian [identity]\n##  formula:      height ~ 1\n##  observations: 50\n##  predictors:   1\n## ------\n##             Median MAD_SD\n## (Intercept) 175.6    1.2 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 8.5    0.9   \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nprint(fit_obj, detail = FALSE)##             Median MAD_SD\n## (Intercept) 175.6    1.2 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 8.5    0.9\nprint(fit_obj, detail = FALSE, digits = 2)##             Median MAD_SD\n## (Intercept) 175.61   1.22\n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 8.55   0.86"},{"path":"two-parameters.html","id":"plotting-the-posterior-distributions","chapter":"7 Two Parameters","heading":"7.3.0.1.2 Plotting the posterior distributions","text":"Instead math heads, can display posterior probability distributions. Pictures speak math mumbles. Fortunately, getting draws posteriors easy:4,000 rows draws estimated posteriors, column. like vectors result calling functions like rnorm() rbinom(). can create plot similar way:Although possible variable names like “(Intercept),” recommended. Avoid weird names! stuck , place backticks. Even better, rename , ., \\(\\sigma\\) usually nuisance parameter. don’t really care value , rarely plot .","code":"\nfit_obj %>% \n  as_tibble()## # A tibble: 4,000 x 2\n##    `(Intercept)` sigma\n##            <dbl> <dbl>\n##  1          175.  8.34\n##  2          175.  8.16\n##  3          174.  8.26\n##  4          174.  8.25\n##  5          173.  9.43\n##  6          175.  9.24\n##  7          174.  8.47\n##  8          174.  8.26\n##  9          177.  8.71\n## 10          173.  9.06\n## # … with 3,990 more rows\nfit_obj %>% \n  as_tibble() %>% \n  rename(mu = `(Intercept)`) %>% \n  ggplot(aes(x = mu)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))), \n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Average height among American adult men in 2010\",\n         x = \"Height in Centimeters\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()\nfit_obj %>% \n  as_tibble() %>% \n  ggplot(aes(x = sigma)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))), \n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Height standard deviation among American adult men in 2010\",\n         x = \"Sigma in Centimeters\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()"},{"path":"two-parameters.html","id":"decomposing-the-outcome","chapter":"7 Two Parameters","heading":"7.3.0.2 Decomposing the outcome","text":"Two important concepts model creation fitted values residuals.fitted value represents model’s best guess true value outcome individual, given information covariates. tricky concept since, , already know actual value . commonly use “hat” notation fitted values. \\(y_i\\) actual height man \\(\\). \\(\\hat{y_i}\\) fitted (predicted modeled) height man \\(\\). height guess know true height. residual, \\(r_i\\), difference outcome (\\(y_i\\)) fitted value \\(\\hat{y_i}\\). definitions lead natural decomposition outcome data:","code":"\nch7 %>% \n  mutate(fitted_value = fitted(fit_obj)) %>% \n  mutate(residual = residuals(fit_obj)) %>% \n  sample_n(5)## # A tibble: 5 x 3\n##   height fitted_value residual\n##    <dbl>        <dbl>    <dbl>\n## 1   172.         176.   -3.91 \n## 2   171.         176.   -4.41 \n## 3   174.         176.   -1.11 \n## 4   175.         176.   -0.311\n## 5   170.         176.   -5.21"},{"path":"two-parameters.html","id":"temperance-1","chapter":"7 Two Parameters","heading":"7.4 Temperance","text":"model. can ? Let’s answer four questions started section.","code":""},{"path":"two-parameters.html","id":"question-1","chapter":"7 Two Parameters","heading":"7.4.1 Question 1","text":"average height men?ideal Preceptor Table, one row every man alive, actual height, calculate number easily. Just take average 3 billion rows! Alas, actual Preceptor Table, vast majority heights missing. Question marks make simple algebra impossible. , unknown number, need estimate posterior probability distribution. Objects created stan_glm() make easy .key function posterior_epred(). two arguments provide object, fitted model object returned stan_glm() , newdata, covariates associated unit (units) want make forecast. (case, newdata can tibble intercept-model make use covariates. don’t really need variable named constant, including harm.) epred posterior_epred() stands expected prediction. words, pick random adult male “expect” height . also call “expected value.”use as_tibble() convert matrix returned posterior_epred(). Converting 4,000 draws posterior probability distribution straightforward.rest Primer filled graphics like one. make dozens . fundamental structure algebra real number. fundamental structure data science posterior probability distribution. need able create interpret .","code":"\nnewobs <- tibble(constant = 1)\n\npe <- posterior_epred(object = fit_obj,\n                      newdata = newobs) %>% \n        as_tibble()\npe %>% \n  ggplot(aes(x = `1`)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"For average adult male height\",\n         x = \"Average Height in Centimeters\",\n         y = \"Probability\",\n         caption = \"Data source: NHANES\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()"},{"path":"two-parameters.html","id":"question-2","chapter":"7 Two Parameters","heading":"7.4.2 Question 2","text":"probability next adult male meet taller 180 centimeters?two fundamentally different kinds unknowns care : expected values (previous question) predicted values. former, interested specific individual. individual value irrelevant. predicted values, care, average, specific person. former, use posterior_epred(). latter, relevant function posterior_predict(). functions return draws posterior probability distribution, unknown number underlies posterior different.Recall mathematics:\\[ y_i =  \\mu + \\epsilon_i \\]expected values averages, can ignore \\(\\epsilon_i\\) term model. expected value \\[\\epsilon_i\\] zero since, assumption, \\(\\epsilon_i \\sim N(0, \\sigma^2)\\). However, can’t ignore \\(\\epsilon_i\\) predicting height single individual., straightforward turn draws posterior probability distribution graphic:Note:posterior individual much wider posterior expected value.posterior individual much wider posterior expected value.Eyeballing, seems like 1 3 chance next man meet, randomly chosen man, taller 180 cm.Eyeballing, seems like 1 3 chance next man meet, randomly chosen man, taller 180 cm.can calculate exact probability manipulating tibble draws directly.can calculate exact probability manipulating tibble draws directly.30% draws posterior probability distribution greater 180 cm, 30% chance next individual taller 180 cm., key conceptual difficulty population. problem actually involves walking around London, wherever, today. data involve America 2010. things! totally different. Knowing whether data “close enough” problem want solve heart Wisdom. Yet decision made start process, decision create model first place. Now created model, look virtue Temperance guidance using model. data never perfect match world face. need temper confidence act humility. forecasts never good naive use model might suggest. Reality surprise us. need take model’s claims family-sized portion salt.","code":"\nnewobs <- tibble(constant = 1)\n\npp <- posterior_predict(object = fit_obj,\n                        newdata = newobs) %>% \n        as_tibble()\n\npp## # A tibble: 4,000 x 1\n##    `1`  \n##    <ppd>\n##  1 174  \n##  2 174  \n##  3 177  \n##  4 164  \n##  5 176  \n##  6 177  \n##  7 170  \n##  8 169  \n##  9 177  \n## 10 175  \n## # … with 3,990 more rows\npp %>% \n  ggplot(aes(x = `1`)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"For the height of a random adult male\",\n         x = \"Height in Centimeters\",\n         y = \"Probability\",\n         caption = \"Data source: NHANES\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()\nsum(pp$`1` > 180)/length(pp$`1`)## [1] 0.32"},{"path":"two-parameters.html","id":"question-3","chapter":"7 Two Parameters","heading":"7.4.3 Question 3","text":"probability , among next 4 men meet, tallest least 10 cm taller shortest?Bayesian models beautiful , via magic simulation, can answer (almost!) question. question four random individuals, need posterior_predict() give us four sets draws four identical posterior probability distributions. Start new newobs:need predict X individuals, need tibble X rows, regardless whether rows otherwise identical.Note need add mutate_all(.numeric) end pipe. caused bug — least awkwardness — whereby variable type provided posterior_predict() ppd rather dbl. Using mutate_all(.numeric) makes column type double. Avoid working columns type ppd. lead heart ache.next step calculate number interest. can , directly, draw height tallest shortest 4 random men. However, drawn 4 random men, can calculate numbers, different .steps serve template much analysis later. often hard create model directly thing want know. easy way create model estimates height difference directly. easy, however, create model allows random draws.Give enough random draws, tibble store , can estimate world.random draws posterior distribution care , graphing posterior probability distribution -old, -old.84% chance , meeting 4 random men, tallest least 10 cm taller shortest. Exact calculation:","code":"\nnewobs <- tibble(constant = rep(1, 4))\n\nnewobs## # A tibble: 4 x 1\n##   constant\n##      <dbl>\n## 1        1\n## 2        1\n## 3        1\n## 4        1\npp <- posterior_predict(object = fit_obj,\n                        newdata = newobs) %>% \n        as_tibble() %>% \n        mutate_all(as.numeric)\npp## # A tibble: 4,000 x 4\n##      `1`   `2`   `3`   `4`\n##    <dbl> <dbl> <dbl> <dbl>\n##  1  169.  187.  174.  173.\n##  2  180.  175.  180.  186.\n##  3  190.  194.  171.  171.\n##  4  172.  179.  185.  175.\n##  5  166.  187.  154.  172.\n##  6  179.  167.  174.  174.\n##  7  173.  177.  180.  179.\n##  8  178.  173.  160.  169.\n##  9  174.  184.  174.  181.\n## 10  170.  166.  172.  165.\n## # … with 3,990 more rows\n# First part of the code as the same as we did above.\n\npp <- posterior_predict(object = fit_obj,\n                        newdata = newobs) %>% \n        as_tibble() %>% \n        mutate_all(as.numeric) %>% \n  \n        # Second part of the code requires some trickery.\n  \n        rowwise() %>% \n        mutate(tallest = max(c_across(everything()))) %>% \n        mutate(shortest = min(c_across(everything()))) %>% \n        mutate(diff = tallest - shortest) \n        \npp        ## # A tibble: 4,000 x 7\n## # Rowwise: \n##      `1`   `2`   `3`   `4` tallest shortest  diff\n##    <dbl> <dbl> <dbl> <dbl>   <dbl>    <dbl> <dbl>\n##  1  185.  177.  180.  173.    185.     173. 11.7 \n##  2  172.  173.  180.  189.    189.     172. 16.8 \n##  3  194.  180.  169.  158.    194.     158. 35.8 \n##  4  165.  168.  175.  178.    178.     165. 13.4 \n##  5  170.  166.  175.  173.    175.     166.  9.42\n##  6  179.  171.  178.  169.    179.     169.  9.42\n##  7  172.  173.  175.  188.    188.     172. 15.5 \n##  8  172.  180.  170.  167.    180.     167. 12.9 \n##  9  172.  169.  172.  187.    187.     169. 18.4 \n## 10  175.  178.  176.  159.    178.     159. 19.0 \n## # … with 3,990 more rows\npp %>% \n  ggplot(aes(x = diff)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Max difference in height among four men\",\n         x = \"Height Difference in Centimeters\",\n         y = \"Probability\",\n         caption = \"Data source: NHANES\") + \n    scale_x_continuous(breaks = seq(0, 50, 10),\n                       labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) \nsum(pp$diff > 10) / length(pp$diff)## [1] 0.84"},{"path":"two-parameters.html","id":"question-4","chapter":"7 Two Parameters","heading":"7.4.4 Question 4","text":"posterior probability distribution height 3rd tallest man next 100 meet?approach work almost question.Explore pp object. 101 columns: one hundred 100 individual heights one column 3rd tallest among . done hard work, plotting easy:","code":"\nnewobs <- tibble(constant = rep(1, 100))\n\npp <- posterior_predict(object = fit_obj,\n                        newdata = newobs) %>% \n  as_tibble() %>% \n  mutate_all(as.numeric) %>% \n  rowwise() %>% \n  mutate(third_tallest = sort(c_across(everything()), \n                              decreasing = TRUE)[3])\npp %>% \n  ggplot(aes(x = third_tallest, y = after_stat(count / sum(count)))) +\n    geom_histogram(bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Height of 3rd tallest from one hundred men\",\n         x = \"Height in Centimeters\",\n         y = \"Probability\",\n         caption = \"Data source: NHANES\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) "},{"path":"two-parameters.html","id":"coverage","chapter":"7 Two Parameters","heading":"7.5 Coverage","text":"now understand use stan_glm() estimate posterior probability distributions. , yet, offered evidence distributions accurate, “work.” importantly, 95% confidence interval really include true value 95% time? technical term “coverage,” derived idea X% confidence interval unknown value include unknown value, “cover” value, X% time. can explore coverage simple simulation.Given randomness, coverage precisely correct luck. key point , 95% time, 95% confidence interval includes true value.","code":"\n# Calculating key values, and giving them useful names, at the top of a block of\n# code is handy.\n\ntrue_value <- mean(ch7_all$height)\n\n# Always run initial versions of the simulation with n = 3. That is enough\n# iterations to make sure that the code is working. Once it is, switch n to a\n# larger number.\n\nn <- 100\n\n# Using set.seed() ensures that you will get the same result when you run this\n# code as we did in writing the book.\n\nset.seed(97)\n\n# Simulations like this demonstrate the power of list-columns and map functions.\n# It is always a good idea to start with a tibble that only includes an ID or\n# counter variable. Then, we add columns to this tibble as we, step-by-step,\n# conduct the simulation.\n\ncov_analysis <- tibble(ID = 1:n) %>% \n  \n  # It is easy to forget both the ~. Note how sample_id is a tibble, not just a\n  # number, as we are used to in tibbles. List-columns can contain almost\n  # anything. The first argument to map() is the thing that we are iterating\n  # over. In this case, ID does not matter since we are not using its value in\n  # the function call to sample_n().\n  \n  mutate(sample_data = map(ID, ~ sample_n(ch7_all, 50))) %>% \n  \n  # \n  \n  mutate(model = map(sample_data, ~ stan_glm(data = ., \n                                             height ~ 1, \n                                             refresh = 0))) %>% \n  \n  mutate(conf_interval = map(model, \n                             ~ posterior_interval(., \n                                                  pars = \"(Intercept)\",\n                                                  prob = 0.95))) %>% \n  mutate(lower = map_dbl(conf_interval, ~ .[1, 1])) %>% \n  mutate(upper = map_dbl(conf_interval, ~ .[1, 2])) %>% \n  mutate(coverage = ifelse(true_value > lower & \n                             true_value < upper,\n                           TRUE, FALSE))\nsummary(cov_analysis$coverage)##    Mode   FALSE    TRUE \n## logical       9      91"},{"path":"two-parameters.html","id":"outcomes","chapter":"7 Two Parameters","heading":"7.6 0/1 Outcomes","text":"Variables well-behaved, continuous ranges easiest handle. started height simple. Sadly, however, many variables like height. Consider gender, variable nhanes takes two possible values: “Male” “Female.” way like construct model explains predicts height, like build model explains predicts gender. want answer questions like:probability random person 180 cm tall female?Wisdom suggests start looking data. models use numbers, need create new variable, female, 1 Females 0 Males.Justice guides us noting predictive model. math complex:\\[  \\operatorname{Pr}(\\text{Female} = 1) = \\frac{\\text{exp}(\\beta_0 + \\beta_1 \\text{height})}{1 + \\text{exp}(\\beta_0 + \\beta_1 \\text{height})} \\]need mumbo-jumbo? Look happens fit simple linear model:Recall default value family gaussian, need include . Initially, fitted model seems OK.Comparing two individuals differ height 1 cm, expect taller individual 3% lower probability female. unreasonable. problems show extremes. Consider fitted values across range data.Using 1 Female 0 Male allows us interpret fitted values percentage likelihood person female male. handy natural interpretation. pronlem linear model arises , case, model suggests values outside 0 1. values , definition, impossible. People 190 cm tall -25% chance female.solution use different functional form, one restricts fitted values acceptable range. Look closely math:\\[  \\operatorname{Pr}(\\text{Female} = 1) = \\frac{\\text{exp}(\\beta_0 + \\beta_1 \\text{height})}{1 + \\text{exp}(\\beta_0 + \\beta_1 \\text{height})} \\]inverse logistic function, don’t worry details. Mathematical formulas never Google search away. Instead, note range restricted. Even \\(\\beta_0 + \\beta_1 \\text{height}\\) large number, ratio bound 1. Similarly, matter negative \\(\\beta_0 + \\beta_1 \\text{height}\\) , ratio can never smaller 0. model can , ever, produce impossible values.Whenever two categories outcome, use family = binomial.Courage suggests use tools fitting logistic regression fitting linear models.One major difference linear logistic models parameters latter much harder interpret. mean, substantively, \\(\\beta_1\\) -0.26?, course, estimate linear model using family = guassian.Although parameters easier interpret, ease Siren’s call. Follow , crash rocks nonsense.use linear model Gaussian error term, model can produce predicted values outside 0 1 range allowed probabilities, case.Imagine person 190 cm tall. probability person female? just use input linear model, get: \\(6.2 -0.034 * 190\\) = -0.26$. Since impossible probability less zero, result nonsense. Indeed, primary impetus behind creation logistic regression models avoid results.Fortunately, parameters care . epiphenomenon, unicorns imagination. Instead, want answers questions, Temperance — functions rstanarm — guide. Recall question:probability random person 180 cm tall female?1 20 chance 180 centimeter tall person female.Another major difference logistic models posterior_epred() posterior_predict() return different types objects. posterior_epred() returns probabilities, . posterior_predict(), hand, returns predictions, name suggests. words, returns zeros ones. Consider another question:group 100 people 180 centimeters tall, many women?column 4,000 draws posterior predictive distribution gender person 180 cm tall. (Since 100 people height, columns draws distribution.) can treat object row--row basis.5 6 women likely number consistent answer first question. found random person 180 cm tall 5% 6% chance female. , 100 people, 5 6 seems reasonable total. expect value posterior_epred(), although provide sense center predictive distribution , tell us much range possible outcomes. , need posterior_predict().","code":"\nch7_b <- nhanes %>% \n  select(age, gender, height) %>%\n  mutate(female = ifelse(gender == \"Female\", 1, 0)) %>% \n  filter(age >= 18) %>% \n  select(female, height) %>% \n  drop_na()\n\nch7_b## # A tibble: 7,424 x 2\n##    female height\n##     <dbl>  <dbl>\n##  1      0   165.\n##  2      0   165.\n##  3      0   165.\n##  4      1   168.\n##  5      1   167.\n##  6      1   167.\n##  7      1   167.\n##  8      0   170.\n##  9      0   182.\n## 10      0   169.\n## # … with 7,414 more rows\nch7_b %>% \n  ggplot(aes(x = height, y = female)) +\n  geom_jitter(height = 0.1, alpha = 0.05) +\n  labs(title = \"Gender and Height\",\n       subtitle = \"Men are taller than women\",\n       x = \"Height (cm)\",\n       y = NULL,\n       caption = \"Data from NHANES\") +\n  scale_y_continuous(breaks = c(0, 1),\n                     labels = c(\"Male\", \"Female\"))\nfit_gender_linear <- stan_glm(data = ch7_b,\n                              formula = female ~ height,\n                              family = gaussian,\n                              refresh = 0,\n                              seed = 82) \nprint(fit_gender_linear, digits = 2)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      female ~ height\n##  observations: 7424\n##  predictors:   2\n## ------\n##             Median MAD_SD\n## (Intercept)  6.22   0.07 \n## height      -0.03   0.00 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 0.36   0.00  \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nch7_b %>% \n  ggplot(aes(x = height, y = female)) +\n  geom_jitter(height = 0.1, alpha = 0.05) +\n  geom_smooth(aes(y = fitted(fit_gender_linear)),\n              method = \"lm\",\n              formula = y ~ x,\n              se = FALSE) +\n  labs(title = \"Gender and Height\",\n       subtitle = \"Some fitted values are impossible\",\n       x = \"Height (cm)\",\n       y = NULL,\n       caption = \"Data from NHANES\") +\n  scale_y_continuous(breaks = c(-0.5, 0, 0.5, 1, 1.5),\n                     labels = c(\"-50%\", \"0% (Male)\", \n                                \"50%\", \"100% (Female)\",\n                                \"150%\"))\nfit_2 <- stan_glm(data = ch7_b,\n                  formula = female ~ height,\n                  family = binomial,\n                  refresh = 0,\n                  seed = 27)\nprint(fit_2, digits = 3)## stan_glm\n##  family:       binomial [logit]\n##  formula:      female ~ height\n##  observations: 7424\n##  predictors:   2\n## ------\n##             Median MAD_SD\n## (Intercept) 43.389  0.999\n## height      -0.257  0.006\n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nfit_2_lm <- stan_glm(data = ch7_b,\n                     formula = female ~ height,\n                     family = gaussian,\n                     refresh = 0,\n                     seed = 27)\n\nprint(fit_2_lm, digits = 3)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      female ~ height\n##  observations: 7424\n##  predictors:   2\n## ------\n##             Median MAD_SD\n## (Intercept)  6.219  0.072\n## height      -0.034  0.000\n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 0.365  0.003 \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nch7_b %>% \n  ggplot(aes(x = height, y = female)) +\n    geom_jitter(height = 0.1, alpha = 0.05) +\n    geom_line(aes(x = height, \n                  y = fitted(fit_2)), \n              color = \"red\") +\n    geom_line(aes(x = height, \n                  y = fitted(fit_2_lm)), \n              color = \"blue\") +\n    labs(title = \"Gender and Height\",\n         subtitle = \"A linear model can produce probabilities outside 0 to 1\",\n         x = \"Height (cm)\",\n         y = NULL,\n         caption = \"Data from NHANES\") +\n    scale_y_continuous(breaks = c(0, 1),\n                       labels = c(\"Male\", \"Female\"))\nnewobs <- tibble(height = 180)\n\npe <- posterior_epred(fit_2, newdata = newobs) %>% \n  as_tibble()\n\npe %>% \n  ggplot(aes(x = `1`)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"For probability 180 cm tall person is female\",\n         x = \"Probability\",\n         y = \"Probability\",\n         caption = \"Data source: NHANES\") + \n    scale_x_continuous(labels = scales::percent_format()) +\n    scale_y_continuous(labels = scales::percent_format()) \nnewobs <- tibble(height = rep(180, 100))\n\npp <- posterior_predict(fit_2, newdata = newobs) %>% \n  as_tibble() %>% \n  mutate_all(as.numeric)\n\npp## # A tibble: 4,000 x 100\n##      `1`   `2`   `3`   `4`   `5`   `6`   `7`   `8`   `9`  `10`  `11`  `12`  `13`\n##    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n##  1     0     0     0     0     0     0     0     0     0     0     0     0     1\n##  2     0     0     0     0     0     0     0     0     0     0     0     0     0\n##  3     0     0     0     0     1     0     1     0     1     0     0     0     0\n##  4     0     0     0     0     0     0     1     0     0     0     0     0     0\n##  5     1     0     0     0     0     0     0     0     0     0     0     0     0\n##  6     0     1     0     0     1     0     0     0     0     0     0     0     0\n##  7     0     0     0     0     0     0     0     0     0     0     0     0     0\n##  8     0     0     0     0     0     0     0     0     0     0     0     0     0\n##  9     0     0     0     0     0     0     0     0     0     1     0     1     0\n## 10     1     0     0     0     1     0     0     0     1     0     0     0     0\n## # … with 3,990 more rows, and 87 more variables: `14` <dbl>, `15` <dbl>,\n## #   `16` <dbl>, `17` <dbl>, `18` <dbl>, `19` <dbl>, `20` <dbl>, `21` <dbl>,\n## #   `22` <dbl>, `23` <dbl>, `24` <dbl>, `25` <dbl>, `26` <dbl>, `27` <dbl>,\n## #   `28` <dbl>, `29` <dbl>, `30` <dbl>, `31` <dbl>, `32` <dbl>, `33` <dbl>,\n## #   `34` <dbl>, `35` <dbl>, `36` <dbl>, `37` <dbl>, `38` <dbl>, `39` <dbl>,\n## #   `40` <dbl>, `41` <dbl>, `42` <dbl>, `43` <dbl>, `44` <dbl>, `45` <dbl>,\n## #   `46` <dbl>, `47` <dbl>, `48` <dbl>, `49` <dbl>, `50` <dbl>, `51` <dbl>,\n## #   `52` <dbl>, `53` <dbl>, `54` <dbl>, `55` <dbl>, `56` <dbl>, `57` <dbl>,\n## #   `58` <dbl>, `59` <dbl>, `60` <dbl>, `61` <dbl>, `62` <dbl>, `63` <dbl>,\n## #   `64` <dbl>, `65` <dbl>, `66` <dbl>, `67` <dbl>, `68` <dbl>, `69` <dbl>,\n## #   `70` <dbl>, `71` <dbl>, `72` <dbl>, `73` <dbl>, `74` <dbl>, `75` <dbl>,\n## #   `76` <dbl>, `77` <dbl>, `78` <dbl>, `79` <dbl>, `80` <dbl>, `81` <dbl>,\n## #   `82` <dbl>, `83` <dbl>, `84` <dbl>, `85` <dbl>, `86` <dbl>, `87` <dbl>,\n## #   `88` <dbl>, `89` <dbl>, `90` <dbl>, `91` <dbl>, `92` <dbl>, `93` <dbl>,\n## #   `94` <dbl>, `95` <dbl>, `96` <dbl>, `97` <dbl>, `98` <dbl>, `99` <dbl>,\n## #   `100` <dbl>\npp %>% \n  rowwise() %>% \n  mutate(total = sum(c_across(everything()))) %>% \n  ggplot(aes(x = total)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Number of women among 100 people 180 cm tall\",\n         x = \"Number of Women\",\n         y = \"Probability\",\n         caption = \"Data source: NHANES\") + \n    scale_x_continuous(labels = scales::number_format(accuracy = 1)) +\n    scale_y_continuous(labels = scales::percent_format()) "},{"path":"two-parameters.html","id":"summary-7","chapter":"7 Two Parameters","heading":"7.7 Summary","text":"next five chapters follow process just completed . start decision make. luck, data guide us. (Without data, even best data scientist struggle make progress.) Wisdom asks us: “data close enough decision face make using data likely helpful?” Often times, answer “.” Even data, ability make model, Wisdom tap us shoulder say, “Even can make model, don’t forget ask .” Ethics matter.start build model, Justice guide us. model descriptive causal? mathematical relationship dependent variable trying explain independent variables can use explain ? assumptions making distributions, especially regard error term?set model framework, need Courage implement model code. Without code, math world useless. created model, need understand . posterior distributions unknown parameters? seem sensible? interpret ?Temperance guides final step. model, can finally get back decision motivated exercise first place. can use model make statements world, confirm model consistent world use model make predictions numbers know.Let’s practice process another dozen times.","code":""},{"path":"three-parameters.html","id":"three-parameters","chapter":"8 Three Parameters","heading":"8 Three Parameters","text":"Models parameters. Chapter 6 created models single parameter \\(p\\), proportion red beads urn. Chapter 7, used models two parameters: \\(\\mu\\) (average height population, generically known model “intercept”) \\(\\sigma\\) (variation height population). — can guess going? — build models three parameters: \\(\\sigma\\) (serves role throughout book) two coefficients. models relate continuous predictor outcome, two parameters labeled \\(\\beta_0\\) \\(\\beta_1\\). models estimate two averages, parameters \\(\\beta_1\\) \\(\\beta_2\\). notation confusing, least different academic fields use inconsistent schemes. key just follow Cardinal Virtues tackle problem step step.","code":""},{"path":"three-parameters.html","id":"age-party","chapter":"8 Three Parameters","heading":"8.1 age ~ party","text":"want build model use model make claims world.expected age Democrat train station?group three Democrats three Republicans, age difference expect oldest Democrat youngest Republican?can answer similar questions creating model uses party affiliation predict age","code":""},{"path":"three-parameters.html","id":"wisdom-2","chapter":"8 Three Parameters","heading":"8.1.1 Wisdom","text":"\nFIGURE 8.1: Wisdom\nWisdom begins look data.","code":""},{"path":"three-parameters.html","id":"eda-for-trains","chapter":"8 Three Parameters","heading":"8.1.1.1 EDA for trains","text":"Always explore data. demonstrate modeling three parameters, use trains data set primer.data package. Recall discussion Chapter 4. Enos (2014) randomly placed Spanish-speaking confederates nine train platforms around Boston, Massachusetts. Exposure Spanish-speakers – treatment – influenced attitudes toward immigration. reactions measured changes answers three survey questions. Let’s load libraries need chapter, used , look data., can see information respondent’s gender, political affiliations, age, income. Additionally, treatment indicates whether subject control treatment group, attitudes toward immigration (att_start) (att_end) experiment. can type ?trains read help page information variable. Let’s restrict attention subset variables.always smart look random samples data:att_end measure person’s attitude toward immigration. higher number means conservative, .e., exclusionary stance toward immigration United States.Pay attention variable types. make sense? Perhaps. certainly grounds suspicion. age att_end doubles rather integers? values data appear integers, benefit variables doubles. party character variable treatment factor variable? intentional choices made creator tibble, .e., us. mistakes. , likely, choices mixture sensible arbitrary. Regardless, responsibility notice . can’t make good model without looking closely data using.TABLE 8.1: Data summaryVariable type: characterVariable type: factorVariable type: numericskim() shows us different values treatment factor. Unfortunately, character variables like party. ranges age att_end seem reasonable. Recall participants asked three questions immigration issues, allowed answer indicated strength agreement scale form 1 5, higher values indicating agreement conservative viewpoints. att_end sum responses three questions, liberal possible value 3 conservative 15.Always plot data.Democrats dataset Republicans. Democrats also span wider range ages Republicans.data science, two main aspects Wisdom: representativeness ethics. data limited. 115 observations, 2012 involving train commuters Boston. useful data today, populations around Boston, cities US? judgment, along advice colleagues, can guide .key concept idea “population.” larger population data (conceptually) drawn? interested age indidividuals data set, need inference. know everyone’s ages already. need tools like stan_glm() seek understand individuals data. , start data science, need decide something larger population interested . data “representative,” least extent, larger population can use data answer questions.ethical issues , fortunately, fraught. Estimating someone’s age (universally?) viewed OK. Estimating someone’s health income criminal record far dicier.","code":"\nlibrary(primer.data)\nlibrary(rstanarm)\nlibrary(skimr)\nlibrary(tidyverse)\nglimpse(trains)## Rows: 115\n## Columns: 15\n## $ treatment           <fct> Treated, Treated, Treated, Treated, Control, Trea…\n## $ att_start           <dbl> 11, 9, 3, 11, 8, 13, 13, 10, 12, 9, 10, 11, 13, 6…\n## $ att_end             <dbl> 11, 10, 5, 11, 5, 13, 13, 11, 12, 10, 9, 9, 13, 7…\n## $ gender              <chr> \"Female\", \"Female\", \"Male\", \"Male\", \"Male\", \"Fema…\n## $ race                <chr> \"White\", \"White\", \"White\", \"White\", \"White\", \"Whi…\n## $ liberal             <lgl> FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FA…\n## $ party               <chr> \"Democrat\", \"Republican\", \"Democrat\", \"Democrat\",…\n## $ age                 <int> 31, 34, 63, 45, 55, 37, 53, 36, 54, 42, 33, 50, 2…\n## $ income              <dbl> 135000, 105000, 135000, 300000, 135000, 87500, 87…\n## $ line                <chr> \"Framingham\", \"Framingham\", \"Framingham\", \"Framin…\n## $ station             <chr> \"Grafton\", \"Southborough\", \"Grafton\", \"Grafton\", …\n## $ hisp_perc           <dbl> 0.026, 0.015, 0.019, 0.019, 0.019, 0.023, 0.030, …\n## $ ideology_start      <int> 3, 4, 1, 4, 2, 5, 5, 4, 4, 4, 3, 5, 4, 1, 2, 2, 3…\n## $ ideology_end        <int> 3, 4, 2, 4, 2, 5, 5, 4, 3, 4, 3, 4, 4, 1, 2, 3, 3…\n## $ income_in_thousands <dbl> 135, 105, 135, 300, 135, 88, 88, 135, 105, 135, 1…\nch8 <- trains %>% \n  select(age, att_end, party, income, treatment)\nch8 %>% \n  sample_n(5)## # A tibble: 5 x 5\n##     age att_end party      income treatment\n##   <int>   <dbl> <chr>       <dbl> <fct>    \n## 1    36      12 Republican 135000 Treated  \n## 2    60       6 Democrat   135000 Control  \n## 3    31       9 Democrat    87500 Control  \n## 4    35      14 Democrat   105000 Treated  \n## 5    55       8 Democrat   105000 Control\nch8 %>% \n  glimpse()## Rows: 115\n## Columns: 5\n## $ age       <int> 31, 34, 63, 45, 55, 37, 53, 36, 54, 42, 33, 50, 24, 40, 53,…\n## $ att_end   <dbl> 11, 10, 5, 11, 5, 13, 13, 11, 12, 10, 9, 9, 13, 7, 8, 13, 8…\n## $ party     <chr> \"Democrat\", \"Republican\", \"Democrat\", \"Democrat\", \"Democrat…\n## $ income    <dbl> 135000, 105000, 135000, 300000, 135000, 87500, 87500, 13500…\n## $ treatment <fct> Treated, Treated, Treated, Treated, Control, Treated, Contr…\nch8 %>% \n  skim()\nch8 %>%\n  ggplot(aes(x = party, y = age)) + \n  geom_jitter(width = 0.1, height = 0) + \n  labs(title = \"Age by Party Affiliation in Trains Dataset\",\n       subtitle = \"Where are the old Republicans?\",\n       x = \"Party\",\n       y = \"Age\")"},{"path":"three-parameters.html","id":"justice-2","chapter":"8 Three Parameters","heading":"8.1.2 Justice","text":"\nFIGURE 8.2: Justice\nJustice, data science, consists three topics: predictive versus causal modeling, Preceptor Table, mathematical formulation model.model age dependent variable predictive, causal, simple reason nothing, time, can change age. X years old. matter changed party registration Democrat Republican vice versa. age age.terms Preceptor Table, fact means one potential outcome, .e., one outcome. potential outcome Democrat different potential outcome Republican.dealing non-causal model, focus predicting things. underlying mechanism connects age party less important brute statistical fact connection. Predictive models care little causality.good way looking Preceptor Table, seen . Unlike previous table Chapter 7, now two columns addition ID one. left, predictor used model, political party, right variable predicting, age. Since data include Republicans Democrats world, every row filled . now know working predictive model. Recall:\\[outcome = model + \\ \\ \\ model\\]words, event depends explicitly described model well influences unknown us. Everything happens world result various factors, can consider model (know influences, data ).far treated equation conceptually, fact works just like equation. Let’s bit concrete.\\[ y_i = \\beta_1 x_{r,} + \\beta_2 x_{d,} + \\epsilon_i\\]\n\\[x_{r,}, x_{d,} \\\\{0,1\\}\\] \n\\[x_{r,} +  x_{d,} = 1\\] \n\\[\\epsilon_i \\sim N(0, \\sigma^2)\\]Don’t panic dear poets philosophers, whole thing easier looks.left-hand side outcome, \\(y_i\\), variable explained. case, age.left-hand side outcome, \\(y_i\\), variable explained. case, age.right-hand side first part contained model, consisting two similar terms. term consists parameter data point. betas two parameters: \\(\\beta_1\\) average age Republicans population \\(\\beta_2\\) average age Democrats population. \\(x\\)’s explanatory variables take values 1 0. someone Republican \\(x_{r,} = 1\\) \\(x_{d,} = 0\\), someone Democrat \\(x_{r,} = 0\\) \\(x_{d,} = 1\\). words, \\(x\\)’s binary variables mutually exclusive (Democrat, also Republican).right-hand side first part contained model, consisting two similar terms. term consists parameter data point. betas two parameters: \\(\\beta_1\\) average age Republicans population \\(\\beta_2\\) average age Democrats population. \\(x\\)’s explanatory variables take values 1 0. someone Republican \\(x_{r,} = 1\\) \\(x_{d,} = 0\\), someone Democrat \\(x_{r,} = 0\\) \\(x_{d,} = 1\\). words, \\(x\\)’s binary variables mutually exclusive (Democrat, also Republican).last part, \\(\\epsilon_i\\) (“epsilon”), represents unexplained part called error term. simply difference outcome model predictions. includes factors influence someone’s age connected party affiliation. assume error follows normal distribution expected value 0 (meaning 0 average).last part, \\(\\epsilon_i\\) (“epsilon”), represents unexplained part called error term. simply difference outcome model predictions. includes factors influence someone’s age connected party affiliation. assume error follows normal distribution expected value 0 (meaning 0 average).small \\(\\)’s index number observations. equivalent “ID” column Preceptor Table simply states outcome person \\(\\) explained modeled non-modeled factors person \\(\\). corresponding \\(x\\)’s \\(r\\) \\(d\\) subscript, Republican Democrat.small \\(\\)’s index number observations. equivalent “ID” column Preceptor Table simply states outcome person \\(\\) explained modeled non-modeled factors person \\(\\). corresponding \\(x\\)’s \\(r\\) \\(d\\) subscript, Republican Democrat.Keep mind model claim world works, just 115 individuals data people population seek draw inferences.Keep mind model claim world works, just 115 individuals data people population seek draw inferences.Although terminology differs across academic fields, common term describe model like “regression.” “regressing” age party order see associated . formula “regression formula,” model “regression model.” terminology also apply model height Chapter 7.Although terminology differs across academic fields, common term describe model like “regression.” “regressing” age party order see associated . formula “regression formula,” model “regression model.” terminology also apply model height Chapter 7.","code":""},{"path":"three-parameters.html","id":"courage-2","chapter":"8 Three Parameters","heading":"8.1.3 Courage","text":"\nFIGURE 8.3: Courage\nCourage allows us translate math code.get posterior distributions three parameters, use stan_glm(), just Chapter 7. take look formula, can see similar equation .variable tilde, age, outcome.variable tilde, age, outcome.explanatory variable party. variable two values, ‘Democrat’ ‘Republican.’explanatory variable party. variable two values, ‘Democrat’ ‘Republican.’also added -1 end equation, indicating want intercept, otherwise added default.also added -1 end equation, indicating want intercept, otherwise added default.resulting output:partyDemocrat corresponds \\(\\beta_1\\), average age Democrats population. partyRepublican corresponds \\(\\beta_2\\), average age Republicans population. Since don’t really care posterior distribution \\(\\sigma\\), won’t discuss . Graphically:unknown parameters \\(\\beta_1\\) (partyDemocrat) \\(\\beta_2\\) (partyRepublican) still unknown. can never know true average age Democrats population. can calculate posterior probability distribution parameters. Comments:Democrats seem slightly older Republicans. true sample , almost (quite!) definition, true posterior probability distributions.Democrats seem slightly older Republicans. true sample , almost (quite!) definition, true posterior probability distributions.estimate average age Democrats population much precise Republicans five times many Democrats Republicans sample. central lesson Chapter 6 , data related parameter, narrower posterior distribution .estimate average age Democrats population much precise Republicans five times many Democrats Republicans sample. central lesson Chapter 6 , data related parameter, narrower posterior distribution .great deal overlap two distributions. surprised , truth, average age Republicans population greater Democrats? really. don’t enough data sure either way.great deal overlap two distributions. surprised , truth, average age Republicans population greater Democrats? really. don’t enough data sure either way.phrase “population” great deal work said , precisely, mean “population.” set people commuter platforms days 2012 experiment done? set people platforms, including ones never visited? set Boston commuter? Massachusetts residents? US residents? include people today, can draw inferences 2012? explore questions every model create.phrase “population” great deal work said , precisely, mean “population.” set people commuter platforms days 2012 experiment done? set people platforms, including ones never visited? set Boston commuter? Massachusetts residents? US residents? include people today, can draw inferences 2012? explore questions every model create.Look following table shows sample 8 individuals. fitted values Republicans Democrats, model produces one fitted value condition. table shows just sample 8 individuals captures wide range residuals, making difficult predict age new individual. can get better picture unmodeled variation sample plot three variables individuals data.following three histograms show actual outcomes, fitted values, residuals people trains:three plots structured like equation table . value left plot sum one value middle plot plus one right plot.actual age distribution looks like normal distribution. centered around 43, standard deviation 12 years.actual age distribution looks like normal distribution. centered around 43, standard deviation 12 years.middle plot fitted values shows two adjacent spikes, represent estimates Democrats Republicans.middle plot fitted values shows two adjacent spikes, represent estimates Democrats Republicans.Since residuals plot represents difference two plots, distribution looks like first plot.Since residuals plot represents difference two plots, distribution looks like first plot.","code":"\nfit_obj <- stan_glm(age ~ party - 1, \n                    data = trains, \n                    refresh = 0)\nfit_obj## stan_glm\n##  family:       gaussian [identity]\n##  formula:      age ~ party - 1\n##  observations: 115\n##  predictors:   2\n## ------\n##                 Median MAD_SD\n## partyDemocrat   42.6    1.3  \n## partyRepublican 41.1    2.9  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 12.3    0.8  \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nfit_obj %>% \n  as_tibble() %>% \n  select(-sigma) %>% \n  mutate(Democrat = partyDemocrat, Republican = partyRepublican) %>%\n  pivot_longer(cols = Democrat:Republican,\n               names_to = \"parameter\",\n               values_to = \"age\") %>% \n  ggplot(aes(x = age, color = parameter)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Average age for Boston commuters in 2012\",\n         x = \"Age\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"three-parameters.html","id":"temperance-2","chapter":"8 Three Parameters","heading":"8.1.4 Temperance","text":"\nFIGURE 8.4: Temperance\nRecall first questions began section:probability , Democrat shows train station, 50 years old?far tried model people data set whose real age already knew. helpful understand model, ultimate goal understand real world, people don’t yet know much . Temperance guides us make meaningful predictions become aware known unknown limitations.Start simple question, chances random Democrat 50 years old? First, create tibble desired input model. case tibble variable named “party” contains single observation value “Democrat.” bit different Chapter 7.Next, ’ll use posterior_predict() function get draws posterior scenario. Note new posterior distribution consideration . unknown parameter, call \\(D_{age}\\), age Democrat. age randomly selected Democrat population next Democrat meet next Democrat interview train platform. definition “population” determines appropriate interpretation. Yet, regardless, \\(D_{age}\\) unknown parameter. one — like \\(\\beta_1\\), \\(\\beta_2\\), \\(\\sigma\\) — already created posterior probability distribution. need posterior_predict().posterior_predict() takes two arguments: model simulations run, tibble indicating many parameters want run simulations. case, model one Courage tibble one just created.might expect can use as_tibble() directly object returned posterior_predict(). Sadly, obscure technical reasons, won’t quite work. , need incantation mutate_all(.numeric) make sure resulting tibble well-behaved. command ensures every column tibble simple numeric vector, want.look first observations shows simply get ten draws model’s posterior distribution age Democrat. important understand concrete person trains dataset - algorithm posterior_predict() simply uses existing data trains estimate posterior distribution.posterior distribution, can answer (almost) reasonable question. case, probability next Democrat 50 around 27%.Recall second question:group three Democrats three Republicans, age difference expect oldest Democrat youngest Republican?start creating tibble desired input. Note name column (“party”) observations (“Democrat,” “Republican”) must always exactly original data set. tibble well model can used arguments posterior_predict():look output shows now 6 columns: one person. R name columns, arranged order specified persons tibble (D, D, D, R, R, R). determine expected age difference, can proceed follows:words, expect oldest Democrat 22 years older youngest Republican, surprised oldest Democrat actually younger youngest Republican group 6.","code":"\nnew_obs <- tibble(party = \"Democrat\")\nset.seed(9)\npp <- posterior_predict(fit_obj, newdata = new_obs) %>%\n    as_tibble() %>%\n    mutate_all(as.numeric)\n\nhead(pp, 10)## # A tibble: 10 x 1\n##      `1`\n##    <dbl>\n##  1  32.7\n##  2  34.7\n##  3  42.8\n##  4  37.3\n##  5  45.1\n##  6  29.2\n##  7  58.3\n##  8  43.4\n##  9  39.2\n## 10  38.6\npp %>% \n  ggplot(aes(x = `1`)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100)  +\n    labs(title = \"Posterior Probability Distribution for a Democrat's Age\",\n         x = \"Age\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()\ntibble(age = pp$`1`) %>% \n  mutate(ot_50 = ifelse(age > 50, TRUE, FALSE)) %>% \n  summarize(perc = sum(ot_50)/n())## # A tibble: 1 x 1\n##    perc\n##   <dbl>\n## 1 0.274\nnew <- tibble(party = c(\"Democrat\", \"Democrat\", \"Democrat\", \n                        \"Republican\", \"Republican\",\"Republican\"))\n\nset.seed(27)\npp <- posterior_predict(fit_obj, newdata = new) %>%\n    as_tibble() %>%\n    mutate_all(as.numeric)\n\nhead(pp, 10)## # A tibble: 10 x 6\n##      `1`   `2`   `3`   `4`   `5`   `6`\n##    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n##  1 67.5   57.6  32.8  20.7 25.5   43.5\n##  2 45.6   60.9  73.9  45.7 25.4   43.0\n##  3 64.6   46.6  35.1  28.5 21.4   28.5\n##  4 40.3   44.3  33.9  27.3 41.8   39.9\n##  5  6.19  26.3  28.9  44.6 55.4   44.5\n##  6 44.0   32.5  72.8  22.6 39.5   59.1\n##  7 51.5   51.6  40.4  46.3  9.55  32.4\n##  8 62.5   74.1  23.8  23.3 14.3   43.5\n##  9 46.1   37.4  36.5  47.5 54.6   30.9\n## 10 63.3   53.3  47.0  56.0 47.8   55.1\npp %>% \n  set_names(c(\"dem_1\", \"dem_2\", \"dem_3\", \n              \"rep_1\", \"rep_2\", \"rep_3\")) %>% \n  rowwise() %>% \n  \n  # Creating three new columns. The first two are the \n  # highest age among Democrats and the lowest age\n  # among Republicans, respectively. The third one is\n  # the difference between the first two.\n  \n  mutate(dems_oldest = max(c_across(dem_1:dem_3)),\n         reps_youngest = min(c_across(rep_1:rep_3)),\n         age_diff = dems_oldest - reps_youngest) %>% \n  \n  # Ungroup to tell R not to perform rowwise operations\n  # anymore.\n  \n  ungroup() %>% \n  \n  # Create posterior probability distribution\n  \n  ggplot(aes(x = age_diff)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Age difference between the oldest/youngest of three Democrats/Republicans\",\n         x = \"Age\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"three-parameters.html","id":"addendum","chapter":"8 Three Parameters","heading":"8.1.5 Addendum","text":"Instead parameterizing model without intercept, used one. case, math :\\[ y_i = \\beta_0  + \\beta_1 x_{d,} + \\epsilon_i\\]\ninterpretations parameters now different. \\(\\beta_0\\) now average age Republicans. interpretation \\(\\beta_1\\) original set . \\(beta_1\\) now difference average age Republicans Democrats.fit model, use exact code , except without -1 formula argument.intercept, 42.6, partyDemocrat estimate first model. partyRepublican estimate, previously 41.0, now -1.5, meaning difference (allowing rounding) average age Democrats Republicans.Little else models different. fitted values residuals. posterior_predict() generate posterior predictive probabilty distributions. parameterization use matter much. able interpret meaning coefficients .","code":"\nstan_glm(age ~ party, \n         data = trains, \n         refresh = 0)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      age ~ party\n##  observations: 115\n##  predictors:   2\n## ------\n##                 Median MAD_SD\n## (Intercept)     42.6    1.3  \n## partyRepublican -1.4    3.1  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 12.3    0.8  \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg"},{"path":"three-parameters.html","id":"att_end-treatment","chapter":"8 Three Parameters","heading":"8.2 att_end ~ treatment","text":", created predictive model: someone’s party affiliation, can make better guess age absence information party. nothing causal model. Changing someone’s party registration can change age. example, build causal model. Consider two questions:average treatment effect, exposing people Spanish-speakers, attitudes toward immigration?largest causal effect still 1 10 chance occurring?Models help us answer questions better without models, follow Cardinal Virtues.","code":""},{"path":"three-parameters.html","id":"wisdom-3","chapter":"8 Three Parameters","heading":"8.2.1 Wisdom","text":"\nFIGURE 8.5: Wisdom\nLook data! making model seeks explain att_end, plot att_end variable think connected .Treated individuals seem higher values att_end control individuals, although great deal variation .still using data Enos (2014). Yet world different place today! data 2012, four years Donald Trump’s election president, still relevant? Can generalize data Boston commuters people Massachusetts, people US? obvious answers questions. data never perfect match problem face data always old. world constantly changing. use old data, need make assumptions stability model world parameters estimating. Whether assumptions reasonable difficult question, one requires knowledge world world now . Math won’t save us.critical issue always: population interested data come population? connection two, progress impossible. , case, willing consider population US residents last decade (including today), willing assume data set 115 individuals representative population, can use data create model answer question.Ethical issues tricky, least trickier context models dependent variable height age. (ethical issues conducting experiment first place non-trivial.) Assume make good model. prevent someone using information , say, influence voting donations? Imagine Republican Senate candidate hires Spanish-speakers ride commuter trains order shift voters’ attitudes toward immigration conservative direction. believes (correctly?) increase odds winning election. sort knowledge seek create? can make models. Indeed, purpose chapter show ! make models?","code":"\nch8 %>%\n  ggplot(aes(x = treatment, y = att_end)) + \n  geom_jitter() + \n  labs(title = \"Attitude End and Treatment in Enos (2014)\",\n       subtitle = \"Did the treatment make people more conservative?\",\n       x = \"Treatment\",\n       y = \"Attitude After Experiment\")"},{"path":"three-parameters.html","id":"justice-3","chapter":"8 Three Parameters","heading":"8.2.2 Justice","text":"\nFIGURE 8.6: Justice\nthree elements Justice data science remain : predictive/causal models, Preceptor Table, mathematical formula.Preceptor Table model look similar one first half chapter, except now possible outcomes individual: att_end exposed treatment att_end exposed control.math model exactly math predictive model first half chapter, although change notation bit clarity.\\[ y_i = \\beta_1 x_{t,} + \\beta_2 x_{c,} + \\epsilon_i\\]\n\\[x_{t,}, x_{c,} \\\\{0,1\\}\\] \n\\[x_{t,} +  x_{c,} = 1\\] \n\\[\\epsilon_i \\sim N(0, \\sigma^2)\\]Nothing changed, except meaning data items interpretations parameters.left-hand side outcome, \\(y_i\\), variable explained. case, person’s attitude toward immigration experiment complete. \\(y_i\\) takes integer values 3 15 inclusive.left-hand side outcome, \\(y_i\\), variable explained. case, person’s attitude toward immigration experiment complete. \\(y_i\\) takes integer values 3 15 inclusive.right-hand side first part contained model, consisting two similar terms. two terms stand Treated Control work follows. term consists parameter data point. \\(\\beta_1\\) average attitude toward immigration treated individuals — exposed Spanish-speakers — population. \\(\\beta_2\\) average attitude toward immigration control individuals — exposed Spanish-speakers — population. \\(x\\)’s explanatory variables take values 1 0. someone Treated \\(x_{t,} = 1\\) \\(x_{c,} = 0\\), someone Control \\(x_{t,} = 0\\) \\(x_{c,} = 1\\). words, \\(x\\)’s binary variables mutually exclusive – Treated, also Control.right-hand side first part contained model, consisting two similar terms. two terms stand Treated Control work follows. term consists parameter data point. \\(\\beta_1\\) average attitude toward immigration treated individuals — exposed Spanish-speakers — population. \\(\\beta_2\\) average attitude toward immigration control individuals — exposed Spanish-speakers — population. \\(x\\)’s explanatory variables take values 1 0. someone Treated \\(x_{t,} = 1\\) \\(x_{c,} = 0\\), someone Control \\(x_{t,} = 0\\) \\(x_{c,} = 1\\). words, \\(x\\)’s binary variables mutually exclusive – Treated, also Control.Note formula applies everyone population, just 115 people data. index \\(\\) just go 1 115. goes 1 \\(N\\), \\(N\\) number individuals population. Conceptually, everyone att_end treatment control.Note formula applies everyone population, just 115 people data. index \\(\\) just go 1 115. goes 1 \\(N\\), \\(N\\) number individuals population. Conceptually, everyone att_end treatment control.last part, \\(\\epsilon_i\\) (“epsilon”), represents unexplained part called error term. simply difference outcome model predictions. particular case, includes factors influence someone’s attitude toward immigration explained treatment status. assume error follows normal distribution expected value 0.last part, \\(\\epsilon_i\\) (“epsilon”), represents unexplained part called error term. simply difference outcome model predictions. particular case, includes factors influence someone’s attitude toward immigration explained treatment status. assume error follows normal distribution expected value 0.small \\(\\)’s index number observations data set. equivalent “ID” column Preceptor Table simply states outcome person \\(\\) explained modeled non-modelled factors person . corresponding \\(x\\)’s \\(t\\) \\(c\\) subscript, Treated Control.small \\(\\)’s index number observations data set. equivalent “ID” column Preceptor Table simply states outcome person \\(\\) explained modeled non-modelled factors person . corresponding \\(x\\)’s \\(t\\) \\(c\\) subscript, Treated Control.","code":""},{"path":"three-parameters.html","id":"courage-3","chapter":"8 Three Parameters","heading":"8.2.3 Courage","text":"\nFIGURE 8.7: Courage\nJustice satisfied, gather Courage fit model. Note , except change variable names, code exactly , predictive model age. Predictive models causal models use math code. differences, important, lie interpretation results, creation.treatmentTreated corresponds \\(\\beta_1\\). always, R , behind scenes, estimated entire posterior probability distribution \\(\\beta_1\\). graph distribution next section. basic print method objects can’t show entire distribution, gives us summary numbers: median MAD SD. Speaking roughly, expect 95% values posterior within two MAD SD’s median. words, 95% confident true, unknowable, average attitude toward immigration among Treated population 9.2 10.8.treatmentControl corresponds \\(\\beta_2\\). analysis applies. 95% confident true value average attitude toward immigration Control population 7.9 9.1.now, used Bayesian interpretation “confidence interval.” also intuitive meaning , outside academia, almost universal. truth . don’t know, sometimes can’t know, truth. confidence interval, associated confidence level, tells us likely truth lie within specific range. boss asks confidence interval, almost certainly using interpretation., contemporary academic research, phrase “confidence interval” usually given “Frequentist” interpretation. (biggest divide statistics Bayesians Frequentist interpretations. Frequentist approach, also known “Classical” statistics, dominant 100 years. power fading, textbook uses Bayesian approach.) Frequentist, 95% confidence interval means , apply procedure used infinite number future situations like , expect true value fall within calculated confidence intervals 95% time. academia, distinction sometimes made confidence intervals (use Frequentist interpretation) credible intervals (use Bayesian interpretation). won’t worry difference book.Let’s look entire posteriors \\(\\beta_1\\) \\(\\beta_2\\).appears affect treatment change people’s attitudes conservative immigration issues. somewhat surprising!can decompose dependent variable, att_end two parts: fitted values residuals. two possible fitted values, one Treated one Control. residuals, always, simply difference outcomes fitted values.smaller spread residuals, better job model explaining outcomes.","code":"\nset.seed(9)\nfit_obj <- stan_glm(att_end ~ treatment - 1, \n                    data = trains, \n                    refresh = 0)\n\nfit_obj## stan_glm\n##  family:       gaussian [identity]\n##  formula:      att_end ~ treatment - 1\n##  observations: 115\n##  predictors:   2\n## ------\n##                  Median MAD_SD\n## treatmentTreated 10.0    0.4  \n## treatmentControl  8.5    0.3  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 2.8    0.2   \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nfit_obj %>% \n  as_tibble() %>% \n  select(-sigma) %>% \n  pivot_longer(cols = treatmentTreated:treatmentControl,\n               names_to = \"parameter\",\n               values_to = \"attitude\") %>% \n  ggplot(aes(x = attitude, color = parameter)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Average attitude toward immigration\",\n         x = \"Attitude\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format()) + \n    theme_classic()"},{"path":"three-parameters.html","id":"temperance-3","chapter":"8 Three Parameters","heading":"8.2.4 Temperance","text":"\nFIGURE 8.8: Temperance\nRecall first question began section:average treatment effect, exposing people Spanish-speakers, attitudes toward immigration?Recall Chapter 4 discussion average treatment effect. One simple estimator average treatment effect difference \\(\\beta_1\\) \\(\\beta_2\\). , definition \\(\\beta_1\\) average attitude toward immigration, population, anyone, exposure treatment. , \\(\\beta_1 - \\beta_2\\) average treatment effect population, roughly 1.5. However, estimating posterior probability distribution parameter tricky, unless make use posterior distributions \\(\\beta_1\\) \\(\\beta_2\\). information, problem simple:true value average treatment effect much 2 little 1? course! likely value around 1.5, variation data smallness sample cause estimate imprecise. However, quite unlikely true average treatment effect zero.second question:largest effect size still 1 10 chance occurring?answer question, first need create tibble can pass posterior_predict(). variables tibbles passed newdata must exactly counterparts original data. example, treatment must factor, levels trains.Consider result posterior_predict() someone treated someone control group.case, looking distribution treatment effect single individual. different average treatment effect. particular, much variable. looking one row Preceptor Table. single individual, att_end can anywhere 3 15, treatment control. causal effect — difference two potential outcomes can, theory, anywhere -12 +12. extreme values rare, impossible.question, however, interested value 90th percentile. model, 6.78. expect treatment effect magnitude common, , time, effects big bigger occur 10% time.","code":"\nset.seed(14)\nfit_obj %>% \n  as_tibble() %>% \n  mutate(ate = treatmentTreated - treatmentControl) %>% \n  ggplot(aes(x = ate)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Probability Distribution for ATE\",\n         subtitle = \"Exposure to Spanish-speakers shifts immigration attitudes rightward\",\n         x = \"Difference in Attitude\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()\nate_data <- tibble(treatment =\n                     factor(c(\"Treated\", \"Control\"),\n                            levels = c(\"Treated\", \"Control\")))\npp <- posterior_predict(fit_obj, \n                        newdata = ate_data) %>%\n    as_tibble() %>%\n    mutate_all(as.numeric)\n\n\nte <- tibble(Treated = pp$`1`, Control = pp$`2`)  %>% \n  mutate(te = Treated - Control) \n\nte %>% \n  ggplot(aes(x = te)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100)  +\n    labs(title = \"Posterior Probability Distribution for Treatment Effect\",\n         subtitle = \"Causal effects are more variable for indivduals\",\n         x = \"Difference in Attitude\",\n         y = \"Probability\") +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"three-parameters.html","id":"income-age","chapter":"8 Three Parameters","heading":"8.3 income ~ age","text":"far, created models predictor variable discrete, two possible values. party either “Democrat” “Republican.” treatment either “Treated” “Control.” Often times, however, predictor variable continuous. Fortunately, exact approach works case well.expect income random 40 year old?","code":""},{"path":"three-parameters.html","id":"wisdom-4","chapter":"8 Three Parameters","heading":"8.3.1 Wisdom","text":"\nFIGURE 8.9: Wisdom\nmaking model seeks explain income, plot variable think connected .data believable? Maybe? One imagine income recorded exactly , therefore, surprising many people exactly income. Rounding makes different numbers , . (almost) complete lack people reporting income $150,000 $250,000. real data science project, puzzle require investigation. now, ignore issue blithely press .","code":"\nch8 %>%\n  ggplot(aes(x = age, y = income)) + \n  geom_point() + \n  labs(title = \"Income and Age\",\n       subtitle = \"Older people make more money. Maybe?\",\n       x = \"Age\",\n       y = \"Income\") +\n  scale_y_continuous(labels = scales::dollar_format(accuracy = 1))"},{"path":"three-parameters.html","id":"justice-4","chapter":"8 Three Parameters","heading":"8.3.2 Justice","text":"\nFIGURE 8.10: Justice\nmathematics continuous predictor unchanges intercept-including example discussed .\\[ y_i = \\beta_0  + \\beta_1 age_i + \\epsilon_i\\]comparing two people (persons 1 2), one aged one year older , \\(\\beta_1\\) expected difference incomes. algebra simple:\\[ y_1 = \\beta_0  + \\beta_1 age_1\\]\n\\[ y_2 = \\beta_0  + \\beta_1 age_2\\]\n$$ y_1 - y_2 = _0 + _1 age_1 - _0 - _1 age_2\\y_1 - y_2 = _1 age_1 - _1 age_2\\y_1 - y_2 = _1 (age_1 - age_2)\\$$\n, person 1 one year older person 2, :\\[y_1 - y_2 = \\beta_1 (age_1 - age_2)\\\\\ny_1 - y_2 = \\beta_1 (1)\\\\\ny_1 - y_2 = \\beta_1 \\\\\n\\]","code":""},{"path":"three-parameters.html","id":"courage-4","chapter":"8 Three Parameters","heading":"8.3.3 Courage","text":"\nFIGURE 8.11: Courage\nuse stan_glm() .","code":"\nfit_3 <- stan_glm(income ~ age, \n                  data = trains, \n                  refresh = 0)\n\nprint(fit_3, details = FALSE)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      income ~ age\n##  observations: 115\n##  predictors:   2\n## ------\n##             Median   MAD_SD  \n## (Intercept) 104168.8  25744.9\n## age            886.0    584.6\n## \n## Auxiliary parameter(s):\n##       Median  MAD_SD \n## sigma 74157.9  5007.8\n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg"},{"path":"three-parameters.html","id":"temperance-4","chapter":"8 Three Parameters","heading":"8.3.4 Temperance","text":"\nFIGURE 8.12: Temperance\nRecall question:expect income random 40 year old?Given looking expected value, use posterior_epred().","code":"\nnewobs <- tibble(age = 40)\n\npe <- posterior_epred(fit_3, newdata = newobs) %>% \n  as_tibble() %>% \n  mutate_all(as.numeric)\n\npe %>% \n  ggplot(aes(x = `1`)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100)  +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Expected income for a 40 year-old commuter\",\n         x = \"Income\",\n         y = \"Probability\") +\n    scale_x_continuous(labels = scales::dollar_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"three-parameters.html","id":"liberal-income","chapter":"8 Three Parameters","heading":"8.4 liberal ~ income","text":"far chapter, considered continuous outcome variables. age, att_end income take variety values. None , truly, continuous, course. age reported integer value. att_end can , definition, take 13 distinct values. However, modeling perspective, matters 2 possible values.liberal, however, takes two values: TRUE FALSE. order model , must use binomial family.first, following wisdom, let’s look data.","code":"\nch8_lib_inc <- trains %>% \n  select(liberal, income) %>% \n  mutate(income = income / 1000)\n\nfit_4 <- stan_glm(data = ch8_lib_inc,\n                  formula = liberal ~ income,\n                  family = binomial,\n                  refresh = 0,\n                  seed = 365)\n\nprint(fit_4, digits = 3)## stan_glm\n##  family:       binomial [logit]\n##  formula:      liberal ~ income\n##  observations: 115\n##  predictors:   2\n## ------\n##             Median MAD_SD\n## (Intercept)  0.563  0.426\n## income      -0.006  0.003\n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg"},{"path":"three-parameters.html","id":"summary-8","chapter":"8 Three Parameters","heading":"8.5 Summary","text":"chapter, explored relationships different variables trains data set. built predictive model causal model.Similar previous chapters, first task use Wisdom . judge relevant data questions ask, using ethics guide decision. income data 2012 really suitable making predictions today? Probably? Justice necessary decide best way represent models make. use Courage translate models code. goal understand, generate posterior distributions, interpret meaning. Temperance leads us final stage. remind many unknown factors affect data. models never good hope . always use caution applying models real world.","code":""},{"path":"four-parameters.html","id":"four-parameters","chapter":"9 Four Parameters","heading":"9 Four Parameters","text":"haste make progress — get way process building, interpreting using models — given short shrift messy details model building evaluation. chapter fills lacunae. also introduce models four parameters.","code":""},{"path":"four-parameters.html","id":"transforming-predictor-variables","chapter":"9 Four Parameters","heading":"9.1 Transforming predictor variables","text":"often convenient transform predictor variable.","code":""},{"path":"four-parameters.html","id":"centering","chapter":"9 Four Parameters","heading":"9.1.1 Centering","text":"Recall model income function age. Mathematics:\\[ y_i = \\beta_0  + \\beta_1 age_i + \\epsilon_i\\]fit using trains data primer.data.nothing wrong model. Yet interpretation \\(\\beta_0\\), intercept regression, awkward. means average income people age zero. Yet useless! people zero age data. , even , weird think people taking commuter trade Boston filling survey forms.easy, however, transform age variable makes intercept meaningful. Consider new variable, c_age, age minus average age sample. Using centered version age change predictions residuals model, make intercept easier interpret.intercept, 1.42^{5}, expected income someone age_c = 0, .e., someone average age data, around 42.","code":"\nlibrary(tidyverse)\nlibrary(primer.data)\nlibrary(rstanarm)\nfit_1 <- stan_glm(formula = income ~ age, \n         data = trains, \n         refresh = 0,\n         seed = 9)\n\nprint(fit_1, detail = FALSE)##             Median   MAD_SD  \n## (Intercept) 103379.6  24657.3\n## age            904.7    561.4\n## \n## Auxiliary parameter(s):\n##       Median  MAD_SD \n## sigma 74166.4  5146.6\ntrains_2 <- trains %>% \n  mutate(c_age = age - mean(age))\n\nfit_1_c <- stan_glm(formula = income ~ c_age, \n                    data = trains_2, \n                    refresh = 0,\n                    seed = 9)\n\nprint(fit_1_c, detail = FALSE)##             Median   MAD_SD  \n## (Intercept) 141804.2   7188.0\n## c_age          906.7    572.9\n## \n## Auxiliary parameter(s):\n##       Median  MAD_SD \n## sigma 74273.6  4882.0"},{"path":"four-parameters.html","id":"scaling","chapter":"9 Four Parameters","heading":"9.1.2 Scaling","text":"Centering — changing vector via addition/subtraction — often makes intercept easier interpret. Scaling — changing vector via multiplication/division — often makes easier interpret coefficients. common scaling method divide vector standard deviation.s_age age scaled standard deviation. change one unit s_age change one standard deviation age, 12. interpretation \\(\\beta_1\\) now:comparing two people, one 1 standard deviation worth years older , expect older person earn NA ., scaled without centering, intercept now back (nonsensical) meaning expected income people age 0.","code":"\ntrains_3 <- trains %>% \n  mutate(s_age = age / sd(age))\n\nfit_1_s <- stan_glm(formula = income ~ s_age, \n                    data = trains_3, \n                    refresh = 0,\n                    seed = 9)\n\nprint(fit_1_s, detail = FALSE)##             Median   MAD_SD  \n## (Intercept) 103061.4  25235.6\n## s_age        11121.0   6921.6\n## \n## Auxiliary parameter(s):\n##       Median  MAD_SD \n## sigma 74124.8  4959.5"},{"path":"four-parameters.html","id":"z-scores","chapter":"9 Four Parameters","heading":"9.1.3 z-scores","text":"common transformation applies centering scaling. base R function scale() subtracts mean divides standard deviation. variable transformed \"z-score, meaning vector mean zero standard deviation one. Using z-scores makes interpretation easier, especially seek compare importance different predictors.two parameters easy interpret transformation.expected income someone average age, 42 study, 1.42^{5} dollars.comparing two individuals differ age one standard deviation, 12 study, older person expected earn rscales::comma(round(coef(fit_1_z)[“age_z”], -3))` younger.Note , using z-scores, often phrase comparison terms “sigmas.” One person “one sigma” older another person means one standard deviation older. simple enough, get used , also confusing since already using word “sigma” mean \\(\\sigma\\), standard deviation \\(\\epsilon_i\\). Alas, language something deal rather control. hear word “sigma” applied concepts, even sentence. Determine meaning context.","code":"\ntrains_4 <- trains %>% \n  mutate(z_age = scale(age))\n\nfit_1_z <- stan_glm(formula = income ~ z_age, \n                    data = trains_4, \n                    refresh = 0,\n                    seed = 9)\n\nprint(fit_1_z, detail = FALSE)##             Median   MAD_SD  \n## (Intercept) 141650.2   7101.3\n## z_age        10899.1   6712.0\n## \n## Auxiliary parameter(s):\n##       Median  MAD_SD \n## sigma 74300.4  5019.0"},{"path":"four-parameters.html","id":"taking-logs","chapter":"9 Four Parameters","heading":"9.1.4 Taking logs","text":"","code":""},{"path":"four-parameters.html","id":"adding-transformed-terms","chapter":"9 Four Parameters","heading":"9.1.5 Adding transformed terms","text":"Instead simply transforming variables, can add terms transformed versions variable. Consider relation height age nhanes. Let’s start dropping missing values.Fit plot simple linear model:good model, obviously.Adding quadratic term makes better. (Note need () creating squared term within formula argument.)Still, made use background knowledge creating variables. know people don’t get taller age 18 . Let’s create variables capture break.point take variables receive given. captains souls. transform variables needed.","code":"\nno_na_nhanes <- nhanes %>% \n  select(height, age) %>% \n  drop_na() \nnhanes_1 <- stan_glm(height ~ age,\n                     data = no_na_nhanes,\n                     refresh = 0,\n                     seed = 47)\n\nno_na_nhanes %>% \n  ggplot(aes(x = age, y = height)) +\n    geom_point(alpha = 0.1) +\n    geom_line(aes(y = predict(nhanes_1)), \n              color = \"red\") +\n    labs(title = \"Age and Height\",\n         subtitle = \"Children are shorter, but a linear fit is poor\",\n         x = \"Age\",\n         y = \"Height (cm)\",\n         caption = \"Data source: NHANES\")\nnhanes_2 <- stan_glm(height ~ age + I(age^2),\n                     data = no_na_nhanes,\n                     refresh = 0,\n                     seed = 33)\n\nno_na_nhanes %>% \n  ggplot(aes(x = age, y = height)) +\n    geom_point(alpha = 0.1) +\n    geom_line(aes(y = predict(nhanes_2)), \n              color = \"red\") +\n    labs(title = \"Age and Height\",\n         subtitle = \"Quadratic fit is much better, but still poor\",\n         x = \"Age\",\n         y = \"Height (cm)\",\n         caption = \"Data source: NHANES\")\nnhanes_3 <- stan_glm(height ~ I(ifelse(age > 18, 18, age)),\n                     data = no_na_nhanes,\n                     refresh = 0,\n                     seed = 23)\n\nno_na_nhanes %>% \n  ggplot(aes(x = age, y = height)) +\n    geom_point(alpha = 0.1) +\n    geom_line(aes(y = predict(nhanes_2)), \n              color = \"red\") +\n    labs(title = \"Age and Height\",\n         subtitle = \"Domain knowledge makes for better models\",\n         x = \"Age\",\n         y = \"Height (cm)\",\n         caption = \"Data source: NHANES\")"},{"path":"four-parameters.html","id":"if-parameters-are-unicorns-why-bother-with-transformations","chapter":"9 Four Parameters","heading":"9.1.6 If parameters are unicorns, why bother with transformations?","text":"","code":""},{"path":"four-parameters.html","id":"transforming-the-outcome-variable","chapter":"9 Four Parameters","heading":"9.2 Transforming the outcome variable","text":"Transforming predictor variables generally uncontroversial. matter much. Change continuous predictor variables \\(z\\)-scores won’t go far wrong. keep original form, take care interpretations. ’s good.Transforming outcome variable much difficult question, right answers.","code":""},{"path":"four-parameters.html","id":"selecting-variables","chapter":"9 Four Parameters","heading":"9.3 Selecting variables","text":"decide variables include model? ","code":""},{"path":"four-parameters.html","id":"comparing-models","chapter":"9 Four Parameters","heading":"9.4 Comparing models","text":"Deciding variables include model subset larger question: decide model, set possible models, choose?Consider two models explain attitudes immigration among Boston commuters.seem like good models! results make sense. People liberal liberal attitudes immigration, expect att_end scores lower. also expect people provide similar answers two surveys administered week two apart. makes sense higher (conservative) values att_start also higher values att_end.choose models?","code":"\nfit_liberal <- stan_glm(formula = att_end ~ liberal,\n                  data = trains,\n                  refresh = 0,\n                  seed = 42)\n\nprint(fit_liberal, detail = FALSE)##             Median MAD_SD\n## (Intercept) 10.0    0.3  \n## liberalTRUE -2.0    0.5  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 2.7    0.2\nfit_att_start <- stan_glm(formula = att_end ~ att_start,\n                  data = trains,\n                  refresh = 0,\n                  seed = 85)\n\nprint(fit_att_start, detail = FALSE)##             Median MAD_SD\n## (Intercept) 1.6    0.4   \n## att_start   0.8    0.0   \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 1.4    0.1"},{"path":"four-parameters.html","id":"better-models-make-better-predictions","chapter":"9 Four Parameters","heading":"9.4.1 Better models make better predictions","text":"obvious criteria comparing models accuracy predictions. example, consider use liberal predict att_end.two possible values liberal — TRUE FALSE — two predictions model make: 10 liberal == FALSE 8 liberal == TRUE. (points plot jittered.) individuals, perfect predictions. others, poor predictions. (Note two individuals liberal == TRUE, model thinks att_end == 8, att_end == 15. mode got , wrong.)Consider second model, using att_start forecast att_end.att_end takes 13 unique values, model makes 13 unique predictions. predictions perfect! others wrong. Note individual predicted att_end around 9 actual value 15. big miss!Rather looking individual cases, need look errors predictions. Fortunately, prediction error thing residual, easy enough calculate.Let’s look square root average squared error.many different measures error might calculate. squared difference common historical reasons: mathemtically tractable pre-computer age. calculated squared difference observation, can sum take average take square root average. produce relative ranking, last popular (less) corresponds estimated \\(\\sigma\\) linear model. Note measures ones produced Bayesian models created .Sadly, wise simply select model fits data best can misleading. , cheating! using data select parameters , using data , turning around “checking” see well model fits data. better fit! used pick parameters! danger overfitting.","code":"\ntrains %>% \n  mutate(pred_liberal = predict(fit_liberal)) %>% \n  ggplot(aes(x = pred_liberal, y = att_end)) +\n    geom_jitter(width = 0.05, height = 0.2, alpha = 0.5) +\n    labs(title = \"Modeling Attitude Toward Immigration\",\n         subtitle = \"Liberals are less conservative\",\n         x = \"Predicted Attitude\",\n         y = \"True Attitude\")\ntrains %>% \n  mutate(pred_liberal = predict(fit_att_start)) %>% \n  ggplot(aes(x = pred_liberal, y = att_end)) +\n    geom_jitter(width = 0.05, height = 0.2, alpha = 0.5) +\n    labs(title = \"Modeling Attitude Toward Immigration\",\n         subtitle = \"Survey responses are somewhat consistent\",\n         x = \"Predicted Attitude\",\n         y = \"True Attitude\")\ntrains %>% \n  select(att_end, att_start, liberal) %>% \n  mutate(pred_lib = predict(fit_liberal)) %>% \n  mutate(resid_lib = predict(fit_liberal) - att_end) %>% \n  mutate(pred_as = predict(fit_att_start)) %>% \n  mutate(resid_as = predict(fit_att_start) - att_end)## # A tibble: 115 x 7\n##    att_end att_start liberal pred_lib resid_lib pred_as resid_as\n##      <dbl>     <dbl> <lgl>      <dbl>     <dbl>   <dbl>    <dbl>\n##  1      11        11 FALSE      10.0    -0.974    10.6    -0.399\n##  2      10         9 FALSE      10.0     0.0259    8.97   -1.03 \n##  3       5         3 TRUE        8.02    3.02      4.08   -0.916\n##  4      11        11 FALSE      10.0    -0.974    10.6    -0.399\n##  5       5         8 TRUE        8.02    3.02      8.16    3.16 \n##  6      13        13 FALSE      10.0    -2.97     12.2    -0.769\n##  7      13        13 FALSE      10.0    -2.97     12.2    -0.769\n##  8      11        10 FALSE      10.0    -0.974     9.79   -1.21 \n##  9      12        12 FALSE      10.0    -1.97     11.4    -0.584\n## 10      10         9 FALSE      10.0     0.0259    8.97   -1.03 \n## # … with 105 more rows\ntrains %>% \n  select(att_end, att_start, liberal) %>% \n  mutate(lib_err = (predict(fit_liberal) - att_end)^2) %>% \n  mutate(as_err = (predict(fit_att_start) - att_end)^2) %>% \n  summarize(lib_sigma = sqrt(mean(lib_err)),\n            as_sigma = sqrt(mean(as_err))) ## # A tibble: 1 x 2\n##   lib_sigma as_sigma\n##       <dbl>    <dbl>\n## 1      2.68     1.35"},{"path":"four-parameters.html","id":"beware-overfitting","chapter":"9 Four Parameters","heading":"9.4.2 Beware overfitting","text":"One biggest dangers data science overfitting, using model many parameters fits data well , therefore, works poorly data yet see. Consider simple example 10 data points.happens fit model one predictor?reasonable model. fit data particularly well, certainly believe higher values x associated higher values y. linear fit unreasonable.can also use lessons try quadratic fit adding \\(x^2\\) predictor.better model? Maybe?stop adding \\(x^2\\) regression? add \\(x^3\\), \\(x^4\\) way \\(x^9\\)? , fit much better.criteria cared well model predicts using data parameters estimated, model parameters always better. truly matters. matters well model works data used create model.","code":"\nnine_pred <- lm(y ~ poly(x, 9),\n                       data = ovrftng)\n\nnewdata <- tibble(x = seq(1, 10, by = 0.01),\n                  y = predict(nine_pred, \n                              newdata = tibble(x = x)))\n\novrftng %>% \n  ggplot(aes(x, y)) +\n    geom_point() +\n    geom_line(data = newdata, \n              aes(x, y)) +\n    labs(title = \"`y` as a 9-Degree Polynomial Function of `x`\") +\n    scale_x_continuous(breaks = seq(2, 10, 2)) +\n    scale_y_continuous(breaks = seq(2, 10, 2)) "},{"path":"four-parameters.html","id":"better-models-make-better-predictions-on-new-data","chapter":"9 Four Parameters","heading":"9.4.3 Better models make better predictions on new data","text":"","code":""},{"path":"four-parameters.html","id":"selecting-the-rows","chapter":"9 Four Parameters","heading":"9.4.4 Selecting the rows","text":"","code":""},{"path":"four-parameters.html","id":"testing-is-nonsense","chapter":"9 Four Parameters","heading":"9.5 Testing is nonsense","text":"","code":""},{"path":"four-parameters.html","id":"summary-9","chapter":"9 Four Parameters","heading":"9.6 Summary","text":"","code":""},{"path":"five-parameters.html","id":"five-parameters","chapter":"10 Five Parameters","heading":"10 Five Parameters","text":"next step model building education learn interactions. effect treatment relative control almost never uniform. effect might bigger women men, smaller rich relative poor. technical term effects “heterogenous,” just Ph.D.’ese “different.” enough data, effects heterogenous. Causal effects, least social science, always vary across units. model reality, rely “interactions,” allowing effect size differ. , need least 5 parameters.","code":""},{"path":"five-parameters.html","id":"eda-of-governors","chapter":"10 Five Parameters","heading":"10.1 EDA of governors","text":"Packages:use governors data set primer.data package. data set, Barfort, Klemmensen, Larsen (2020), features demographic information candidates governor United States. Barfort, Klemmensen, Larsen (2020) conclude winning gubernatorial election increases candidate’s lifespan.14 variables 1,092 observations. Chapter, looking variables last_name, year, state, sex, lived_after, election_age.election_age lived_after many years candidate lived election many years candidate lived election, respectively. consequence, politicians already deceased included data set. means handful observations elections last 20 years. candidates time period still alive , therefore, excluded.sex often “Male,” might expect.TABLE 10.1: Data summaryVariable type: characterVariable type: numericskim() groups variables together type. given histograms numeric data. looking histogram year, see skewed right — meaning data bunched left smaller tail right — half observations election years 1945 1962. makes sense logically, looking deceased candidates, candidates recent elections likely still alive.using data set, left-side variable lived_after. trying understand/predict many years candidate live election.Starting relationship lived_after year, can see rough line observations. data points top right portion graph possible run 2011 live 50 years election took place. edge data represents, approximately, years candidate possibly lived, still died, given year election. reason data slanted downward maximum value scenario greater earlier years. , candidates ran governor earlier years live long time election still died prior data set creation, giving higher lived_after values ran office recent years. edge scatter plot perfectly straight , many election years, candidate decency die just data collection.fewer observations later years fewer recent candidates died recently.plot shows men live much longer, average, women election. make sense ?","code":"\nlibrary(primer.data)\nlibrary(skimr)\nlibrary(tidyverse)\nlibrary(rstanarm)\nglimpse(governors)## Rows: 1,092\n## Columns: 14\n## $ state        <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"…\n## $ year         <int> 1946, 1946, 1950, 1954, 1954, 1958, 1962, 1966, 1966, 19…\n## $ first_name   <chr> \"James\", \"Lyman\", \"Gordon\", \"Tom\", \"James\", \"William\", \"…\n## $ last_name    <chr> \"Folsom\", \"Ward\", \"Persons\", \"Abernethy\", \"Folsom\", \"Lon…\n## $ party        <chr> \"Democrat\", \"Republican\", \"Democrat\", \"Republican\", \"Dem…\n## $ sex          <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", …\n## $ died         <date> 1987-11-21, 1948-12-17, 1965-05-29, 1968-03-07, 1987-11…\n## $ status       <chr> \"Challenger\", \"Challenger\", \"Challenger\", \"Challenger\", …\n## $ win_margin   <dbl> 77.3, -77.3, 82.2, -46.7, 46.7, -77.5, 100.0, -34.3, 34.…\n## $ region       <chr> \"South\", \"South\", \"South\", \"South\", \"South\", \"South\", \"S…\n## $ population   <dbl> 2906000, 2906000, 3058000, 3014000, 3014000, 3163000, 33…\n## $ election_age <dbl> 38, 79, 49, 47, 46, 33, 43, 48, 40, 51, 68, 55, 45, 52, …\n## $ death_age    <dbl> 79, 81, 63, 60, 79, 88, 79, 99, 42, 79, 75, 79, 76, 81, …\n## $ lived_after  <dbl> 41.0, 2.1, 14.6, 13.3, 33.0, 54.5, 35.9, 51.0, 1.5, 27.9…\nch10 <- governors %>% \n  select(last_name, year, state, sex, lived_after, election_age)\nsample_n(ch10, 5)## # A tibble: 5 x 6\n##   last_name  year state        sex    lived_after election_age\n##   <chr>     <int> <chr>        <chr>        <dbl>        <dbl>\n## 1 Ristine    1964 Indiana      Male          44.6         44.8\n## 2 Sundlun    1986 Rhode Island Male          24.7         66.8\n## 3 Richards   1990 Texas        Female        15.9         57.2\n## 4 Turner     1946 Oklahoma     Male          26.6         52.0\n## 5 Williams   1948 Michigan     Male          39.2         37.7\nskim(ch10)\nch10 %>%\n  ggplot(aes(x = year, y = lived_after)) +\n  geom_point() +\n  labs(title = \"US Gubernatorial Candidate Years Lived Post-Election\",\n       subtitle = \"Candidates who died more recently can't have lived for long post-election\",\n       caption = \"Data: Barfort, Klemmensen and Larsen (2019)\",\n       x = \"Year\",\n       y = \"Years Lived After Election\") +\n  scale_y_continuous(labels = scales::label_number()) +\n  theme_classic() \nch10 %>%\n  ggplot(aes(x = sex, y = lived_after)) +\n  geom_boxplot() +\n  labs(title = \"US Gubernatorial Candidate Years Lived Post-Election\",\n       subtitle = \"Male candidates live much longer after the election\",\n       caption = \"Data: Barfort, Klemmensen and Larsen (2019)\",\n       x = \"Gender\",\n       y = \"Years Lived After Election\") +\n  scale_y_continuous(labels = scales::label_number()) +\n  theme_classic() "},{"path":"five-parameters.html","id":"wisdom-5","chapter":"10 Five Parameters","heading":"10.2 Wisdom","text":"\nFIGURE 10.1: Wisdom\nconcept “population” subtle important. population set candidates data. data set. population larger — potentially much larger — set individuals want make inferences. parameters models refer population, data set.Consider simple example. Define \\(\\mu\\) average number years lived candidates governor Election Day. Can calculate \\(\\mu\\) data? ! many candidates governor still alive, included data even though part “population” want study. \\(\\mu\\) can calculated. can estimated.Note, also, many different populations, \\(\\mu\\), might interested.population candidates governor US 1945 2012. period covered paper.population candidates governor US 1945 2012. period covered paper.population candidates governor US 1900 2012. priori, expect major difference candidates run 1946 run 1942. different ? therefore unreasonable extend population interest back time, even data earlier periods.population candidates governor US 1900 2012. priori, expect major difference candidates run 1946 run 1942. different ? therefore unreasonable extend population interest back time, even data earlier periods.population candidates governor US 1945 2030. often interested future. want make predictions happen candidates, even candidates yet run office.population candidates governor US 1945 2030. often interested future. want make predictions happen candidates, even candidates yet run office.population candidates governor around world. countries governors also! want understand longevity well.population candidates governor around world. countries governors also! want understand longevity well.population candidates political offices US. might expect candidates Senator similar lifespans candidates Governor.population candidates political offices US. might expect candidates Senator similar lifespans candidates Governor.. many possible populations questions might ask.. many possible populations questions might ask.populations different, different \\(\\mu\\). \\(\\mu\\) interested depends problem trying solve. judgment call, matter Wisdom, whether data “close enough” population interested justify making model.","code":""},{"path":"five-parameters.html","id":"justice-and-courage","chapter":"10 Five Parameters","heading":"10.3 Justice and Courage","text":"\nFIGURE 10.2: Justice\n\nFIGURE 10.3: Courage\ngoing series models chapter, useful combine virtues Justice Courage.","code":""},{"path":"five-parameters.html","id":"election_age","chapter":"10 Five Parameters","heading":"10.3.1 election_age","text":"begin, let’s model candidate lifespan election function candidate lifespan prior election. data:math fairly simple:\\[ lived\\_after_i =  \\beta_0 + \\beta_1 election\\_age_i + \\epsilon_i \\]\\(\\epsilon_i \\sim N(0, \\sigma^2)\\). \\(lived\\_after_i\\) number years lived election candidate \\(\\). \\(election\\_age_i\\) number years lived election candidate \\(\\). \\(\\epsilon_i\\) “error term,” difference actual years-lived candidate \\(\\) modeled years-lived. \\(\\epsilon_i\\) normally distributed mean 0 standard deviation \\(\\sigma\\). key distinction :Variables, always subscripted \\(\\), whose values (potentially) vary across individuals.Variables, always subscripted \\(\\), whose values (potentially) vary across individuals.Parameters, never subscripted \\(\\), whose values constant across individuals.Parameters, never subscripted \\(\\), whose values constant across individuals.\\(\\beta_0\\) “intercept” regression, average value population \\(alive\\_post\\), among \\(alive\\_pre = 0\\). \\(\\beta_1\\) “coefficient” \\(alive\\_pre\\). one day increase \\(alive\\_pre\\) associated \\(\\beta_1\\) change \\(alive\\_post\\). , value population data drawn.three unknown parameters — \\(\\beta_0\\), \\(\\beta_1\\) \\(\\sigma\\) — just models used Chapter 8.may recall middle school algebra equation line \\(y = m x + b\\). two parameters: \\(m\\) \\(b\\). intercept \\(b\\) value \\(y\\) \\(x = 0\\). slope coefficient \\(m\\) \\(x\\) increase \\(y\\) every increase one \\(x\\). defining regression line, use slightly different notation fundamental relationship .can use geom_smooth() create fitted regression line:Consider someone 40 years old Election Day. score data points candidates around age. Two died soon election. lived 50 years election. Variation fills world. fitted line tells us , average, expect candidate age live little less 40 years election.model, continuous independent (“predictor”) variable, infinite number fitted values, one possible value election_age. different models saw Chapter 8. models two possible fitted values predictor variable took two possible values.can implement model stan_glm().discussed Chapter 8, common term model like “regression.” “regressed” lived_after, dependent variable, election_age, () independent variable.parameter values:almost always case, \\(\\sigma\\) nuisance parameter, somethings whose value interested . stan_glm() refers “Auxiliary” parameter.posterior distributions \\(\\beta_0\\) (intercept) \\(\\beta_1\\) (coefficient \\(election\\_age_i\\)), hand, important. looking posteriors , let’s examine fitted values:code code used , except replaced geom_smooth() geom_line(). Calling fitted() model returns set fitted values, plotted hand.can create formula fitted values placing median values parameters model:\\[ lived\\_after_i =  26,500 - 0.9 election\\_age_i\\]Consider intercept. Since independent variable \\(election\\_age_i\\), intercept \\(lived\\_after_i\\) value \\(election\\_age_i\\) zero. , interpret intercept average lifespan gubernatorial candidate election, candidate alive zero years prior election., course, substantively nonsense. one runs office day born. next model, explore ways making intercept interpretable. meantime, math math.Consider coefficient \\(election\\_age_i\\), \\(\\beta_1\\). median posterior, -0.9, represents slope model. every unit increase independent variable, dependent variable change amount. every additional day candidate alive election, lifespan election 0.9 years lower, average. given number years candidate lived election want estimate long live , multiply years alive prior beta -0.9, combine intercept.descriptive model, causal model. Remember motto Chapter 4: causation without manipulation. way, person \\(\\), change years alive Election Day. day election, X years old. way change . , two () potential outcomes. Without one potential outcome, can causal effect.Given , important monitor language. believe changes election_age “cause” changes lived_after. obvious. words phrases — like “associated ” “change ” — close causal. (guilty using just paragraphs ago!) wary use. Always think terms comparisons using predictive model. can’t change election_age X Y individual candidate. can compare two candidates (two groups candidates), one election_age equal X election_age equal Y. model correct, candidates , average, differ lived_after \\(\\beta_1\\) times difference X Y.Let’s look posterior \\(\\beta_1\\), coefficient \\(election\\_age_i\\):center variables model’s intercept make substantive sense. center model, pick constant value, usually mean independent variable, subtract constant every value independent variable. Another option pick reasonable reference value, like 50 years-old. Either way, meaning election_age changes raw number years candidate alive number years relative reference value.example, want center value election_age, independent variable. First, must pick value center . , use mean election_age, 52 years old. find number, subtract every election_age value, creating new variable: election_age_c, “c” stand centered. election_age_c number years candidate alive, Election Day, relative average years alive candidates respective election days.can see intercept decreased slope stayed . interpret model, change definition intercept. Rather intercept representing remaining years candidate alive zero years running governor, now represents post-election lifespan gubernatorial candidate alive mean number years running. candidate alive 52 years running governor, expected live 28 years election, average.Think hard parameters. mean? population represent? ideal Preceptor Table make calculation easy? case, \\(\\beta_0\\) average number years gubernatorial candidates live election day, just subset candidates average age Election Day. ideal Preceptor Table, trivial calculate. Just take average subset! estimation required. , actual Preceptor Table lots missing values. particular, many gubernatorial candidates . . . uh . . . died. (inconsiderate!) , can’t know many years live. can , first, define \\(\\beta_0\\) , second, estimate posterior probability distribution .","code":"\nch10 %>% \n  ggplot(aes(x = election_age, y = lived_after)) +\n    geom_point() +\n    labs(title = \"Longevity of Gubernatorial Candidates\",\n         subtitle = \"Younger candidates live longer\", \n         caption = \"Data Source: Barfort, Klemmensen and Larsen (2019)\",\n         x = \"Age in Years on Election Day\",\n         y = \"Years Lived After Election\") +\n    scale_x_continuous(labels = scales::label_number()) +\n    scale_y_continuous(labels = scales::label_number()) +\n    theme_classic()\nch10 %>% \n  ggplot(aes(x = election_age, y = lived_after)) +\n    geom_point() +\n    geom_smooth(formula = y ~ x, method = \"lm\", se = FALSE) +\n    labs(title = \"Longevity of Gubernatorial Candidates\",\n         subtitle = \"Younger candidates live longer\", \n         caption = \"Data Source: Barfort, Klemmensen and Larsen (2019)\",\n         x = \"Age in Years\",\n         y = \"Years Lived After Election\") +\n    scale_x_continuous(labels = scales::label_number()) +\n    scale_y_continuous(labels = scales::label_number()) +\n    theme_classic() \nfit_gov_1 <- stan_glm(data = ch10,\n                      formula = lived_after ~ election_age,\n                      refresh = 0,\n                      seed = 9)\nprint(fit_gov_1, detail = FALSE)##              Median MAD_SD\n## (Intercept)  72.7    2.1  \n## election_age -0.9    0.0  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 11.1    0.2\nch10 %>% \n  ggplot(aes(x = election_age, y = lived_after)) +\n    geom_point() +\n    geom_line(aes(y = fitted(fit_gov_1)), color = \"blue\") +\n    labs(title = \"Longevity of Gubernatorial Candidates\",\n         subtitle = \"Blue line shows fitted values\", \n         caption = \"Data Source: Barfort, Klemmensen and Larsen (2019)\",\n         x = \"Age in Years\",\n         y = \"Years Lived After Election\") +\n    scale_x_continuous(labels = scales::label_number()) +\n    scale_y_continuous(labels = scales::label_number()) +\n    theme_classic()\nfit_gov_1 %>% \n  as_tibble() %>% \n  ggplot(aes(election_age)) + \n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Distribution of the Coefficient of `election_age`\",\n         y = \"Probability\",\n         x = \"Coefficient of `election_age`\") + \n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()\nch10 <- ch10 %>% \n  mutate(election_age_c = election_age - mean(election_age))\nfit_gov_1_centered <- stan_glm(data = ch10,\n                      formula = lived_after ~ election_age_c,\n                      refresh = 0,\n                      seed = 11)\n\nprint(fit_gov_1_centered, detail = FALSE)##                Median MAD_SD\n## (Intercept)    28.2    0.3  \n## election_age_c -0.9    0.0  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 11.1    0.2"},{"path":"five-parameters.html","id":"sex","chapter":"10 Five Parameters","heading":"10.3.2 sex","text":"Let’s now regress lived_after sex see candidates’ post-election lifespans differ sex.Note workflow. Try one model. Interpret . Try another model. another. one “true” model. infinite space possible models. Good data science involves intelligent tour space.regression, use -1 formula make output straightforward, intercept interpret. math model saw Chapter 8:\\[ lived\\_after_i = \\beta_1 x_{f,} + \\beta_2 x_{m,} + \\epsilon_i\\]\n\\[x_{f,}, x_{m,} \\\\{0,1\\}\\] \n\\[x_{f,} +  x_{m,} = 1\\] \n\\[\\epsilon_i \\sim N(0, \\sigma^2)\\]meanings \\(lived\\_after_i\\) \\(\\epsilon_i\\) first model. Indeed, throughout exercises. \\(x_{f,}\\) \\(x_{m,}\\) 0/1 variables, just like last chapter. variables whose values vary across individuals.important parameters \\(\\beta_1\\) \\(\\beta_2\\). average years-lived post-election , respectively, women men. , “average” data . easy calculate! estimation required. \\(\\beta_1\\) \\(\\beta_2\\) averages entire “population,” however chosen define term. averages can calculated directly. can estimated, creating posterior probability distribution.Looking back regression model just created, see intercept. Instead \\(\\beta_0\\) value, \\(\\beta_1\\) \\(\\beta_2\\) female male. makes things easier interpret. Without add subtract anything intercept, regression tells us , average, women expected live 16 years running governor, men expected live rround(coef(fit_gov_2)[“sexMale”], 0)` years.strange result. men live almost twice long women election? One explanation might women don’t run governor later life, therefore expected live long.Now interpreted model using -1 formula estimate \\(\\beta_1\\) \\(\\beta_2\\), let’s take away -1 regress lived_after intercept sex see equation changes.longer value female. However intercept. regression mathematical formula :\\[ lived\\_after_i = \\beta_0  + \\beta_1 x_{m,} + \\epsilon_i\\]\\(\\beta_0\\) intercept, around 16 years. result similar female value . type model, intercept represents variable represented model. \\(\\beta_1\\) affects outcome candidate male. (candidate female, \\(x_{m,} = 0\\). Therefore, intercept value represents male, .e., females.)candidate male, add coefficient male intercept value, gives us average lifespan male gubernatorial candidate election. can see adding \\(\\beta_0\\) \\(\\beta_1\\), value got males previous model.careful notation! \\(\\beta_1\\) -intercept model different \\(\\beta_1\\) model intercept! Notation varies. must pay attention time make model.posterior distribution \\(\\beta_0 + \\beta_1\\) can constructed via simple addition.interpretation parameter seen . true average, across entire population, number years male candidates live election. can never know true average . , seems likely true average somewhere 27.5 29.5 years.","code":"\nfit_gov_2 <- stan_glm(data = ch10,\n                      formula = lived_after ~ sex - 1,\n                      refresh = 0,\n                      seed = 16)\nprint(fit_gov_2, detail = FALSE)##           Median MAD_SD\n## sexFemale 16.0    2.9  \n## sexMale   28.5    0.4  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 13.3    0.3\nfit_gov_2a <- stan_glm(data = ch10,\n                       formula = lived_after ~ sex,\n                       refresh = 0,\n                       seed = 76)\nprint(fit_gov_2a, detail = FALSE)##             Median MAD_SD\n## (Intercept) 16.1    2.9  \n## sexMale     12.3    2.9  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 13.3    0.3\nfit_gov_2a %>% \n  as_tibble() %>% \n  mutate(male_intercept = `(Intercept)` + sexMale) %>% \n  ggplot(aes(male_intercept)) + \n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Distribution of Average Male Candidate Years Left`\",\n         y = \"Probability\",\n         x = \"Male Years To Live After the Election\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"five-parameters.html","id":"election_age_c-and-sex","chapter":"10 Five Parameters","heading":"10.3.3 election_age_c and sex","text":"going transition working model one explanatory variable. outcome variable lived_after, now two different explanatory variables: election_age_c sex. Note sex categorical explanatory variable election_age_c continuous explanatory variable.math using:\\[ lived\\_after_i =  \\beta_0 + \\beta_1 male_i + \\beta_2 election\\_age\\_c_i + \\epsilon_i \\]outcome variable \\(lived\\_after_i\\), number years person alive election. \\(male_i\\) one explanatory variables. predicting number years male candidate lives election, value 1. making prediction female candidates, value 0. \\(election\\_age\\_c_i\\) explanatory variable. number years candidate lived election.outcome variable \\(lived\\_after_i\\), number years person alive election. \\(male_i\\) one explanatory variables. predicting number years male candidate lives election, value 1. making prediction female candidates, value 0. \\(election\\_age\\_c_i\\) explanatory variable. number years candidate lived election.\\(\\beta_0\\) average number years lived election women, day election, alive average number years candidates (.e. male female). \\(\\beta_0\\) also intercept equation. words, \\(\\beta_0\\) expected value \\(lived\\_after_i\\), \\(male_i = 0\\) \\(election\\_age\\_c_i = 0\\).\\(\\beta_0\\) average number years lived election women, day election, alive average number years candidates (.e. male female). \\(\\beta_0\\) also intercept equation. words, \\(\\beta_0\\) expected value \\(lived\\_after_i\\), \\(male_i = 0\\) \\(election\\_age\\_c_i = 0\\).\\(\\beta_1\\) almost meaningless . time meaning value connected intercept (.e. \\(\\beta_0 + \\beta_1\\)). two added together, get average number years lived election men, day election, alive average number years candidates.\\(\\beta_1\\) almost meaningless . time meaning value connected intercept (.e. \\(\\beta_0 + \\beta_1\\)). two added together, get average number years lived election men, day election, alive average number years candidates.\\(\\beta_2\\) , entire population, average difference \\(lived\\_after_i\\) two individuals, one \\(election\\_age\\_c_i\\) value 1 greater .\\(\\beta_2\\) , entire population, average difference \\(lived\\_after_i\\) two individuals, one \\(election\\_age\\_c_i\\) value 1 greater .Now understand model, let’s translate following model code.Looking results, can see intercept value around 22. (exact values median posterior vary random sampling inherent fitting model.) means average female candidate, alive average number years candidates, live another 22 years election.Note sexMale around 6. coefficient, \\(\\beta_1\\). need connect value intercept value get something meaningful. Using formula \\(\\beta_0 + \\beta_1\\), find number years average male candidate — , day election, average age candidates — live around 28 years.Now take look coefficient \\(election\\_age\\_c_i\\), \\(\\beta_2\\). median posterior, -0.8, represents slope model. comparing two candates differ one year election_age_c, expect differ -0.8 years lived_after. makes sense value negative. Think : years candidate lived, fewer years candidate left live. , every extra year candidate alive election, lifespan election 0.8 years lower, average.Let’s now look posteriors.graph displays posterior probability distributions \\(\\beta_0\\) $_0 + _1 $. two distributions fairly different; distribution females spread males. greater number men women data. data , precise can .Let’s now take look posterior distribution \\(\\beta_2\\), coefficient \\(election\\_age\\_c_i\\).","code":"\nfit_gov_3 <- stan_glm(data = ch10,\n                      formula = lived_after ~ sex + election_age_c,\n                      refresh = 0,\n                      seed = 12)\nprint(fit_gov_3, detail = FALSE)##                Median MAD_SD\n## (Intercept)    22.2    2.4  \n## sexMale         6.1    2.4  \n## election_age_c -0.8    0.0  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 11.1    0.2\nfit_gov_3 %>% \n  as_tibble() %>% \n  mutate(male_years = `(Intercept)` + sexMale) %>% \n  rename(female_years = `(Intercept)`) %>% \n  select(female_years, male_years) %>% \n  pivot_longer(cols = female_years:male_years, \n               names_to = \"parameters\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = parameters)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n     labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Men live longer\",\n         x = \"Average Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format(accuracy = 1)) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()\nfit_gov_3 %>% \n  as_tibble() %>% \n  ggplot(aes(election_age_c)) + \n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   bins = 100) +\n    labs(title = \"Posterior Distribution of the Coefficient of `election_age_c`\",\n         y = \"Probability\",\n         x = \"Coefficient of `election_age_c`\") + \n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"five-parameters.html","id":"election_age_c-sex-and-election_age_csex","chapter":"10 Five Parameters","heading":"10.3.4 election_age_c, sex and election_age_c*sex","text":"Let’s create another model. time, however, numeric outcome variable lived_after function two explanatory variables used , election_age_c sex, interaction.Math:\\[ lived\\_after_i =  \\beta_0 + \\beta_1 male_i + \\beta_2 election\\_age\\_c_i + \\\\ \\beta_3 male_i *  election\\_age\\_c_i + \\epsilon_i\\]\noutcome variable still \\(lived\\_after_i\\). want know many years candidate live election.outcome variable still \\(lived\\_after_i\\). want know many years candidate live election.\\(male_i\\) still one explanatory variables. predicting amount years male candidate lives election, 1. making prediction female candidate, 0. \\(election\\_age\\_c_i\\) still explanatory variable, representing number years candidate lived election, relative average value candidates.\\(male_i\\) still one explanatory variables. predicting amount years male candidate lives election, 1. making prediction female candidate, 0. \\(election\\_age\\_c_i\\) still explanatory variable, representing number years candidate lived election, relative average value candidates.\\(\\beta_0\\) average number years lived election women, day election, alive average number years candidates. sense, meaning previous model, without interaction term. , always remember meaning parameter conditional model embedded. Even parameter called \\(\\beta_0\\) two different regressions necessitate means thing regressions. Parameter names arbitrary, least simply matter convention.\\(\\beta_0\\) average number years lived election women, day election, alive average number years candidates. sense, meaning previous model, without interaction term. , always remember meaning parameter conditional model embedded. Even parameter called \\(\\beta_0\\) two different regressions necessitate means thing regressions. Parameter names arbitrary, least simply matter convention.\\(\\beta_1\\) simple interpretation stand-alone parameter. measure different women men. However, \\(\\beta_0 + \\beta_1\\) straightforward meaning exactly analogous meaning \\(\\beta_0\\). sum average number years lived election men, day election, alive average number years candidates.\\(\\beta_1\\) simple interpretation stand-alone parameter. measure different women men. However, \\(\\beta_0 + \\beta_1\\) straightforward meaning exactly analogous meaning \\(\\beta_0\\). sum average number years lived election men, day election, alive average number years candidates.\\(\\beta_2\\) coefficient \\(election\\_age\\_c_i\\). just slope women. average difference \\(lived\\_after_i\\) two women, one \\(election\\_age\\_c_i\\) value 1 greater . last example, \\(\\beta_2\\) slope whole population. Now different slopes different genders.\\(\\beta_2\\) coefficient \\(election\\_age\\_c_i\\). just slope women. average difference \\(lived\\_after_i\\) two women, one \\(election\\_age\\_c_i\\) value 1 greater . last example, \\(\\beta_2\\) slope whole population. Now different slopes different genders.\\(\\beta_3\\) alone difficult interpret. However, added \\(\\beta_2\\), result slope men.\\(\\beta_3\\) alone difficult interpret. However, added \\(\\beta_2\\), result slope men.Code:intercept increased. \\(\\beta_0\\) around 17. intercept females. still means average number years lived election women 17 . sexMale coefficient, \\(\\beta_1\\), refers value must added intercept order get average males. calculated, result 28. Keep mind, however, values apply \\(election\\_age\\_c_i = 0\\), , , candidate \\(\\) around 52 years old.coefficient \\(election\\_age\\_c_i\\), \\(\\beta_2\\), -0.1. mean? slope females. , comparing two female candidates differ one year age, expect older candidate live 0.1 years less. Now direct attention coefficient sexMale:election_age_c, \\(\\beta_3\\), -0.8. value must added coefficient \\(election\\_age\\_c_i\\) (recall \\(\\beta_2 + \\beta_3\\)) order find slope males. two added together, value, slope, -0.9. comparing two male candidates differ age one year, expect older candidate live 0.9 years less.Key point: interpretation intercepts apply candidates \\(election\\_age\\_c_i = 0\\). Candidates 52 years-old different expected number years live. interpretation slope applies everyone. words, relationship \\(lived\\_after_i\\) \\(election\\_age\\_c_i\\) , regardless gender old .posterior:Male candidates live longer average female candidates. Note, also, average years live election females 17 model. previous model, 22 years. difference? interpretation “average” different! previous model, average women. model, average 52 years-old women. different things, hardly surprised different posteriors.Slope posteriors:posterior distribution shows average slope values men women. can see men steeper slope, slope women practically 0! trying forecast number years women live election, may ignore number years already lived. definitely true men. difference?","code":"\nfit_gov_4 <- stan_glm(data = ch10,\n                      formula = lived_after ~ sex*election_age_c,\n                      refresh = 0,\n                      seed = 13)\nprint(fit_gov_4, detail = FALSE)##                        Median MAD_SD\n## (Intercept)            16.5    3.6  \n## sexMale                11.9    3.6  \n## election_age_c         -0.1    0.4  \n## sexMale:election_age_c -0.8    0.4  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 11.1    0.2\nfit_gov_4 %>% \n  as_tibble() %>% \n  mutate(male_years = `(Intercept)` + sexMale) %>% \n  rename(female_years = `(Intercept)`) %>% \n  select(female_years, male_years) %>% \n  pivot_longer(cols = female_years:male_years, \n               names_to = \"parameters\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = parameters)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Men live longer\",\n         x = \"Average Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()\nfit_gov_4 %>% \n  as_tibble() %>% \n  mutate(slope_men = election_age_c + `sexMale:election_age_c`) %>% \n  rename(slope_women = election_age_c) %>% \n  select(slope_women, slope_men) %>% \n  pivot_longer(cols = slope_women:slope_men, \n               names_to = \"parameters\",\n               values_to = \"slope\") %>% \n  ggplot(aes(slope, fill = parameters)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Men have a steeper slope\",\n         x = \"slope\",\n         y = \"Probability\") + \n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic() "},{"path":"five-parameters.html","id":"what-is-beta_0","chapter":"10 Five Parameters","heading":"10.3.5 What is \\(\\beta_0\\)?","text":"Attentive readers noticed meaning \\(\\beta_0\\) identical last two models , time, estimate posterior different. can ?Recall math:\\[ lived\\_after_i =  \\beta_0 + \\beta_1 male_i + \\beta_2 election\\_age\\_c_i + \\epsilon_i \\]\\[ lived\\_after_i =  \\beta_0 + \\beta_1 male_i + \\beta_2 election\\_age\\_c_i + \\\\ \\beta_3 male_i *  election\\_age\\_c_i + \\epsilon_i\\]\ncases, \\(\\beta_0\\) meaning. average number years lived election women, day election, alive average number years candidates. Plug 0 \\(male_i\\) 0 \\(election\\_age\\_c_i\\) equations simplify :\\[ lived\\_after_i =  \\beta_0 + \\epsilon_i \\]\nfar, good. , despite fact using data, posterior probability distributions \\(\\beta_0\\) meaningfully different two models:enough overlap two distributions aren’t completely incompatible. , truth, \\(\\beta_0 = 20\\), neither posterior distribution “wrong.”meaning parameter, including \\(\\beta_0\\), conditional two assumptions: population seek make inferences structure model. case, assume population interest . models different, albeit one interaction term. enough difference make \\(\\beta_0\\) first model different “thing” \\(\\beta_0\\) second model, even one “interpretation” mean .trick individual interpretation meaning parameter just captures one characteristic meaning parameter. just single view “thing.” view fine, far goes, can’t show us aspects parameter. picture full moon tells us little appears dark side.Consider different question: expected value male candidates 1 year older average:Without interaction term: \\(\\beta_0 + \\beta_1 + \\beta_2 1\\).Without interaction term: \\(\\beta_0 + \\beta_1 + \\beta_2 1\\).interaction term: \\(\\beta_0 + \\beta_1 + \\beta_2 1 + \\beta_3 1\\).interaction term: \\(\\beta_0 + \\beta_1 + \\beta_2 1 + \\beta_3 1\\).shouldn’t surprised different models generate different formulas question. Yet note \\(\\beta_0\\) appears . words, \\(\\beta_0\\) average number years lived election women, day election, alive average number years candidates. also part multitude estimates.way understand wrapped \\(\\beta_0\\) see context full mathematical formula. Since two different models, defined two different formulas, hardly surprising posterior probability distributions \\(beta_0\\) differ, even though one specific interpretation — one many — .advice: Spend less time thinking parameters mean time using posterior_epred() posterior_predict() examine implications models. posteriors real substance model.","code":"\nm_3 <- fit_gov_3 %>% \n  as_tibble() %>%\n  select(`(Intercept)`) %>% \n  rename(`No Interaction Term` = `(Intercept)`)\n\nm_4 <- fit_gov_4 %>% \n  as_tibble() %>%\n  select(`(Intercept)`) %>% \n  rename(`With Interaction Term` = `(Intercept)`)\n\nbind_cols(m_3, m_4) %>% \n  select(`No Interaction Term`, `With Interaction Term`) %>% \n  pivot_longer(cols = `No Interaction Term`:`With Interaction Term`, \n               names_to = \"Model\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = Model)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distributions\",\n         subtitle = \"For intercept in two different models\",\n         x = \"Additional Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"five-parameters.html","id":"temperance-5","chapter":"10 Five Parameters","heading":"10.4 Temperance","text":"\nFIGURE 10.4: Temperance\nConsider:long two political candidates — one male one female, 10 years older average candidate — live election? different lifespans ?questions , purposely, less precise ones tackled Chapters 7 8, written conversational style. normal people talk.However, data scientists, job bring precision questions. two commonsense interpretations. First, curious expected values questions. averaged data thousand candidates like , answer ? Second, curious two specific individuals. long live? Averages involve questions parameters. fates individuals require predictions. general claims, violated often firm rules. Yet, highlight key point: expected values less variable individual predictions.calculate expected values, use posterior_epred(). forecast individuals, use posterior_predict().","code":""},{"path":"five-parameters.html","id":"expected-values","chapter":"10 Five Parameters","heading":"10.4.1 Expected values","text":"Consider “average” interpretation first. answer begins posterior distributions parameters fit_gov_4.Looking posterior probability distributions , can see male candidates expected live longer. much longer? previous chapters, can manipulate distributions , less, way manipulate simple numbers. want know difference two posterior distributions, can simply subtract.average value difference years--live probably positive, likely value around 4 years. still 6% chance true value less zero, .e., expect female candidates live longer.Instead using posterior_epred(), answered questions using posterior probability distributions parameters model, along simple math. Don’t ! First, much likely make mistake. Second, approach generalize well complex models scores parameters interactions.","code":"\nnewobs = tibble(sex = c(\"Male\", \"Female\"), \n                 election_age_c = 10)\n\npe <- posterior_epred(object = fit_gov_4, \n                      newdata = newobs) %>% \n  as_tibble() %>% \n  rename(\"Male\" = `1`,\n         \"Female\" = `2`)\n\n\npe %>% \n pivot_longer(cols = Male:Female, \n               names_to = \"Gender\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = Gender)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Expected years lived post-election\",\n         x = \"Years\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = \n                         scales::number_format(accuracy = 1)) +\n    scale_y_continuous(labels = \n                         scales::percent_format(accuracy = 1)) +\n    theme_classic()\npe <- posterior_epred(object = fit_gov_4, \n                      newdata = newobs) %>% \n  as_tibble() %>% \n  mutate(diff = `1` - `2`)\n\n\npe %>% \n  ggplot(aes(diff)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"Male candidates live longer\",\n         x = \"Expected Additional Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format(accuracy = 1)) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_classic()"},{"path":"five-parameters.html","id":"individual-predictions","chapter":"10 Five Parameters","heading":"10.4.2 Individual predictions","text":", instead, interpret question asking prediction small number individuals, need use posterior_predict().Use posterior_predict() create draws posterior probability distribution prediction cases. posterior_predict() takes two arguments: model simulations run, tibble indicating covariate values individual(s) want predict. case, using fit_gov_4 model tibble one just created . words, inputs posterior_predict() posterior_epred() identical.resulting tibble 2 columns, first male candidate second female candidate. columns draws posterior predictive distributions. cases, forecasts depend values covariates. , provide different forecast candidates younger older.need weird mutate_all(.numeric) incantation? reason posterior_epred() returns simple matrix, easy transform tibble. posterior_predict(), hand, returns special sort matrix much harder work . , need little hackery make next steps easier.Let’s look posterior predictive distribution candidate.big overlap predictions individuals , time, much less overlap averages. Random stuff happens individual time. Random stuff cancels take average many individuals. Consider difference posterior predictive distributions two individuals.words, predict male candidate live longer female candidate. much? Well, number unknown parameter. looking posterior , best estimate 3.8 years. However, quite possible , given male/female candidates, female live longer.fact, 4 10 chance female candidate lives longer.Note different move question averages question individuals. cases, likely value . , average behavior expected value given individual. uncertainty much greater individual prediction. chance true average male candidates less female candidates low. Yet, individual pair candidates, even slightly surprising female candidate outlive male candidate. Individuals vary. Averages never tell whole story.","code":"\npp <- posterior_predict(object = fit_gov_4, \n                        newdata = newobs) %>%\n  as_tibble() %>% \n  mutate_all(as.numeric) %>% \n  rename(\"Male\" = `1`,\n         \"Female\" = `2`)\n\npp  ## # A tibble: 4,000 x 2\n##     Male Female\n##    <dbl>  <dbl>\n##  1  5.03  24.6 \n##  2 24.1    6.62\n##  3 15.6   30.6 \n##  4  4.16  23.0 \n##  5 13.7   31.3 \n##  6 25.4   18.3 \n##  7 23.8   10.6 \n##  8 27.2   41.8 \n##  9 -1.71   1.90\n## 10 17.5   25.3 \n## # … with 3,990 more rows\npp %>% \n  pivot_longer(cols = Male:Female, \n               names_to = \"Gender\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = Gender)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Predictive Distribution\",\n         subtitle = \"For a male and female candidate\",\n         x = \"Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = \n                         scales::percent_format(accuracy = 1)) +\n    theme_classic()\npp %>% \n  mutate(diff = Male - Female) %>% \n  ggplot(aes(diff)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Predictive Distribution\", \n         subtitle = \"How much longer will the male candidate live?\",\n         x = \"Years\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = \n                         scales::percent_format(accuracy = 1)) +\n    theme_classic()\npp %>% \n  mutate(diff = Male - Female) %>% \n  summarize(f_live_longer = sum(diff < 0),\n            total = n(),\n            f_live_longer / total)## # A tibble: 1 x 3\n##   f_live_longer total `f_live_longer/total`\n##           <int> <int>                 <dbl>\n## 1          1617  4000                 0.404"},{"path":"five-parameters.html","id":"expectation-versus-individual-variation","chapter":"10 Five Parameters","heading":"10.4.3 Expectation versus individual variation","text":"Let’s compare results posterior_epred() posterior_predict() scenario directly. code shown , think useful look everything together.Expected values vary much less predictions. chart makes easy see. somewhat sure true underlying average numbers years male candidates live post-election female candidates. , two individual candidates, good chance female candidate live longer. can ignore \\(\\epsilon\\) predicting outcome individuals. estimating expected values long-run averages, \\(\\epsilon\\)’s cancel .","code":"\nnewobs <- tibble(sex = c(\"Male\", \"Female\"),\n                  election_age_c = 10)\n\npe <- posterior_epred(fit_gov_4, \n                      newdata = newobs) %>%\n  as_tibble() %>% \n  mutate(diff = `1` - `2`)\n\npp <- posterior_predict(fit_gov_4, \n                        newdata = newobs) %>% \n  as_tibble() %>% \n  mutate_all(as.numeric) %>% \n  mutate(diff = `1` - `2`)\n\ntibble(Expectation = pe$diff,\n       Prediction = pp$diff) %>% \n  pivot_longer(cols = Expectation:Prediction, \n               names_to = \"Type\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = Type)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distributions\",\n         subtitle = \"For 62 years-old male and female candidates\",\n         x = \"Additional Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = \n                         scales::percent_format(accuracy = 1)) +\n    theme_classic()"},{"path":"five-parameters.html","id":"testing","chapter":"10 Five Parameters","heading":"10.4.4 Testing","text":"normal statistics book, already discussed concept “testing” extensively. terminology varies field. “Tests,” “testing,” “hypothesis tests,” “tests significance,” “null hypothesis significance testing” refer concept. refer collection approaches NHST, common abbreviation derived initials last phrase. Wikpedia provides overview.view: Amateurs test. Professionals summarize.Consider question expected difference lifespans South Dakato Washington candidates. difference “significant?” Can “reject null hypothesis?” convential answer Yes. Anytime zero outside 95% confidence interval, can declare result significant. ? gain us? already full posterior probability distribution. knowledge. Yes/question throws away much information (almost) ever useful. reason test can summarize providing full posterior probability distribution.arguments apply case “insignificant” results, “\\(p > 0.5\\), can’t”reject\" null hypothesis. Instead expected values, consider case two candidates, one South Dakota one Washington. difference predicted lifespans “significant?” cares!? full posterior probability distribution prediction — also known posterior predictive distribution — graphed . 95% confidence interval includes zero. mean throw away? ! nonsense. Yes, 20% chance South Dakota candidate lives longer, can hardly surprised happens. still think much likely Washington candidate lives longer. Indeed, consider 4--1 odds fair. fact difference “significant” relevance use posterior make decisions.reasoning applies every parameter estimate, every prediction make. Never test — unless boss demands test. Use judgment, make models, summarize knowledge world, use summary make decisions.","code":""},{"path":"five-parameters.html","id":"summary-10","chapter":"10 Five Parameters","heading":"10.5 Summary","text":"","code":""},{"path":"n-parameters.html","id":"n-parameters","chapter":"11 N Parameters","heading":"11 N Parameters","text":"created models one parameter Chapter 6, two parameters Chapter 7, three parameters Chapter 8, five parameters Chapter 10, now ready make jump \\(N\\) parameters.chapter, consider models many parameters complexities arise therefrom.","code":""},{"path":"n-parameters.html","id":"more-on-candidate-longevity","chapter":"11 N Parameters","heading":"11.1 More on candidate longevity","text":"Let’s continue examination longevity gubernatorial candidates began Chapter 10. Recall packages need tibble created:","code":"\nlibrary(tidyverse)\nlibrary(primer.data)\nlibrary(rstanarm)\n\nch11 <- governors %>% \n  select(last_name, year, state, sex, lived_after, election_age) %>% \n  mutate(election_age_c = election_age - mean(election_age))"},{"path":"n-parameters.html","id":"state","chapter":"11 N Parameters","heading":"11.1.1 state","text":"DK: Start model just state.","code":""},{"path":"n-parameters.html","id":"state-election_age-sex-and-election_agesex","chapter":"11 N Parameters","heading":"11.1.2 state, election_age, sex and election_age*sex","text":"Let’s consider one model, one adds state model used end previous chapter.Math:\\[ lived\\_after_i =  \\beta_0 +  \\beta_1 x_{AK,} + \\beta_2 x_{AR,} + ... \\beta_{49} x_{WY,} + \\\\\n\\beta_{50} male_i + \\beta_{51} election\\_age_i+ \\beta_{52} male_i *  election\\_age_i + \\epsilon_i\\]\\(lived\\_after_i\\) outcome variable. \\(\\beta_1\\), \\(\\beta_2\\), \\(\\beta_3\\)… way \\(\\beta_{49}\\) correspond different parameters. values specific state. order find female intercept (.e. lived_after females) specific state, must add state’s beta value value \\(\\beta_0\\) find intercept lived_after outcome females candidates specific state. example, look model , \\(\\beta_1\\) intercept value Arkansas (note AK subscript). take appropriate value, appears next Arkansas printed model, add value \\(\\beta_0\\).\\(lived\\_after_i\\) outcome variable. \\(\\beta_1\\), \\(\\beta_2\\), \\(\\beta_3\\)… way \\(\\beta_{49}\\) correspond different parameters. values specific state. order find female intercept (.e. lived_after females) specific state, must add state’s beta value value \\(\\beta_0\\) find intercept lived_after outcome females candidates specific state. example, look model , \\(\\beta_1\\) intercept value Arkansas (note AK subscript). take appropriate value, appears next Arkansas printed model, add value \\(\\beta_0\\).\\(\\beta_0\\) intercept one state alone. model printed, see (Intercept) takes lived_after value female candidates Alabama.\\(\\beta_0\\) intercept one state alone. model printed, see (Intercept) takes lived_after value female candidates Alabama.\\(\\beta_{50}\\) coefficient explanatory variable \\(male_i\\). trying find intercepts female candidates, explanatory variable take value 0. However, \\(male_i\\) = 1 trying find intercept values male candidates. Therefore, add \\(\\beta_{50}\\) value female intercept value find value lived_after male candidates. \\(\\beta_{51}\\) coefficient explanatory variable \\(election\\_age_i\\). just slope women. \\(\\beta_{52}\\) difficult interpret. However, gains meaning added \\(\\beta_{51}\\), results slope men.\\(\\beta_{50}\\) coefficient explanatory variable \\(male_i\\). trying find intercepts female candidates, explanatory variable take value 0. However, \\(male_i\\) = 1 trying find intercept values male candidates. Therefore, add \\(\\beta_{50}\\) value female intercept value find value lived_after male candidates. \\(\\beta_{51}\\) coefficient explanatory variable \\(election\\_age_i\\). just slope women. \\(\\beta_{52}\\) difficult interpret. However, gains meaning added \\(\\beta_{51}\\), results slope men.Note takes awhile run. dealing 55 parameters .(Intercept) refers average number years lived election women Alabama, day election, alive average number years female candidates! ’s mouthful. really different along, however. can see (Intercept) value around 17 years.However, talked women. men? Well, look bottom list, see sexMale value around 55. wish estimate lived_after specific state, must add value intercept, also add intercept desired state.\\(\\beta_{51}\\), coefficient value \\(election\\_age_i\\), -0.06. comparing female candidates differ one year current ages, much difference many years expect live election.\\(\\beta_{51} + \\beta_{52}\\), coefficients \\(election\\_age_i\\) sexMale:election_age, results value around -0.9. value slope men.Posterior distribution female candidates Washington South Dakota.posterior shows female candidates Washington live longer election female candidates South Dakota. Interesting huh? knowledge averages always precise knowledge individuals.","code":"\nfit_gov_1 <- stan_glm(data = ch11,\n                      formula = lived_after ~ state + sex*election_age,\n                      refresh = 0,\n                      iter = 10000,\n                      seed = 98)\nprint(fit_gov_1, detail = FALSE)##                      Median MAD_SD\n## (Intercept)          16.6   21.2  \n## stateAlaska           3.2    3.9  \n## stateArizona          8.2    3.2  \n## stateArkansas         1.6    3.2  \n## stateCalifornia       5.7    3.5  \n## stateColorado         4.2    3.3  \n## stateConnecticut      2.9    3.5  \n## stateDelaware         8.7    3.6  \n## stateFlorida         -4.1    3.7  \n## stateGeorgia          5.1    4.0  \n## stateHawaii           4.4    4.3  \n## stateIdaho            4.8    3.4  \n## stateIllinois        -0.3    3.7  \n## stateIndiana          3.5    3.6  \n## stateIowa             2.7    3.2  \n## stateKansas          -0.3    3.2  \n## stateKentucky         4.2    3.5  \n## stateLouisiana        4.0    4.0  \n## stateMaine            5.9    3.7  \n## stateMaryland         4.8    3.5  \n## stateMassachusetts    0.4    3.2  \n## stateMichigan        -3.0    3.4  \n## stateMinnesota        4.6    3.3  \n## stateMississippi      2.3    3.7  \n## stateMissouri         1.5    3.7  \n## stateMontana          2.5    3.5  \n## stateNebraska         2.4    3.3  \n## stateNevada           4.3    3.7  \n## stateNew Hampshire    3.7    3.2  \n## stateNew Jersey       1.2    3.6  \n## stateNew Mexico       2.9    3.1  \n## stateNew York         2.6    3.4  \n## stateNorth Carolina  -3.9    3.9  \n## stateNorth Dakota     6.0    3.4  \n## stateOhio             6.1    3.3  \n## stateOklahoma        -1.4    3.7  \n## stateOregon           0.7    3.5  \n## statePennsylvania     3.6    3.5  \n## stateRhode Island     5.4    3.0  \n## stateSouth Carolina   6.8    3.7  \n## stateSouth Dakota    -4.9    3.2  \n## stateTennessee       -1.1    3.6  \n## stateTexas            3.4    3.2  \n## stateUtah             3.4    3.5  \n## stateVermont          1.7    3.3  \n## stateVirginia         7.1    3.9  \n## stateWashington       7.7    3.6  \n## stateWest Virginia    6.8    3.5  \n## stateWisconsin        6.9    3.2  \n## stateWyoming         -1.3    3.5  \n## sexMale              54.6   21.5  \n## election_age         -0.1    0.4  \n## sexMale:election_age -0.8    0.4  \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 10.8    0.2\nfit_gov_1 %>% \n  as_tibble() %>% \n  mutate(Washington_females = `(Intercept)` + stateWashington) %>% \n  mutate (SD_females = `(Intercept)` + `stateSouth Dakota`) %>% \n  select(Washington_females, SD_females) %>% \n  pivot_longer(cols = Washington_females:SD_females, \n               names_to = \"parameters\",\n               values_to = \"years\") %>% \n  ggplot(aes(years, fill = parameters)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"for women that live in Washington and South Dakota\",\n         x = \"Average Years Lived Post Election\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"n-parameters.html","id":"wisdom-6","chapter":"11 N Parameters","heading":"11.2 Wisdom","text":"\nFIGURE 11.1: Wisdom\n","code":""},{"path":"n-parameters.html","id":"eda-of-shaming","chapter":"11 N Parameters","heading":"11.2.1 EDA of shaming","text":"Imagine running Governor want better job getting voters vote. recently read large-scale experiment showing effect sending voting reminder “shames” citizens vote. considering sending “shaming” voting reminder . happen ? voters show polls? Additionally, day election female citizen randomly selected. probability vote?Consider new data set, shaming, corresponding experiment carried Gerber, Green, Larimer (2008) titled “Social Pressure Voter Turnout: Evidence Large-Scale Field Experiment.” experiment used several hundred thousand registered voters series mailings determine effect social pressure voter turnout.Let’s now another EDA, starting running glimpse().see glimpse() gives us look raw data contained within shaming data set. top output, can see number rows columns, observations variables respectively. see 344,084 observations, row corresponding unique respondent. “Columns: 10” tells us 10 variables within data set. , see cutoff version entire data set variables left rows observations list separated commas, compared tibble output presents variables columns observations rows running horizontally.summary, get idea variables working . Variables particular interest us sex, hh_size, primary_06. variable hh_size tells us size respondent’s household, sex tells us sex respondent, primary_06 tells us whether respondent voted 2006 Primary election.things note exploring data set. may – may – noticed response general_04 variable “Yes.” published article, authors note “registered voters voted November 2004 selected sample” (Gerber, Green, Larimer, 2008). , authors found history sent mailings.also important identify dependent variable meaning. shaming experiment, dependent variable primary_06, variable coded either 0 1 whether respondent voted 2006 primary election. dependent variable authors trying measure effect treatments proportion people vote 2006 general election.voting results years, 2002 2004, less interest us can removed abbreviated data set. addition removing general_04, primary_02, general_02, primary_04, also taking particular interest age, no_of_names within chapter.narrowing set variables looking investigating, find meaningful relationships among . However, yet discussed important variable : treatment. treatment variable factor variable 5 levels, including control. Since curious sending mailings affects voter turnout, treatment variable tell us impact type mailing can make. Let’s start taking broad look different treatments.\nFour types treatments used experiment, voters receiving one four types mailing. mailing treatments carried message, “CIVIC DUTY - VOTE!”first treatment, Civic Duty, also read, “Remember rights responsibilities citizen. Remember vote.” message acted baseline treatments, since carried message similar one displayed mailings.second treatment, Hawthorne, households received mailing told voters studied voting behavior examined public records. adds small amount social pressure households receiving mailing.third treatment, Self, mailing includes recent voting record member household, placing word “Voted” next name fact vote 2004 election blank space next name . mailing, households also told, “intend mail updated chart” voting record household members 2006 primary. emphasizing public nature voting records, type mailing exerts social pressure voting Hawthorne treatment.fourth treatment, Neighbors, provides household members’ voting records, well voting records live nearby. mailing also told recipients, “intend mail updated chart” voted 2006 election entire neighborhood.now, let’s focus subset data. sample just 10,000 rows otherwise stan_glm() takes annoyingly large amount time work. Nothing substantive changes.create variable solo, TRUE voters live alone FALSE . curious see treatment effect, , voters live alone . also focused two “treatments”: Control Neighbors. sake simplification. want know social pressure impacts voting behavior, makes sense look treatment provides social pressure.TABLE 11.1: Data summaryVariable type: characterVariable type: factorVariable type: logicalVariable type: numericLet’s focus observations may relevant analysis. First, note treatment approximately 38,000 respondents. control group, denoted Con, approximately 190 thousand respondents. logical variable solo, see approximately 47 thousand total respondents live alone (TRUE), approximately 296 thousand live households greater 1 (FALSE). may also important note average age respondents 49.8 years standard deviation 14.4 years.get better sense respondents’ information, let’s use sample_n() gather random sample n observations data set.Now table 5 random observations respondents’ information regular table output. taking random samples, may start see patterns within data. notice anything particular variable treatment?One helpful summarizing technique can use skim(). make information contains simpler, looking three variables: primary_06, treatment, sex.TABLE 11.2: Data summaryVariable type: characterVariable type: factorVariable type: numericRunning skim() command gives us summary data set whole, well types variables individual variable summaries. top, see number columns rows within selected data set. given list different types variables, columns, often appear within data skimming. variables separated column type, given individual summaries based type.created models one parameter Chapter 6 two parameters Chapter 7, now ready make jump \\(N\\) parameters. parameters include models, flexible can become. must careful overfitting, making models inaccurate don’t enough data accurately estimate parameters. tension overfitting underfitting central practice data science.Let’s consider one important virtues data science: wisdom. map data question. Recall mission increase voter turnout running Governor.investigate , given dataset respondents encouraged vote four treatments. accomplished sending letter citizens voted previous primary election varying degrees social pressure. remainder respondents fall control group, received mailings. dataset offers number details respondent, including age, sex, treatment type, voting outcome.truly want know make citizens vote. One immediate problem dataset , due study population, studying people voted previous primary election. words, someone vote previous primary election, included. large problem, since means can figure make citizens already voted vote. Though can’t sure, reasonable assume easier encourage citizens vote next primary election history recently voting primary elections.mean data unhelpful? course ! four treatments (therefore four different methods encouraging voting), can gain quite bit knowledge. Mostly, know effective way incentivize people history voting vote . also know method persuasion (control) best option. able tell certain methods persuasion work better certain groups people, according factors age, sex, household size. can help tremendously election.said, map question data almost never perfect. data science, often look data, understand limitations, try best make inferences help cause.","code":"\nlibrary(primer.data)\nlibrary(tidyverse)\nlibrary(skimr)\nglimpse(shaming)## Rows: 344,084\n## Columns: 15\n## $ cluster       <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", …\n## $ primary_06    <int> 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1…\n## $ treatment     <fct> Civic Duty, Civic Duty, Hawthorne, Hawthorne, Hawthorne…\n## $ sex           <chr> \"Male\", \"Female\", \"Male\", \"Female\", \"Female\", \"Male\", \"…\n## $ age           <int> 65, 59, 55, 56, 24, 25, 47, 50, 38, 39, 65, 61, 57, 37,…\n## $ primary_00    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"…\n## $ general_00    <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"Yes\", \"Yes\", …\n## $ primary_02    <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"Yes\", \"Yes\", …\n## $ general_02    <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"Yes\", \"Yes\", …\n## $ primary_04    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"…\n## $ general_04    <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\",…\n## $ hh_size       <int> 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1…\n## $ hh_primary_04 <dbl> 0.095, 0.095, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048,…\n## $ hh_general_04 <dbl> 0.86, 0.86, 0.86, 0.86, 0.86, 0.90, 0.90, 0.90, 0.90, 0…\n## $ neighbors     <int> 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,…\nshaming %>%\n  count(treatment)## # A tibble: 5 x 2\n##   treatment       n\n##   <fct>       <int>\n## 1 Control    191243\n## 2 Civic Duty  38218\n## 3 Hawthorne   38204\n## 4 Self        38218\n## 5 Neighbors   38201\nset.seed(9)\nch9_sham <- shaming %>% \n  filter(treatment %in% c(\"Control\", \"Neighbors\")) %>% \n  droplevels() %>% \n  mutate(solo = ifelse(hh_size == 1, TRUE, FALSE)) %>% \n  select(primary_06, treatment, solo, sex, age) %>% \n  sample_n(10000, replace = FALSE)\nch9_sham %>% \n  skim()\nch9_sham %>% \n  sample_n(10)## # A tibble: 10 x 5\n##    primary_06 treatment solo  sex      age\n##         <int> <fct>     <lgl> <chr>  <int>\n##  1          0 Control   FALSE Male      52\n##  2          0 Control   FALSE Female    20\n##  3          1 Control   FALSE Female    76\n##  4          0 Control   FALSE Male      39\n##  5          0 Neighbors FALSE Female    35\n##  6          1 Control   TRUE  Male      84\n##  7          0 Control   FALSE Male      61\n##  8          1 Control   FALSE Male      73\n##  9          1 Neighbors FALSE Male      46\n## 10          0 Neighbors FALSE Male      38\nshaming %>% \n  select(primary_06, treatment, sex) %>% \n  skim()"},{"path":"n-parameters.html","id":"primary_06-and-treatment-age","chapter":"11 N Parameters","heading":"11.2.2 primary_06 and (treatment + age)","text":"\nFIGURE 11.2: Justice\n\nFIGURE 11.3: Courage\ngoing series models chapter, useful combine virtues Justice Courage. begin, let’s model primary_06, represents whether citizen voted , age treatment see connection.Let’s look relationship primary voting treatment + age.(Intercept) two key details. First, since Control comes alphabetically Neighbors, Control group baseline comparison. holds similarly age. slope age participants Control group.Second, remember data, (Intercept) mathematical interpretation, practical interpretation. ? slope age starts zero. nonsensical purposes, voter can zero age.Therefore, model shows , within control group, percent voting 0.084 = 8.4%. calculate percent voting Neighbors group? Recall treatmentNeighbors median giving standalone figure group, rather represents offset Control Neighbors groups. find Neighbors value, must add offset original value: 0.084 + 0.079 = .163 = 16.3%. nearly double rate Control group!Let’s turn age median. Begin grouping observations age counting primary_06, gives us counts 1 (yes) 0 () number voting age category.explore relationship visually, let’s create graph. coercing primary_06 character variable closely represents “yes” “” opposed numeric value.interesting takeaways .\n- First, almost every age bracket (90), majority participants vote.\n- spike ages 40 60 illustrates participants exist age bracket.\n- differences voters non-voters narrows greatly age 60.Let’s now look another graph aims show phenomena, also includes formula using lm. clearly shows upward trend voting participants age increases. can also see highest concentrations “Voted” row exist ages 45-50, whereas highest concentrations “Vote” row exist 18-25 30-60 age groups. , see , almost ages, partcipants likely vote vote. illustrated darker concentration dots “Vote” row. slope regression line, however, shows clear picture: older , likely vote.Note median age 0.004. Age therefore positively correlated voting primary election. mean? means , every year participant’s age increases, odds voting primary increases 0.004. Now, might seem like huge difference. However, think like : every decade older participant , odds voting increase .04 = 4%! makes sense considering just learned older citizens likely vote.Now, let’s return voting difference Control Neighbors groups. Let’s model posterior probability distribution rates voting.","code":"\nlibrary(rstanarm)\nmodel_3 <- stan_glm(data = ch9_sham, \n                 formula = primary_06 ~ treatment + age, \n                 refresh = 0)\nprint(model_3, digits = 3)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      primary_06 ~ treatment + age\n##  observations: 10000\n##  predictors:   3\n## ------\n##                    Median MAD_SD\n## (Intercept)        0.084  0.016 \n## treatmentNeighbors 0.079  0.012 \n## age                0.004  0.000 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 0.457  0.003 \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\nage <- ch9_sham %>% \n  group_by(age) %>% \n  count(primary_06) \n\nage## # A tibble: 149 x 3\n## # Groups:   age [77]\n##      age primary_06     n\n##    <int>      <int> <int>\n##  1    20          0   119\n##  2    20          1    15\n##  3    21          0   120\n##  4    21          1    15\n##  5    22          0   150\n##  6    22          1    24\n##  7    23          0   119\n##  8    23          1    19\n##  9    24          0   102\n## 10    24          1    21\n## # … with 139 more rows\nage %>% \n  mutate(primary_06 = as.character(primary_06)) %>% \n  ggplot(aes(x = age, y = n, color = primary_06)) +\n  geom_point() +\n  labs(\n    title = \"Relationship Between Age and Voting\",\n    subtitle = \"In the 2006 Primary Elections\",\n    x = \"Age\",\n    y = \"Count\"\n  )\nshaming %>% \n  ggplot(aes(age, primary_06)) + \n  geom_jitter(alpha = 0.005, height = 0.1) + \n  geom_smooth(formula = y ~ x, method = \"lm\", se = FALSE) + \n  scale_y_continuous(breaks = c(0, 1), labels = c(\"Did Not Vote\", \"Voted\")) + \n  labs(title = \"Age and Voting in 2012 Michigan Primary Election\", \n       subtitle = \"Older people are more likely to vote\", \n       x = \"Age\", \n       y = NULL, \n       caption = \"Data from Gerber, Green, and Larimer (2008)\") \n# In progress. Modify x-axis labels *10. \n\nmodel_3 %>% \n  as_tibble() %>% \n  mutate(Neighbors = `(Intercept)` + `treatmentNeighbors`) %>% \n  mutate(Control = `(Intercept)`) %>% \n  select(Neighbors, Control) %>% \n  pivot_longer(cols = Neighbors:Control,\n               names_to = \"parameters\",\n               values_to = \"percent_voting\") %>% \n  ggplot(aes(percent_voting, fill = parameters)) +\n  geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"for Control versus Neighbors voting rates\",\n         x = \"% of group voting\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"n-parameters.html","id":"primary_06-age-solo-treatment","chapter":"11 N Parameters","heading":"11.2.3 primary_06 & (age + solo + treatment)","text":"Now analyzed impact various treatments voting behavior, let’s turn three different variables together: sex, solo (living alone), treatment.First, let’s look variables included left hand side. Besides (Intercept), given treatmentNeighbors, age, soloTRUE. mean baseline comparison, (Intercept), ? Look given: treatmentControl soloFALSE. Therefore, baseline comparison participants Control group live single person households. learned , age calculates starting age 0 therefore unhelpful practially. group, percentage voting .085 = 8.5%. figure, break variables respective medians mean.treatmentNeighbors, median 0.078: offset Neighbors treatment 0.078 compared control group. percent voting group 0.085 (Control) + 0.078 (Neighbors) = .163 = 16.3%. illustrates Neighbors treatment positively correlated voting.age, median 0.004: , age represents positively correlated increase voting someone ages. every decade older participant , chance voting increases 4%.soloTRUE, median 0.015: compared participants households exceeding 1 persons, participants live alone likely vote factor 0.015 = 1.5%. Note true baseline group Control participants include analysis Neighbors.","code":"\nmodel_4 <- stan_glm(data = ch9_sham, \n                 formula = primary_06 ~ treatment + age + solo, \n                 refresh = 0)\nprint(model_4, digits = 3)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      primary_06 ~ treatment + age + solo\n##  observations: 10000\n##  predictors:   4\n## ------\n##                    Median MAD_SD\n## (Intercept)        0.084  0.016 \n## treatmentNeighbors 0.079  0.013 \n## age                0.004  0.000 \n## soloTRUE           0.015  0.013 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 0.457  0.003 \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg\n# Modify x scale\n\nmodel_4 %>% \n  as_tibble() %>% \n  mutate(SoloTrue = `(Intercept)` + `soloTRUE`) %>% \n  mutate(SoloFalse = `(Intercept)`) %>% \n  select(SoloTrue, SoloFalse) %>% \n  pivot_longer(cols = SoloTrue:SoloFalse,\n               names_to = \"parameters\",\n               values_to = \"percent_voting\") %>% \n  ggplot(aes(percent_voting, fill = parameters)) +\n    geom_histogram(aes(y = after_stat(count/sum(count))),\n                   alpha = 0.5, \n                   bins = 100, \n                   position = \"identity\") +\n    labs(title = \"Posterior Probability Distribution\",\n         subtitle = \"for those who live alone versus live with other people\",\n         x = \"% of group voting\",\n         y = \"Probability\") + \n    scale_x_continuous(labels = scales::number_format()) +\n    scale_y_continuous(labels = scales::percent_format()) +\n    theme_classic()"},{"path":"n-parameters.html","id":"primary_06-age-solo-treatment-interactions","chapter":"11 N Parameters","heading":"11.2.4 primary_06 & (age, solo, treatment, + interactions)","text":"Since ’ve now studied model three different variables, time look interactions! , look primary_06 function age, solo, treatment, solo*treatment. solo*treatment mean us? means looking solo treatment variables correspond one another.","code":"\nmodel_5 <- stan_glm(data = ch9_sham, \n                 formula = primary_06 ~ age + solo + treatment + solo * treatment, \n                 refresh = 0)\nprint(model_5, digits = 3)## stan_glm\n##  family:       gaussian [identity]\n##  formula:      primary_06 ~ age + solo + treatment + solo * treatment\n##  observations: 10000\n##  predictors:   5\n## ------\n##                             Median MAD_SD\n## (Intercept)                 0.086  0.016 \n## age                         0.004  0.000 \n## soloTRUE                    0.009  0.014 \n## treatmentNeighbors          0.073  0.013 \n## soloTRUE:treatmentNeighbors 0.040  0.034 \n## \n## Auxiliary parameter(s):\n##       Median MAD_SD\n## sigma 0.458  0.003 \n## \n## ------\n## * For help interpreting the printed output see ?print.stanreg\n## * For info on the priors used see ?prior_summary.stanreg"},{"path":"n-parameters.html","id":"temperance-6","chapter":"11 N Parameters","heading":"11.2.5 Temperance","text":"\nFIGURE 11.4: Temperance\nFinally, let’s remember virtue Temperance. gist temperance : humble inferences, inferences always, certainly, unfortunately going match real world. apply shaming scenario?Prediction uncertainty main culprit. matter hard try, predict future. Though now conclusions shaming impacted voters 2006 primary elections, confidence say worked didn’t work work now.instance, perhaps impact neighbors knowing voting history greater midst pandemic, may locked inside interactions outside immediate proximity. Perhaps opposite true. unknown unknowns accounted models. predict pandemic, can predict change way people vote respond flyers.also issue representitiveness. voters 2006 primary election (already demonstrated willingness vote 2004 primary election) truly represent people voting gubernatorial election?complications must make inferences grain salt. say data science unhelpful! contrary, acknowledging deficits make inferences (actions take ) stronger.","code":""},{"path":"n-parameters.html","id":"summary-11","chapter":"11 N Parameters","heading":"11.3 Summary","text":"","code":""},{"path":"case-studies.html","id":"case-studies","chapter":"12 Case Studies","heading":"12 Case Studies","text":"master data science studying work experienced professionals. examples.","code":""},{"path":"tools.html","id":"tools","chapter":"Tools","heading":"Tools","text":"chapter broken following sections. Read whichever ones relevant.Working terminalGit, GitHub, RStudioPDFStyle guideHow use RpubsHow get helpHow make table","code":""},{"path":"tools.html","id":"working-with-the-terminal","chapter":"Tools","heading":"Working with the terminal","text":"Terminal powerful window allows interact computer’s filesystem directly. Let’s open Terminal tab left window start learning use Terminal.","code":""},{"path":"tools.html","id":"pwd-working-directory","chapter":"Tools","heading":"pwd: Working directory","text":"first question may working Terminal might : can’t see folders, know ? Well ’s great place start learning Terminal. see current folder , type pwd (preview working directory):, can see ’m currently user folder Yao.","code":""},{"path":"tools.html","id":"ls-seeing-items-in-the-directory","chapter":"Tools","heading":"ls: Seeing items in the directory","text":"Ok, knowing folder ’m help see ’s actually folder? Well, see items current folder, use command ls (long listing):Type ls terminal hit return/enter. see something like :Notice lists exactly items bottom right window! terminal just another way interact computer’s filesystem! Anything can normally mouse/trackpad, like opening folder, can also Terminal.","code":""},{"path":"tools.html","id":"cd-changing-directories","chapter":"Tools","heading":"cd: Changing directories","text":"Speaking opening folders, let’s open folders enter familiar place. open close folders, use cd (change directory). ’ll using cd change Desktop folder, place familiar .change Desktop directory, type cd Desktop/. helpful hint, type first letters folder file name, can hit tab computer auto complete name. Try ! Type cd Desk hit tab auto complete name!type ls , can see item Desktop listed.go back previous folder (aka directory ), can type cd .. two periods represent one level . can see hierarchy view Mac:","code":""},{"path":"tools.html","id":"mkdir-and-rmdir-make-and-remove-a-directory","chapter":"Tools","heading":"mkdir and rmdir: Make and remove a directory","text":"Now ’re Desktop folder, let’s get set-stay organized Gov 1005. Staying organized critical working many data projects. , using mkdir Gov-1005 (make directory) can create folder exclusively Gov 1005 like :Now, type ls, can see new folder created! Note used hyphen Gov 1005. Terminal can’t recognize spaces unless put \\ , like : mkdir Gov\\ 1005. can read programming naming convention .remove folder, use rmdir (remove directory). won’t using right now don’t need remove anything.","code":""},{"path":"tools.html","id":"touch-creating-files","chapter":"Tools","heading":"touch: Creating files","text":"order experiment next commands Terminal, ’ll need test file. , let’s create test.txt file play round . create file, use touch:, course, can see test.txt file created using ls.","code":""},{"path":"tools.html","id":"mv-moving-files","chapter":"Tools","heading":"mv: Moving files","text":"Oh ! created test.txt file, Gov-1005 folder, right now ’s desktop. happened created Gov-1005 folder using mkdir, forgot open using cd Gov-1005/. worries, can move file folder using mv:using mv first thing type mv file want move. next thing location want move . case want move test.txt Gov-1005/ type mv test.txt Gov-1005/. , can use cd enter Gov-1005 folder use ls see test.txt file successfully moved Gov-1005 folder:","code":""},{"path":"tools.html","id":"cp-copying-files","chapter":"Tools","heading":"cp: Copying files","text":"Copying files similar moving files Terminal. Using previous example, wanted copy test.txt Gov-1005 folder delete original test.txt file, just replace mv cp (copy paste):","code":"cp test.txt Gov-1005/"},{"path":"tools.html","id":"rm-removing-files","chapter":"Tools","heading":"rm: Removing files","text":"Ok, last Terminal command book teaching . , ’re done test.txt file. Let’s remove rm (remove):Make sure Gov-1005 folder type rm test.txt! Using ls, can see test file now gone.Congrats! now able basic tasks Terminal! want learn Terminal commands, check Sean Kross’s Unix Workbench.","code":""},{"path":"tools.html","id":"git-github-and-rstudio","chapter":"Tools","heading":"Git, GitHub, and RStudio","text":"next section focuses connecting GitHub RStudio using Git. care GitHub? Think Google Drive R code projects. computer blows , GitHub save R work just Google Drive saves Expos paper.","code":""},{"path":"tools.html","id":"installing-git","chapter":"Tools","heading":"Installing Git","text":"first step using GitHub installing Git computer. first, may already Git installed computer. check, go Terminal type git --version. already Git, command return Git version installed. get error, can download install git . can upgrade latest version Git like, never found necessary .","code":""},{"path":"tools.html","id":"github-accounts","chapter":"Tools","heading":"GitHub accounts","text":"installing Git, ’ll need GitHub account. like Google account. However, one difference GitHub account visible public. want pick name carefully. professional since sending potential employers link GitHub account near future. Check former Gov 1005 students’ GitHub profiles inspiration:Evelyn CaiEvelyn CaiJessica EdwardsJessica EdwardsBeau MecheBeau MecheOnce GitHub account, ready connect Git RStudio account. Type following two commands Terminal pane. Replace Name name @email.com email used sign GitHub.","code":"git config --global user.name \"Your Name\"\ngit config --global user.email \"your@email.com\""},{"path":"tools.html","id":"github-repositories","chapter":"Tools","heading":"GitHub repositories","text":"now ready create GitHub repository (repo). GitHub repo similar Google Drive folder. make first repo, make sure signed go GitHub homepage click green new button left.want choose good name repo add brief description. use productivity. can choose make repo public private, recommend make repo public important world see. keeps public GitHub profile clean professional. repo probably private. Let’s also add README file repo. document can add information.now first repo GitHub. next step download computer — process often known “cloning” — start editing syncing using Git. , ’ll need copy link repo use RStudio. , green button friend. Click copy link shown. can use clipboard button right automatically copy .","code":""},{"path":"tools.html","id":"connecting-github-to-rstudio","chapter":"Tools","heading":"Connecting GitHub to RStudio","text":"now ready connect productivity repo RStudio. link productivity repo copied, can go back RStudio begin new project. Go File, New Project:Next, ’ll need go steps create project: Version Control Git paste link GitHub click Create Project.Congrats! ’ve linked productivity repo RStudio. Note Github ask location place projects. recommend creating folder desktop called “projects” placing RStudio projects . Don’t just scatter across computer mess. dozens . organized!","code":""},{"path":"tools.html","id":"updating-.gitignore","chapter":"Tools","heading":"Updating .gitignore","text":"first thing always working new repo updating .gitignore file. can open file bottom right window Files tab. file includes files don’t want uploaded GitHub. can come handy working big datasets files private information. case, want add Rproj file .gitignore list. can see Git currently wants upload file GitHub:file private project file usually don’t want uploaded GitHub. , .gitignore, ’ll want add *.Rproj * tells computer want prevent files ending .Rproj uploaded:Save .gitignore file see .Rproj file disappear Git tab top right window. don’t see changes, click refresh button upper left.","code":""},{"path":"tools.html","id":"commit-and-push","chapter":"Tools","heading":"Commit and Push","text":"Now ’ve updated .gitignore file, want upload new version GitHub. , first select .gitignore file click Commit button Git window:open new window write commit message. message short note ’re adding/changing repo. case, ’ve updated .gitignore let’s write just :Press commit. way telling Git “Yes files want upload. ’m committed.” Next, press Push. pushes uploads files GitHub. (can probably guess pull , won’t using yet)Now, go GitHub repo refresh page, can see .gitignore file uploaded commit message:Congrats! just uploaded first file GitHub.One tricky aspect caching Github ID password. likely, type things first push. bad. , , Github needs know , otherwise people mess repo. hundreds commits/pushes term. don’t want type ID/password time! Follow instructions . Read link, key commands, issued R Console, :, logging , bring back Github. Accept defaults press Generate token button bottom. (may need change Note generated tokens .) Copy token created. look something like:8be3e800891425f8462c4491d9a4dbb5b1c1f35cThen, issue R command:Provide token. start new RStudio instance, Github ask login/password . might just ask one time. Seek help work.Happy Git GitHub useR best source Git Github problems arise.","code":"\nusethis::create_github_token()\ngitcreds::gitcreds_set()"},{"path":"tools.html","id":"pdf","chapter":"Tools","heading":"PDF","text":"Generating PDF files RStudio easy hard. easy R markdown designed produce files variety output formats, including PDF. hard , RStudio make PDF files, computer set must set [LaTeX](https://en.wikipedia.org/wiki/LaTeX installation. four options:Making PDF files may just “work,” especially using Mac. Give try!Making PDF files may just “work,” especially using Mac. Give try!doesn’t just work, strongly recommend using tinytex R package. Type commands:doesn’t just work, strongly recommend using tinytex R package. Type commands:Restart R everything just work.can just generate html file, open Chrome, select Print . . . drop-menu. get pop-window. Click arrow right Destination choose Save PDF drop-menu. ’ll see preview. Choose Save PDF option. convenient workflow , disaster strikes problem set due 10 minutes, reasonable option.can just generate html file, open Chrome, select Print . . . drop-menu. get pop-window. Click arrow right Destination choose Save PDF drop-menu. ’ll see preview. Choose Save PDF option. convenient workflow , disaster strikes problem set due 10 minutes, reasonable option.can install full LaTeX installation . Good luck! Don’t come us help.can install full LaTeX installation . Good luck! Don’t come us help.","code":"\ninstall.packages('tinytex')\ntinytex::install_tinytex()"},{"path":"tools.html","id":"style-guide","chapter":"Tools","heading":"Style guide","text":"Much material comes Tidyverse Style Guide. take points work submitted violates guidelines. extremis, may go advice, add code comment work explaining decision .","code":""},{"path":"tools.html","id":"comments","chapter":"Tools","heading":"Comments","text":"Include comments code. Easy--understand chunks code comments. code comment. code merit many, many lines comments, lines code . given file, many total lines comments lines code.Make comments meaningful. simple description code . best comments descriptions approaches tried considered. (code already tells us .) Good comments often “Dear Diary” quality: “. tried . finally chose thing reasons X, Y Z. work , look approach.” , structure often paragraph comments followed several lines code.line comment begin comment symbol (“hash”) followed single space: #. Code comments must separated code one empty line sides. Format code comments neatly. Ctrl-Shift-/ easiest way . Name R code chunks. Spelling matters. Comments constructed sentences, appropriate capitalization punctuation.","code":""},{"path":"tools.html","id":"graphics","chapter":"Tools","heading":"Graphics","text":"Use captions, titles, axis labels make clear tables graphics mean.Anytime make graphic without title (explaining graphic ), subtitle (highlighting key conclusion draw), caption (information source data) axis labels (information variables), justify decision code comment. (try ) always include items situations makes less sense. Ultimately, decisions , need understand reasoning.Use best judgment. example, sometimes axis labels unnecessary. Read Data Visualization: practical introduction Kieran Healy guidance making high quality graphics.","code":""},{"path":"tools.html","id":"formating","chapter":"Tools","heading":"12.0.1 Formating","text":"","code":""},{"path":"tools.html","id":"long-lines","chapter":"Tools","heading":"Long Lines","text":"Limit code 80 characters per line. fits comfortably printed page reasonably sized font. calling functions, can omit argument names common arguments (.e. arguments used almost every invocation function). Short unnamed arguments can also go line function name, even whole function call spans multiple lines.","code":""},{"path":"tools.html","id":"whitespace","chapter":"Tools","heading":"Whitespace","text":"%>% always space , usually followed new line. first step pipe, line indented two spaces. structure makes easier add new steps (rearrange existing steps) harder overlook step.ggplot2 code handled similar fashion. commands initial invocation ggplot() indented.","code":"\n# Good\n\niris %>%\n  group_by(Species) %>%\n  summarize_if(is.numeric, mean) %>%\n  ungroup() %>%\n  gather(measure, value, -Species) %>%\n  arrange(value)\n\n# Bad\n\niris %>% group_by(Species) %>% summarize_all(mean) %>%\nungroup %>% gather(measure, value, -Species) %>%\narrange(value)\n# Good\n\ndiamonds %>% \n  ggplot(aes(x = depth)) +\n    geom_histogram(bins = 100) +\n    labs(title = \"Distribution of Depth\",\n         x = \"Depth\",\n         y = \"Count\")\n\n# Bad\n\ndiamonds %>% \nggplot(aes(x = depth)) +\ngeom_histogram(bins = 100) + labs(title = \"Distribution of Depth\",\n         x = \"Depth\",\n         y = \"Count\")"},{"path":"tools.html","id":"commas","chapter":"Tools","heading":"Commas","text":"Always put space comma, never , just like regular English.","code":"\n# Good\n\nx[, 1]\n\n# Bad\n\nx[,1]\nx[ ,1]\nx[ , 1]"},{"path":"tools.html","id":"parentheses","chapter":"Tools","heading":"Parentheses","text":"put spaces inside outside parentheses regular function calls.","code":"\n# Good\n\nmean(x, na.rm = TRUE)\n\n# Bad\n\nmean (x, na.rm = TRUE)\nmean( x, na.rm = TRUE )"},{"path":"tools.html","id":"infix-operators","chapter":"Tools","heading":"Infix operators","text":"infix operators (=, ==, +, -, <-, et cetera) surrounded one space.operators — like ~, ::, :::, $, @, [, [[, ^, : — never surrounded spaces.may add extra spaces improves alignment = <-.add extra spaces places space usually allowed.","code":"\n# Good\n\nheight <- (feet * 12) + inches\nmean(x, na.rm = TRUE)\n\n# Bad\n\nheight<-feet*12+inches\nmean(x, na.rm=TRUE)\n# Good\n\nsqrt(x^2 + y^2)\ndf$z\nx <- 1:10\ny ~ a + b\n\n# Bad\n\nsqrt(x ^ 2 + y ^ 2)\ndf $ z\nx <- 1 : 10\ny~a + b\nlist(total = a + b + c,\n     mean = (a + b + c) / n)"},{"path":"tools.html","id":"messageswarningserrors","chapter":"Tools","heading":"Messages/Warnings/Errors","text":"R messages/warnings/errors never appear submitted document. right way deal issues find cause fix underlying problem. Students sometimes use “hacks” make messages/warnings/errors disappear. common hacks involve using code chunk options like message = FALSE, warning = FALSE, results = \"hide\", include = FALSE others. Don’t , general. message/warning/error worth understanding fixing. Don’t close eyes (metaphorically) pretend problem doesn’t exist. situations, however, , matter try, can’t fix problem. cases, can use one hacks, must make code comment directly , explaining situation. exception “setup” chunk (included default every new Rmd) comes include = FALSE. chunk, explanation necessary, convention.","code":""},{"path":"tools.html","id":"how-to-use-rpubs","chapter":"Tools","heading":"How to use Rpubs","text":"Rpubs provides free hosting service R work. use :Begin creating new repository GitHub. clone computer. calling repository “rpubs_example.” , put *Rproj .gitignore file. prevent private project file uploaded GitHub.Start new R Markdown file. Go File –> New File –> R Markdown. simplicity, leave name “Untitled” hit “OK.”Save file, , “Untitled” project directory.Knit. see following.Notice blue icon upper right-hand corner reads “Publish.” Click .asked whether want publish RPubs RStudio Connect. Choose RPubs. get reminder documents publish RPubs publicly visible. Click “Publish.”take RPubs website. need create account. Follow steps prompted.Add document details. Name document. Add meaningful slug – otherwise end ugly, long address didn’t choose can’t remember. can leave Description blank simplicity exercise.Hit “Continue,” et voilá! published first document Rpubs!one important step. “rsconnect” contains files specific computer want push GitHub. Therefore, .Rproj files , want add rsconnect folder .gitignore file. Click .gitignore, add hit “Save.” see disappear GitHub top right window. don’t see changes, hit Refresh button top right corner. Since ’ve updated .gitignore file, now good time commit push changes GitHub repository.","code":""},{"path":"tools.html","id":"how-to-get-help","chapter":"Tools","heading":"How to get help","text":"best data science superpower knowing ask question. – Mara Averick","code":""},{"path":"tools.html","id":"searching-for-help-with-r","chapter":"Tools","heading":"Searching for Help with R","text":"Google best friend. question something R, someone probably question someone else probably answered online. Stack Overflow RStudio Community two best forums finding asking questions/solutions. Adding “R” /“tidyverse” keyword search helps find relevant results exact question. specific possible wording question!","code":""},{"path":"tools.html","id":"reproducible-examples","chapter":"Tools","heading":"Reproducible Examples","text":"don’t find answer question ’re still stuck, ask question forums! order get best response, sharing reproducible example community allows others easily start left . reprex package allows easily.First, install reprex package. , load package.Let’s now look problematic code. data set “murders” package “dslabs” provides murder statistics, well population counts, states. Suppose want calculate rate murders state per 100k residents (number murders/population * 10^6). However, code misspelled “population,” resulting error:use reprex, highlight code necessary packages. copy highlighted code pressing Ctrl/Cmd + c. code now clipboard. Console, type reprex() hit Enter/Return. reprex automatically creates reproducible example places clipboard.Now now go favorite R forum paste reproducible example question! example post Slack.post RStudio community.","code":"\ninstall.packages(\"reprex\")\nlibrary(reprex)"},{"path":"tools.html","id":"how-to-make-a-table","chapter":"Tools","heading":"How to make a table","text":"gt R package creating elegant tables. First, ’ll create gt summary table observations data. Second, ’ll run regression display outcome using gtsummary, companion package gt specializes presenting results statistical models.want learn gt check fantastic guide. Go official gt package website. See extensive guide gtsummary.Load necessary libraries.set message=FALSE code chunk avoid showing ugly notes libraries loaded.Let’s pull data use table:Create simplest table gt(), key command: Now let’s make professional. gt offers variety functions add features like these5:can add title subtitle using tab_header(): default, titles text can formatted. want formatting, must wrap character string call md(), md stands (M)ark(d). example, bolded title. can change column names using cols_label(): Use tab_source_note() cite source data create caption. function exclusively providing source — though ’s handy way — can used display text ’d like: Using md() , can italicize name Enos study caption: Now table structure looks good, want format numbers . Let’s add dollar signs income column using fmt_currency(). function also adds commas (want commas without dollar signs use fmt_number()). vars() within fmt_currency() denotes variable formatted currency: Note line return title “Intergroup” “Contact” effect break title displayed md().","code":"\nlibrary(tidyverse)\nlibrary(primer.data)\nlibrary(gt)\nx <- trains %>%\n  select(gender, income, att_end) %>%\n  slice(1:5)\nx## # A tibble: 5 x 3\n##   gender income att_end\n##   <chr>   <dbl>   <dbl>\n## 1 Female 135000      11\n## 2 Female 105000      10\n## 3 Male   135000       5\n## 4 Male   300000      11\n## 5 Male   135000       5\nx %>% \n  gt()\nx %>% \n  gt() %>%\n   tab_header(title = \"Enos Data Observations\", \n              subtitle = \"Gender, Income, and End Attitude from the Trains Data\")\nx %>% \n  gt()%>%\n   tab_header(title = md(\"**Enos Data Observations**\"), \n              subtitle = \"Gender, Income, and End Attitude from the Trains Data\")\nx %>% \n  gt()%>%\n    tab_header(title = md(\"**Enos Data Observations**\"), \n               subtitle = \"Gender, Income, and End Attitude from the Trains Data\") %>%\n    cols_label(gender = \"Gender\",\n               income = \"Income\", \n               att_end = \"End Attitude\")\nx %>% \n  gt()%>%\n   tab_header(title = md(\"**Enos Data Observations**\"), \n              subtitle = \"Gender, Income, and End Attitude from the Trains Data\") %>%\n  cols_label(gender = \"Gender\",\n             income = \"Income\", \n             att_end = \"End Attitude\") %>% \n  tab_source_note(\"Source: Ryan Enos\")\nx %>% \n  gt()%>%\n   tab_header(title = md(\"**Enos Data Observations**\"), \n              subtitle = \"Gender, Income, and End Attitude from the Trains Data\") %>%\n  cols_label(gender = \"Gender\",\n             income = \"Income\", \n             att_end = \"End Attitude\") %>% \n  tab_source_note(md(\"Source: Ryan Enos, *Causal Effect of Intergroup Contact on Exclusionary Attitudes*\"))\nx %>% \n  gt() %>%\n    tab_header(title = md(\"**Enos Data Observations**\"), \n               subtitle = \"Gender, Income, and End Attitude from the Trains Data\")%>%\n    cols_label(gender = \"Gender\",\n               income = \"Income\", \n               att_end = \"End Attitude\") %>% \n    tab_source_note(md(\"Source: Ryan Enos, *Causal Effect of Intergroup \n                       Contact on Exclusionary Attitudes*\")) %>%\n    fmt_currency(columns = vars(income), \n                 decimals = 0) "},{"path":"tools.html","id":"regression-tables","chapter":"Tools","heading":"Regression tables","text":"can making gt table stan_glm() regression object. Key gtsummary package tbl_regression() function.\n          1\n          \n           \n          CI = Confidence Interval\n           ","code":"\nlibrary(rstanarm)\nlibrary(broom.mixed)\nlibrary(gtsummary)\n\nfit2 <- stan_glm(att_end ~ party, data = trains, refresh = 0)\n\ntbl_regression(fit2, \n               intercept = TRUE, \n               estimate_fun = function(x) style_sigfig(x, digits = 2)) %>%\n  as_gt() %>%\n    tab_header(title = \"Regression of Attitudes about Immigration\", \n               subtitle = \"The Effect of Party on End Attitude\") %>%\n    tab_source_note(md(\"Source: Ryan Enos, *Causal Effect of Intergroup \n                        Contact on Exclusionary Attitudes*\"))"},{"path":"shiny.html","id":"shiny","chapter":"Shiny","heading":"Shiny","text":"","code":""},{"path":"shiny.html","id":"helpful-resources","chapter":"Shiny","heading":"Helpful Resources","text":"number resources Shiny get started, definitely take look following materials addition using guide:Shiny Video Tutorials comprehensive video tutorial goes basics building Shiny app adding customization. 2 half hours long, individual chapters can found link walk throughs smaller topics. first 40 minutes tutorial particularly helpful getting basic app running available shinyapps.io.Shiny Video Tutorials comprehensive video tutorial goes basics building Shiny app adding customization. 2 half hours long, individual chapters can found link walk throughs smaller topics. first 40 minutes tutorial particularly helpful getting basic app running available shinyapps.io.Shiny Written Tutorials also quite comprehensive, walks templates example Shiny document. breaks set UI, control widgets, reactive output (like dropdown variables), using R scripts data, using reactive expressions, sharing app.Shiny Written Tutorials also quite comprehensive, walks templates example Shiny document. breaks set UI, control widgets, reactive output (like dropdown variables), using R scripts data, using reactive expressions, sharing app.Mastering Shiny Hadley Wickham really nice guide using Shiny best practices higher-quality apps, including reducing code duplication.Mastering Shiny Hadley Wickham really nice guide using Shiny best practices higher-quality apps, including reducing code duplication.","code":""},{"path":"shiny.html","id":"set-up-and-getting-started","chapter":"Shiny","heading":"Set Up and Getting Started","text":"Sign Shiny account https://www.shinyapps.io/.Sign Shiny account https://www.shinyapps.io/.Install Shiny package : install.packages(“shiny”)Install Shiny package : install.packages(“shiny”)Create Shiny app RStudio : File > New File > Shiny Web App…Create Shiny app RStudio : File > New File > Shiny Web App…popup, choose Single File (app.R) - doesn’t particularly matter, way Preceptor taught class, way example set . prefer two separate files ui server, also valid might allow cleaner code.popup, choose Single File (app.R) - doesn’t particularly matter, way Preceptor taught class, way example set . prefer two separate files ui server, also valid might allow cleaner code.now functioning example Shiny App - click Run App use keyboard shortcut Cmd/Ctrl + Shift + Enter see app action! can view new window, external web browser (see dropdown arrow next Run App options). Notice example includes slider allows viewer change number bins histogram .now functioning example Shiny App - click Run App use keyboard shortcut Cmd/Ctrl + Shift + Enter see app action! can view new window, external web browser (see dropdown arrow next Run App options). Notice example includes slider allows viewer change number bins histogram .","code":""},{"path":"shiny.html","id":"building-your-basic-app","chapter":"Shiny","heading":"Building Your Basic App","text":"Now functioning Shiny App running, let’s take closer look files directories. Notice app.R file created within directory. important remember files within directory accessible app online. Taking look app.R file, can see four necessary elements file create working app:First, calls library(shiny), defines user interface ui <- fluidPage(…)also defines server logic, takes input UI, produces output based input, defined server <- function(input, output) {…}Finally, calls shinyApp(ui, server) run app.","code":""},{"path":"shiny.html","id":"setting-up-the-basic-ui","chapter":"Shiny","heading":"Setting Up the Basic UI","text":"According Preceptor, Gov 1005 Final Projects formatted three tabs, well embedded video. basic set might something like :can run example app repo see code action. Breaking code , created navigation bar page three tabs. first tab display model, two potential input options, Option Option B. can customized based model, number inputs desired. Note wrapped inside fluidPage(), simply creates basic page layout can support rows columns desired. Breaking tab , sidebarLayout() defining layout page sidebar panel main panel. Within sidebar panel, inserted selectInput, allow us reactive pages.Note used HTML formatting Discussion pages.","code":"ui <- navbarPage(\n  \"Final Project Title\",\n  tabPanel(\"Model\",\n           fluidPage(\n              titlePanel(\"Model Title\"),\n              sidebarLayout(\n                  sidebarPanel(\n                      selectInput(\n                          \"plot_type\",\n                          \"Plot Type\",\n                          c(\"Option A\" = \"a\", \"Option B\" = \"b\")\n                      )),\n                  mainPanel(plotOutput(\"line_plot\")))\n             )),\n  tabPanel(\"Discussion\",\n           titlePanel(\"Discussion Title\"),\n           p(\"Tour of the modeling choices you made and \n              an explanation of why you made them\")),\n  tabPanel(\"About\", \n          titlePanel(\"About\"),\n          h3(\"Project Background and Motivations\"),\n          p(\"Hello, this is where I talk about my project.\"),\n          h3(\"About Me\"),\n          p(\"My name is ______ and I study ______. \n             You can reach me at ______@college.harvard.edu.\")))"},{"path":"shiny.html","id":"setting-up-the-server","chapter":"Shiny","heading":"Setting up the Server","text":"server function perform backend logic app. can put R code create plots tables needed. inputs come UI definitions, like selectInput() sliderInput(). UI example, used select input named “plot_type,” two options: B. outputs defined within server function, rendered defined UI. UI example, want render plotOutput named “line_plot.”server function ideally use plot_type input create line_plot. example basic server function might something like :","code":"server <- function(input, output) {\n    output$line_plot <- renderPlot({\n        # Generate type based on input$plot_type from ui\n        \n        ifelse(\n            input$plot_type == \"a\",\n            \n            # If input$plot_type is \"a\", plot histogram of \"waiting\" column \n            # from the faithful dataframe\n            \n            x   <- faithful[, 2],\n            \n            # If input$plot_type is \"b\", plot histogram of \"eruptions\" column\n            # from the faithful dataframe\n            \n            x   <- faithful[, 1]\n        )\n        \n        # Draw the histogram with the specified number of bins\n        \n        hist(x, col = 'darkgray', border = 'white')\n    })\n}"},{"path":"shiny.html","id":"organization","chapter":"Shiny","heading":"Organization","text":"Now basic app running, let’s talk organization. One common problem shows lot people tend throw code app.R file, causing grow hundreds even thousands lines code long. happens easily can backend logic written server function, additionally entire HTML markdown pages can formatted UI section. ways stop app.R file becoming incredibly messy.First, can put large blocks text separate files. example, take HTML formatting “” tab section put separate .html file, similarly format section using markdown. simply use shiny function includeHTML() includeMarkdown() insert file contents.Second, put much prep work possible separate (multiple separate) R file. helpful readability, generate small files, also helpful app run heavy prep calculations ’s trying load. , tip perform heavy operations document titled prep-shiny.R, example, save helpful outputs graphic images gifs, rds files can loaded app.R file.Third, keep repository clean. save unneccessary raw data files like repository, may just create clutter. Make sure update .gitignore file anything like Github repository Shiny App. includes .Rproj file, raw data files, cache files.","code":""},{"path":"shiny.html","id":"customizations","chapter":"Shiny","heading":"Customizations","text":"Finally, can take look simple way customize look Shiny App. package shinythemes can easily added give app theme. shinythemes website displays various themes quite nicely, can use theme selector click different themes.Shiny gallery helpful browsing different layouts types visualization inspiration.","code":""},{"path":"maps.html","id":"maps","chapter":"Maps","heading":"Maps","text":"order make maps, first need data.6","code":""},{"path":"maps.html","id":"tidycensus","chapter":"Maps","heading":"Tidycensus","text":"tidycensus package great way load interesting data mapping. Note use package, ’ll need Census API key. can request key . key, ’ll need following two commands use package:\"API KEY\" replaced API key.7How can retrieve state’s population 2010 Census? get data decennial census, can use function get_decennial().8 takes three arguments get data want:geography determines unit analysis. , use “state,” many geographies use, “us” entire country, “county” counties, .variables selects Census variables want. Unfortunately, rather opaque names. didn’t know “P001001” variable name population, couple options:\nUse load_variables() function tidycensus generate tibble variable names (described ).\nSearch data.census.gov variable want download results search; variable name .csv file.\nUse load_variables() function tidycensus generate tibble variable names (described ).Search data.census.gov variable want download results search; variable name .csv file.year year. get_decennial() can obtain data 1990, 2000, 2010 Census.output tibble four columns:GEOID part FIPS code, short Federal Information Processing Standard. ’s standardized way identify states, counties, census tracts, etc. instance ’s two digits wide. specific get Census boundaries, longer number gets.NAME generic name get_decennial() gives unit selected geography; , state names. Note 52 observations; “state” geography includes D.C. Puerto Rico along 50 states.variable name variable selected.value value variable selected (, population).wanted select one variable? default, get_decennial() stack variables top , identifying variable column. let’s say wanted know proportion population state lives rural areas. select two variables (total population rural population) receive tibble 104 observations, state appearing per variable. may helpful way receive data, depending purposes. (faceting, may want data long format like , ’ll see .) can request data wide format instead using option output = \"wide\"., created tibble states rows total population (“P001001”) rural population (“P002005”) columns. plot proportion state’s population lives rural areas now simple application tidyverse functions know love. First, let’s create variable rural population proportion order states variable:Next, let’s plot using ggplot():kind plot great want visualize states rural states least. see immediately Maine Vermont rural D.C. entirely urban (one expect, given city). wanted sense proportion rural residents varied geographically? figure plot like one know something U.S. geography. much easier, however, see information directly map United States. R makes easy .","code":"\nlibrary(tidycensus)\n\ncensus_api_key(\"API KEY\")\nlibrary(tidyverse)\n\npop <- get_decennial(geography = \"state\",\n                     variables = \"P001001\",\n                     year = 2010)\n\nglimpse(pop)## Rows: 52\n## Columns: 4\n## $ GEOID    <chr> \"01\", \"02\", \"04\", \"05\", \"06\", \"22\", \"21\", \"08\", \"09\", \"10\", …\n## $ NAME     <chr> \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"L…\n## $ variable <chr> \"P001001\", \"P001001\", \"P001001\", \"P001001\", \"P001001\", \"P001…\n## $ value    <dbl> 4.8e+06, 7.1e+05, 6.4e+06, 2.9e+06, 3.7e+07, 4.5e+06, 4.3e+0…\nrural <- get_decennial(geography = \"state\",\n                       variables = c(\"P001001\", \"P002005\"),\n                       year = 2010,\n                       output = \"wide\")\nglimpse(rural)## Rows: 52\n## Columns: 4\n## $ GEOID   <chr> \"01\", \"02\", \"04\", \"05\", \"06\", \"22\", \"21\", \"08\", \"09\", \"10\", \"…\n## $ NAME    <chr> \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Lo…\n## $ P001001 <dbl> 4.8e+06, 7.1e+05, 6.4e+06, 2.9e+06, 3.7e+07, 4.5e+06, 4.3e+06…\n## $ P002005 <dbl> 1957932, 241338, 651358, 1278329, 1880350, 1215567, 1806024, …\nrural <- rural %>%\n  rename(state = NAME) %>%\n  mutate(prop_rural = P002005/P001001,\n         state = reorder(state, prop_rural))\nrural %>%\n  ggplot(aes(x = prop_rural, y = state)) +\n  geom_point() +\n  ylab(\"\") +\n  xlab(\"Rural Population Proportion\")"},{"path":"maps.html","id":"conceptual-introduction-to-mapping","chapter":"Maps","heading":"Conceptual introduction to mapping","text":"two underlying important pieces information spatial data: coordinates object coordinates relate physical location Earth, also known coordinate reference system CRS.coordinates familiar geography. CRS uses three-dimensional model earth define specific locations surface grid. object can defined relation longitude (East/West) latitude (North/South).gets complicated attempting create projection. projection translation three-dimensional grid onto two-dimensional plane. animation demonstrates process.Thus, CRS determines geometric object look displayed two-dimensional screen. see, usually don’t need select CRS working tidycensus, good know concept ever work spatial data.","code":""},{"path":"maps.html","id":"vector-versus-spatial-data","chapter":"Maps","heading":"Vector versus spatial data","text":"Spatial data defined CRS can either vector raster data. Vector data based points can connected form lines polygons. located within coordinate reference system. example road map.Raster data, however, values within grid system, satellite imagery. book, dealing vector data, format get data tidycensus package.","code":""},{"path":"maps.html","id":"sf-vs-sp","chapter":"Maps","heading":"sf vs sp","text":"older package, sp, lets user handle vector raster data. book focus vector data sf package. main differences sp sf packages store CRS information. sp uses spatial sub classes, sf stores data data frames, allowing interact dplyr methods ’ve learned far.","code":""},{"path":"maps.html","id":"shapefiles","chapter":"Maps","heading":"Shapefiles","text":"R can handle importing different kinds file formats spatial data, including KML geojson. ’ll focus shapefiles, created Esri 1990s. Though refer “shapefile” singular, ’s actually collection least three basic files:.shp - lists shape vertices.shx - index offsets.dbf - relationship file geometry attributes (data)files must present directory named (except file extension) import correctly. Thankfully, tidycensus grab geometric information Census shapefile .","code":""},{"path":"maps.html","id":"mapping-with-tidycensus-and-geom_sf","chapter":"Maps","heading":"Mapping with tidycensus and geom_sf()","text":"order start mapping R, need get little data tidycensus package. can use get_decennial() function , time adding argument geometry = TRUE.just like tibble , except now funky “multipolygon” called geometry.9 geometry column contains information ggplot() needs create map.order create map using ggplot(), need new geom: geom_sf(). works much like geoms seen , geom_point() geom_line(), except works spatial data. Let’s see happens run geom_sf() arguments:Well, ’s interesting. boundaries state, including Alaska Hawaii. problems. ggplot2 best fit everything one image, taxing system. can’t see particular state well, map zoomed far . Also, colors didn’t fill data., let’s create new map geom_sf() fill prop_rural. ’ll filter Alaska, Hawaii, Puerto Rico now.Now something usable! already lot ’d want map—notably, states shaded based variable interest, helping us see patterns data. use bit makeover, ’ll give next section.","code":"\nrural <- get_decennial(geography = \"state\",\n                       variables = c(\"P001001\", \"P002005\"),\n                       year = 2010,\n                       output = \"wide\",\n                       geometry = TRUE) %>%\n  rename(state = NAME) %>%\n  mutate(prop_rural = P002005/P001001,\n         state = reorder(state, prop_rural))\n\nglimpse(rural)## Rows: 52\n## Columns: 6\n## $ GEOID      <chr> \"01\", \"02\", \"04\", \"05\", \"06\", \"22\", \"21\", \"08\", \"09\", \"10\"…\n## $ state      <fct> Alabama, Alaska, Arizona, Arkansas, California, Louisiana,…\n## $ P001001    <dbl> 4.8e+06, 7.1e+05, 6.4e+06, 2.9e+06, 3.7e+07, 4.5e+06, 4.3e…\n## $ P002005    <dbl> 1957932, 241338, 651358, 1278329, 1880350, 1215567, 180602…\n## $ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((-85 31, -85..., MULTIPOLYGON …\n## $ prop_rural <dbl> 0.410, 0.340, 0.102, 0.438, 0.050, 0.268, 0.416, 0.138, 0.…\nrural %>%\n  ggplot() +\n  geom_sf()\nrural %>%\n  filter(! state %in% c(\"Alaska\", \"Hawaii\", \"Puerto Rico\")) %>%\n  ggplot(aes(fill = prop_rural)) +\n  geom_sf()"},{"path":"maps.html","id":"making-maps-pretty","chapter":"Maps","heading":"Making maps pretty","text":"ways can aesthetically improve map:Make fill colors easier distinguishMake darker colors map onto higher values prop_ruralRemove gray backgroundGive legend informative title add title captionA great function providing fill colors maps scale_fill_viridis_c(). different color palettes can selected option argument, easily distinguishable displayed black white people common forms colorblindness. can also reverse default order colors direction = -1 option. function continuous variables prop_rural; discrete variable, can use analogous scale_fill_viridis_d().’ll also use theme_void(), great theme maps gets rid gray background. Finally, ’ll use labs() give legend title “Percent Rural” (multiply values variable 100) add overall title caption.map, clear rural states concentrated Great Plains, South, parts New England, (South)west Northeast less rural.","code":"\nrural %>%\n  filter(! state %in% c(\"Alaska\", \"Hawaii\", \"Puerto Rico\")) %>%\n  ggplot(aes(fill = prop_rural * 100)) +\n  geom_sf() + \n  scale_fill_viridis_c(option = \"plasma\",\n                       direction = -1) +\n  labs(title = \"Rural geography of the United States\",\n       caption = \"Source: Census 2010\",\n       fill = \"Percent Rural\") +\n  theme_void()"},{"path":"maps.html","id":"adding-back-alaska-and-hawaii","chapter":"Maps","heading":"Adding back Alaska and Hawaii","text":"Alaska Hawaii? want display map without zoom , can take advantage argument get_decennial(), shift_geo = TRUE:Now, Alaska Hawaii can displayed near lower 48 states. Note option removes Puerto Rico tibble altogether, good option want show data Puerto Rico.","code":"\nrural_shifted <- get_decennial(geography = \"state\",\n                               variables = c(\"P001001\", \"P002005\"),\n                               year = 2010,\n                               output = \"wide\",\n                               geometry = TRUE,\n                               shift_geo = TRUE) %>%\n  rename(state = NAME) %>%\n  mutate(prop_rural = P002005/P001001,\n         state = reorder(state, prop_rural))\nrural_shifted %>%\n  ggplot(aes(fill = prop_rural * 100)) +\n  geom_sf() + \n  scale_fill_viridis_c(option = \"plasma\",\n                       direction = -1) +\n  labs(title = \"Rural geography of the United States\",\n       caption = \"Source: Census 2010\",\n       fill = \"Percent Rural\") +\n  theme_void()"},{"path":"maps.html","id":"faceting-maps","chapter":"Maps","heading":"Faceting maps","text":"powerful tool ggplot2 use maps faceting. Let’s grab data ACS population Harris County, Texas census tracts race:code similar ’ve used , except retrieving data American Community Survey using get_acs() instead decennial census. new features worth pointing :year get_acs() last year five year sample. Thus, data 2014–2018. can choose years 2009–2018.Since geography “tract,” specifying state county.obtaining data long format, makes faceting easier.added summary_var, “B02001_001,” total population. ’ll see, appears separate column, helpful us. (exercise, try going back code created rural see long format summary_var.)Let’s take look harris:similar ’ve seen . Note now moe summary_moe columns, stand “margin error.” , unlike decennial census, ACS survey thus values get estimates true value.10","code":"\nracevars <- c(White = \"B02001_002\", \n              Black = \"B02001_003\", \n              Asian = \"B02001_005\",\n              Hispanic = \"B03003_003\")\nharris <- get_acs(geography = \"tract\",\n                  variables = racevars, \n                  year = 2018,\n                  state = \"TX\",\n                  county = \"Harris County\",\n                  geometry = TRUE,\n                  summary_var = \"B02001_001\") \nglimpse(harris)## Rows: 3,144\n## Columns: 8\n## $ GEOID       <chr> \"48201100000\", \"48201100000\", \"48201100000\", \"48201100000…\n## $ NAME        <chr> \"Census Tract 1000, Harris County, Texas\", \"Census Tract …\n## $ variable    <chr> \"White\", \"Black\", \"Asian\", \"Hispanic\", \"White\", \"Black\", …\n## $ estimate    <dbl> 3426, 1045, 230, 892, 2936, 3591, 7, 2119, 2973, 885, 0, …\n## $ moe         <dbl> 390, 308, 106, 241, 1358, 2196, 14, 1013, 430, 242, 13, 4…\n## $ summary_est <dbl> 5063, 5063, 5063, 5063, 6820, 6820, 6820, 6820, 4403, 440…\n## $ summary_moe <dbl> 478, 478, 478, 478, 3685, 3685, 3685, 3685, 502, 502, 502…\n## $ geometry    <MULTIPOLYGON [°]> MULTIPOLYGON (((-95 30, -95..., MULTIPOLYGON…"},{"path":"maps.html","id":"transforming-and-mapping-the-data","chapter":"Maps","heading":"Transforming and mapping the data","text":"Now can use facet_wrap() look race variables side--side:Note easy create percentages using summary_est. also used color = Percent scale_color_viridis_c() avoid annoying borders around census tracts. Otherwise, doesn’t differ much code , yet much easier make comparisons across variables. Faceting powerful tool use maps.","code":"\nharris %>%\n  mutate(Percent = 100 * (estimate / summary_est)) %>%\n  ggplot(aes(fill = Percent, color = Percent)) +\n  facet_wrap(~ variable) +\n  geom_sf() +\n  scale_fill_viridis_c(direction = -1) +\n  scale_color_viridis_c(direction = -1) +\n  labs(title = \"Racial geography of Harris County, Texas\",\n       caption = \"Source: American Community Survey 2014-2018\") +\n  theme_void()"},{"path":"maps.html","id":"want-to-explore-further","chapter":"Maps","heading":"Want to explore further?","text":"Take look tidycensus website.shapefiles place tidycensus, can read using st_read() sf package, join data using dplyr functions, map geom_sf() shown .\nmay look using coord_sf() trouble displaying data.\nmay look using coord_sf() trouble displaying data.Want add interactivity maps? Check leaflet package. ’s good introduction using leaflet tidycensus.Practice skills Andrew Tran’s case study slides, can replicate graphic Washington Post. Note: involves packages haven’t shown book, follow along step step able see used.","code":""},{"path":"animation.html","id":"animation","chapter":"Animation","heading":"Animation","text":"gganimate package creating animated ggplots. provides range new functionality can added plot object order customize change time.Key features gganimate:transitions: want data changeviews: want viewpoint changeshadows: want animation memoryMany thanks Alboukadel Kassambara allowing us use tutorial section.","code":""},{"path":"animation.html","id":"set-up","chapter":"Animation","heading":"Set Up","text":"Load required packages set default ggplot2 theme theme_bw():","code":"\nlibrary(tidyverse)\nlibrary(gapminder)\nlibrary(gganimate)\ntheme_set(theme_bw())\nhead(gapminder)## # A tibble: 6 x 6\n##   country     continent  year lifeExp      pop gdpPercap\n##   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n## 1 Afghanistan Asia       1952    28.8  8425333      779.\n## 2 Afghanistan Asia       1957    30.3  9240934      821.\n## 3 Afghanistan Asia       1962    32.0 10267083      853.\n## 4 Afghanistan Asia       1967    34.0 11537966      836.\n## 5 Afghanistan Asia       1972    36.1 13079460      740.\n## 6 Afghanistan Asia       1977    38.4 14880372      786."},{"path":"animation.html","id":"transition-through-distinct-states-in-time","chapter":"Animation","heading":"Transition through distinct states in time","text":"Begin static plot:","code":"\np <- ggplot(gapminder,\n            aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)) +\n      geom_point(show.legend = FALSE, alpha = 0.7) +\n      scale_color_viridis_d() +\n      scale_size(range = c(2, 12)) +\n      scale_x_log10() +\n      labs(x = \"GDP per capita\", y = \"Life expectancy\")\np"},{"path":"animation.html","id":"basics","chapter":"Animation","heading":"Basics","text":"Key R function: transition_time(). transition length states set correspond actual time difference .Label variables: frame_time. Gives time current frame corresponds .","code":"\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\")"},{"path":"animation.html","id":"create-facets-by-continent","chapter":"Animation","heading":"12.0.2 Create facets by continent","text":"","code":"\np + facet_wrap(~continent) +\n  transition_time(year) +\n  labs(title = \"Year: {frame_time}\")"},{"path":"animation.html","id":"let-the-view-follow-the-data-in-each-frame","chapter":"Animation","heading":"12.0.3 Let the view follow the data in each frame","text":"","code":"\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  view_follow(fixed_y = TRUE)"},{"path":"animation.html","id":"show-preceding-frames-with-gradual-falloff","chapter":"Animation","heading":"12.0.4 Show preceding frames with gradual falloff","text":"shadow meant draw small wake data showing latest frames current. can choose gradually diminish size /opacity shadow. length wake given absolute frames make animation susceptible changes framerate. Instead given proportion total length animation.","code":"\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_wake(wake_length = 0.1, alpha = FALSE)"},{"path":"animation.html","id":"show-the-original-data-as-background-marks","chapter":"Animation","heading":"12.0.5 Show the original data as background marks","text":"shadow lets show raw data behind current frame. past /future raw data can shown styled want.","code":"\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_mark(alpha = 0.3, size = 0.5)"},{"path":"animation.html","id":"reveal-data-along-a-given-dimension","chapter":"Animation","heading":"Reveal data along a given dimension","text":"transition allows let data gradually appear, based given time dimension. Start static plot:","code":"\np <- ggplot(airquality,\n            aes(Day, Temp, group = Month, color = factor(Month))) +\n      geom_line() +\n      scale_color_viridis_d() +\n      labs(x = \"Day of Month\", y = \"Temperature\") +\n      theme(legend.position = \"top\")\np"},{"path":"animation.html","id":"let-data-gradually-appear","chapter":"Animation","heading":"12.0.6 Let data gradually appear","text":"Reveal day (x-axis)Show points:Points can kept giving unique group:","code":"\np + transition_reveal(Day)\np + \n  geom_point() +\n  transition_reveal(Day)\np + \n  geom_point(aes(group = seq_along(Day))) +\n  transition_reveal(Day)"},{"path":"animation.html","id":"transition-between-several-distinct-stages-of-the-data","chapter":"Animation","heading":"Transition between several distinct stages of the data","text":"Data preparation:Create bar plot mean temperature:transition_states():enter_grow() + enter_fade()","code":"\nmean.temp <- airquality %>%\n  group_by(Month) %>%\n  summarise(Temp = mean(Temp), .groups = \"drop_last\")\nmean.temp## # A tibble: 5 x 2\n##   Month  Temp\n##   <int> <dbl>\n## 1     5  65.5\n## 2     6  79.1\n## 3     7  83.9\n## 4     8  84.0\n## 5     9  76.9\np <- ggplot(mean.temp, \n            aes(Month, Temp, fill = Temp)) +\n      geom_col() +\n      scale_fill_distiller(palette = \"Reds\", direction = 1) +\n      theme_minimal() +\n      theme(panel.grid = element_blank(),\n            panel.grid.major.y = element_line(color = \"white\"),\n            panel.ontop = TRUE)\np\np + transition_states(Month, wrap = FALSE) +\n  shadow_mark()\np + transition_states(Month, wrap = FALSE) +\n  shadow_mark() +\n  enter_grow() +\n  enter_fade()"},{"path":"animation.html","id":"save-your-animation","chapter":"Animation","heading":"Save your animation","text":"code create animations can take long time run. created animation, ’ll want save somewhere can display without run code.key function use anim_save(), similar saving static plots using ggsave(). save animation gif. first argument filename want give animation second animation object, animation object called p wanted save file called “p.gif,” save like :don’t supply second argument, anim_save() default saving recent animation rendered. anim_save(\"animation.gif\") save recent animation “animation.gif.”don’t want save gif current directory, can specify directory using path argument. Let’s say subdirectory working directory called “gifs.” can thus save “animation.gif” “gifs” anim_save(\"animation.gif\", path = \"gifs\").created gif, can post online. can post Facebook selecting “Photo/Video” Facebook status Twitter clicking photo icon.","code":"\nanim_save(\"p.gif\", p)"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
