# Priorities


* Chapter 8 should include two other model discussions. First, leave in intercept. Second, a model with a continuous predictor. In both cases, we would still be doing three parameter models. And that it would allow chapter 9 to focus on more complex models. For continuous use att_end ~ att_start.


* Rename all my Conclusions as Summarys. Have the Summary really highlight the key R commands we have learned in each chapter.


* Expand the Shiny appendix to highlight those aspects of Shiny that are most used by students for their final projects. Start with panel tabs. And math. And regression tables. Maybe switch the entire focus to the Mastering Shiny book?

* Redo chapter 3, centering around probability issues.

* Chapter 6 must explain clearly the concept of standard error, p-values and confidence intervals. Need this rock-solid before going into MAD SD complexity in chapter 7. Actually, all this should start in Chapter 2. -- Mak


* Chapter 7 Coverage section should use a simulation study to confirm that our 95% confidence interval for the mean covers the true mean 95% of the time. It should also use a simulation study to confirm that our 95% confidence interval for the prediction covers the true value 95% of the time, i.e., that posterior predictive distributions work. We purposely skipped this in the bead example from the start of the chapter.


* Explain transformations and centering somewhere in Chapter 7, and maybe normalization as well. Sometimes we want to measure height in centimenters, sometimes in feet. Sometimes using z-scores is best. Sometimes percentiles. Discuss continuous versus categorial variables.

* Chapter 7 should introduce, gently, the concept of in-sample and out-of-sample. As well as predictive accuracy as being a good way to judge how good your model is. What are some useful measures of predictive accuracy? Discuss our objective functions; minimize what? when would median be better than mean? Find a skewed data set and show how guessing the median works better than guessing the mean, if you care about absolute difference. (Can we estimate the median with stan_glm()?)

* Move shaming half of chapter 9 into chapter 10. Talk about size of data being a problem. 

Add Tukey quote about burning desire. 


## To Discuss Later


* Rewrite the command line discussion to just use this:

https://merely-useful.github.io/py-rse/bash-basics.html

* Switch chapter 6 example to use c(16, 34) so that predictions are straight forward, or would they be?

* Maybe end chapter 6 with stan_glm() use, but no discussion about what any of it means. Just how easy it is! Then, chapter 7 at end, do gender ~ height. Can skip in chapter 8 because there is so much else going on. Then an example in chapter 9.

* Track down these warnings from the end of book-building.

Output created: docs/index.html
Warning messages:
1: Removed 19 rows containing missing values (geom_point). 
2: Removed 2 rows containing missing values (geom_bar). 
3: Removed 2 rows containing missing values (geom_bar). 


* How should we format plots? Should be a standard way. How does R4DS do it? Should we always make it out.width="100%"?

* kenya has some variables, like distance and pop_density, with very skewed distributions. This might be handy for use in chapter 3 when playing the prediction game.

* Use r scales::comma() throughout

* Consider this for entire document:  
html_document:
    code_folding: "hide"
    
* Books

https://rstudio4edu.github.io/rstudio4edu-book/   
https://ubc-dsci.github.io/introduction-to-datascience/


* Courses

https://dataviz-2021.netlify.app/
https://jmbuhr.de/dataIntro20/
https://athanasiamo.github.io/tidyquintro/

* Other

https://evamaerey.github.io/flipbooks/about (use flipbooks for classroom exercises?)

* Lots of interesting items: https://holtzy.github.io/Pimp-my-rmd/. I like the hack of making your Rmd an index.Rmd and then the html will appear as a Github pages for free.

* Rationalize the discussion of distributions and draws, moving sensibly through chapters 2, 3, 5 and 6 with more detail discussion. Students understanding should be solid, especially of what the median and MAD SD mean, before they see it for real in Chapter 7.

* Should use summary(fit_1) and discuss at some point. But when? Maybe Chapter 10?

Do we need a cool graphics appendix, with  brief descriptions, pretty pictures from cool packages like: ggrepel, gghighlights, plotly. Others?

* posterior package useful?

* More discussion of what it means to "control for" something in a regression.

* Are all the graphics too small? Check out R4DS and change the default settings?

* Other posssible issues for chapters 7 and 8: play the prediction game; include nice looking table creation; maybe use tidybayes as well.


* Need discussion of what it means to "control" for. Right now, we don't mention this until chapter 11. Needs to be covered earlier, especially in chapter 9. That sets the stage for later.

* Standardize notation. What are predicted/fitted values? Use y_i everywhere, instead of using problem specific terms? That seems a bad (good?!) idea.

* Generate some error messages and then show that they can teach you something. Object does not exist. filter only have one equal sign, and so on. Do this all the time. Normalize the generation and processing of error messages.

* Discuss base R versus tidyverse so that students are not confused when they see base R. Maybe this is week 3 in functions? And have a tutorial for this.

* Show a couple of distributions (poisson, normal, lognormal) in chapter 2. Maybe mention again in chapter 7. Show why mean might be a bad model! Can use a different families, but all still with one parameter.

* Teach more file management, organization, use of R scripts. (Should have done that in some of the problem sets. Maybe a milestone could require that the graphic is created with a .R script with an image saved and then placed in the app directory.) Maybe add to tools? Create a tutorial for week 4?

* as_tibble_col(), and other things for coercing ppd objects.

* Should "posterior probability distribution"" become "ppd" everywhere?

* Remove all estimand references. Too confusing for this book.


*  Better workflow, automatic (with click confirmation) replacement of docs/ after successful check. Two parts: First, change the check so that it builds the book nicely. (Maybe not necessary. Maybe building the book in junk/ is OK?) Second, move the newly created book --- once it is accepted --- to docs/ on the master branch. Should we be taking multiple branches more seriously. Probably.
  + Things to discuss:
    - This change will prevent authors from easily knitting individual chapters. I will explore alternatives.
    - Two ways of handing auto-building and auot-updating:
      - 1) Create a new development branch. Students will submit PR to that branch. When you are ready, you can send a PR to merge to the master
           branch. The changes will only be live when you merge the development branch to the master branch.
      - 2) Keep things as they are. Once a student submits a PR, the build will directly go into docs/ and if successful, you can accept the PR
           and the new changes to the book will immediately be live. If the build check fails, do not accept the PR or else the deployment might
           break.



## Older Material

Everything below needs to be reviewed and organized.

Interesting resources:

 https://fromthebottomoftheheap.net/2020/04/30/rendering-your-readme-with-github-actions/
 https://github.com/itsyaoyu/github_actions/blob/master/.github/workflows/main.yml
 https://www.willandskill.se/en/deleting-your-git-commit-history-without-removing-repo-on-github-bitbucket/

Discuss how to set a stable version of primary.data which we do not touch all semester, and then have a devel branch in which we are fixing all the mistakes.


Clean up bok repo to test this:

rm -rf .git
git init
git add .
git commit -m "Initial commit"
git remote add origin https://github.com/davidkane9/PPBDS.data.git
git push -u --force origin master

Add necessary references to the references.bib and ensure that they are called correctly.

## Social Media Plan

1) Students look at three main things when deciding to take a course (sent from one of our new followers on Instagram!):
  - Q Guide scores and reviews
  - The professor (or preceptor!)
  - Anecdotal stoties from friends

2) We need more from you! Pictures and vertical videos for Instagram about your everyday life. Students value the human connection even more in remote learning.

3) We also need more from Gov 50 alumn! I have an interactive story that will go up once we hit 250 followers that alumn will share. We can also create sponsored posts/stories if students are interested. I have already approved my personal account and will post a sponsored post soon.

4) Advertising logistics:
  - We can target 18-22 year-old users associated with Harvard College and living in the US.
  - $25 total, $5/day campaign will have an estimated reach of 2,500-6,600 accounts.
  - Depending on your budget, I suggest we run 2-4 of these campaigns in August.
  - Each campaign will promote one of our best performing posts: I have some appropriate memes scheduled to post soon and Q Guide Score Quotes.

## Book Building

* [*Bookdown*](https://bookdown.org/yihui/bookdown/) is the key reference. Build the book by following the instructions in _bookdown.yml. Those instructions end with a deployment to Github Pages via the doc/ directory.

* For structure, we decided to have a single _output.yml file, which each chapter must include as so:
---
output_yaml:
  - _output.yml
---

* To ensure that all references appear, make sure the following is added to index.Rmd header:
---
nocite: '@*'
---

* When adding a new package, you must run renv::snapshot() after installing it in the local renv/library directory. This will update renv.lock, I think. But then how are other people supposed to get that update? We need to document how this is working. Don't forget that new contributors need to run renv::consent(), I think.

## Things That Annoy Us

These are open projects with annoying details that we will revisit.

* ms-errors and simpsons-paradox. What do we do?

## Open Questions

* Need to start using tidybayes and ggdist. https://cran.r-project.org/web/packages/tidybayes/vignettes/tidy-rstanarm.html


* Is there a way to print out messages during the book building process so that you know where the process is? Recall that we can't (?) use R code chunk names because duplicate code chunk names cause (still?) the process to blow up.

* Consider using notes: https://desiree.rbind.io/post/2019/making-tip-boxes-with-bookdown-and-rmarkdown/

* Can you rebuild just a single chapter and then commit/push it? Right now, I have to rebuild the whole thing each time I want to make a single change. Takes too long.



## Other Items


* Take (?) material from: https://chabefer.github.io/STCI/; https://github.com/chabefer/SKY


* Revisit the Prediction Game.

* Add discussion of R constants.

### From the Bookdown book

preview_chapter() and serve_book() as an aid to chapter writers.

webshot() tool for including images taken from webpages. Everytime we mention how cool source X is, we should provide a webshot of it. (And we should test that it exists.) Make the productivity chapter include way less of our prose.



put the book on bookdown.org, or class assignments


Key concepts which need to be put everywhere:

Describe, predict, infer. Description of things you can see, prediction for things you will see and inference about things you will never see.

Prediction checks.

Bias/Variance == Underfitting/Overfittin


https://committedtotape.shinyapps.io/freeR/


Replace all photos of activities with photos from Harvard, using Tsai.


I really like the Kruchke and brms combination: https://bookdown.org/content/3686/



### Use of Note Boxes

https://desiree.rbind.io/post/2019/making-tip-boxes-with-bookdown-and-rmarkdown/


http://statprep.org/

## Other Topics


missing data
regresssion towards the mean

# Notes on **bookdown** Book

p. 64 notes that adding the suffix 2 to various output formats gives you all the cool stuff, like figure captioning and numbering.

p. 74 has a useful discussion of configuration options for the _bookdown.yml file.

* rmd_subdir are subdirectories to search for source Rmd files. That seems critical for my submodule structure.

* output_dir is the output directory of the process (_book by default).

* clean is vector of files and directories to be cleaned by the clean_book() function.

pp. 5-6 discuss rmd_files as the way to define your own ordering for output files. This also goes in the _bookdown.yml file.

Probably worth going through the book again in January.


# Appendices

Appendices have information that either a) a prof might reasonably decide not to assign or b) often contain material that students already know.

* Why Bayes?

* Messed up research articles. We need to prepare case studies of messed up articles. Start with those that Gelman cites. The tricky part is trying to figure out how to include these in class. And during which week do we use them.

* Cartoons like [xkcd](https://cran.r-project.org/package=RXKCD)? Others? We should have lots of these, either in an appendix or as margin notes.

* Videos like [here](https://bookdown.org/yihui/rmarkdown/learnr-videos.html). Use knitr::include_url with embed/id? It is an on-line book, so space is no object! Start by collecting the best work in an appendix.

* All the math you don't need to know. Bayes Theorem. Formulas. Normal distribution. Central limit theorem

* How to Make Tables using gt package, other stuff?

https://themockup.blog/posts/2020-05-16-gt-a-grammer-of-tables/

* List of cool packages, googlesheet4 examples. : https://datavizm20.classes.andrewheiss.com/example/10-example/

* Cool Graphics Things -- ggplotly

* How to make an Rpubs and gists and saveWidgets:
https://datavizm20.classes.andrewheiss.com/example/10-example/

* Tufte and other graphics luminaries

* Leamer and other famous articles

* rtweet (Cassidy)

* Making memes. Someone should figure out which meme maker is best for R. Or maybe we make our own. And then we make lots of memes for the book!

* Map appendix should include some Matt Blackwell examples.

* Entry about best class.

http://zevross.com/blog/2017/06/19/tips-and-tricks-for-working-with-images-and-figures-in-r-markdown-documents/

https://monika76five.github.io/ProbBayes/

* Mention ther data science books like [*Introduction to Data Science* by Tiffany-Anne Timbers, Melissa Lee, and Trevor Campbell](https://ubc-dsci.github.io/introduction-to-datascience/) or [*R for Data Science*](https://r4ds.had.co.nz/dates-and-times.html)

https://nickch-k.github.io/EconometricsSlides/

https://mdbeckman.github.io/JSM2020-Virtual/

Show nest_by()

https://education.rstudio.com/blog/2020/07/gtsummary/
https://moderndive.github.io/moderndive_labs/index.html
https://education.rstudio.com/blog/2020/07/learning-learnr/
https://rmarkdown.rstudio.com/authoring_shiny_prerendered.HTML


## Things to Think About For Next Summer



Drop bootstrap completely and go straight to Bayesian in chapter 7, but demonstrate the good confidence interval coverage of Bayesian models.

styler package

https://storywrangling.org/

https://desiree.rbind.io/post/2019/making-tip-boxes-with-bookdown-and-rmarkdown/ for making pretty boxes in the book

https://github.com/wikimedia/waxer for Wikipedia data

https://github.com/agmath/AppliedStatsInteractive

https://bookdown.org/roback/bookdown-BeyondMLR/

https://dtkaplan.github.io/DataComputingEbook/

https://github.com/moodymudskipper/flow

https://github.com/ucbds-infra/ottr-sample

https://github.com/allisonhorst/stats-illustrations

https://bookdown.org/yihui/rmarkdown-cookbook/equatiomatic.html

Consider Netifly: https://cerebralmastication.com/2019/05/11/publishing-bookdown-to-netlify-automagically/

https://kieranhealy.org/categories/visualization/

https://openintro-ims.netlify.app/ (looks very good!)

